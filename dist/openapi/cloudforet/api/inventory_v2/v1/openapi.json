{
   "openapi": "3.1.0",
   "externalDocs":{
       "description": "Home",
       "url": "/docs"
   },
   "info": {
     "title": "Inventory V2 API",
     "version": "3.1.0"
   },
   "paths":{"/inventory-v2/metric-example/create": {
       "post": {
         "tags": ["inventory-v2 > metric-example"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |metric_id||string|True|\n |name||string|True|\n |options||Struct|True|\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"metric_id" : {"type": "string","title": "METRIC_ID" },"name" : {"type": "string","title": "NAME" },"options" : {"type": "object","title": "OPTIONS" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricExampleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricExampleInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric-example/update": {
       "post": {
         "tags": ["inventory-v2 > metric-example"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |example_id||string|True|\n |name||string||\n |options||Struct||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"example_id" : {"type": "string","title": "EXAMPLE_ID" },"name" : {"type": "string","title": "NAME" },"options" : {"type": "object","title": "OPTIONS" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricExampleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricExampleInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric-example/delete": {
       "post": {
         "tags": ["inventory-v2 > metric-example"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |example_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"example_id" : {"type": "string","title": "EXAMPLE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric-example/get": {
       "post": {
         "tags": ["inventory-v2 > metric-example"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |example_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"example_id" : {"type": "string","title": "EXAMPLE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricExampleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricExampleInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric-example/list": {
       "post": {
         "tags": ["inventory-v2 > metric-example"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |example_id||string||\n |name||string||\n |metric_id||string||\n |namespace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"example_id" : {"type": "string","title": "EXAMPLE_ID" },"name" : {"type": "string","title": "NAME" },"metric_id" : {"type": "string","title": "METRIC_ID" },"namespace_id" : {"type": "string","title": "NAMESPACE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricExamplesInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricExamplesInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric-example/stat": {
       "post": {
         "tags": ["inventory-v2 > metric-example"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job-task/delete": {
       "post": {
         "tags": ["inventory-v2 > job-task"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \nDeletes a specific JobTask. You must specify the `job_task_id` of the JobTask to delete.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |job_task_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"job_task_id" : {"type": "string","title": "JOB_TASK_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"job_task_id\": \"job-task-123456789012\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job-task/get": {
       "post": {
         "tags": ["inventory-v2 > job-task"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \nGets a specific JobTask. Prints detailed information about the JobTask, including its state, updated or failure counts, and error log.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |job_task_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"job_task_id" : {"type": "string","title": "JOB_TASK_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"job_task_id\": \"job-task-123456789012\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/JobTaskInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/JobTaskInfo"},"Default Example":{
                     "value": "{\n     \"job_task_id\": \"job-task-123456789012\",\n     \"status\": \"FAILURE\",\n     \"updated_count\": 199,\n     \"failure_count\": 1,\n     \"errors\": [\n         {\n             \"error_code\": \"ERROR_PLUGIN\",\n             \"message\": \"{\\\"tags\\\": [\\\"Could not interpret the value as a list\\\"]}\",\n             \"additional\": {\n                 \"domain_id\": \"domain-123456789012\",\n                 \"resource_id\": \"eventarc-us-central1-function\",\n                 \"resource_type\": \"inventory.CloudService\",\n                 \"cloud_service_group\": \"Pub/Sub\",\n                 \"cloud_service_type\": \"Subscription\",\n                 \"provider\": \"google_cloud\"\n             }\n         }\n     ],\n     \"job_id\": \"job-123456789012\",\n     \"secret_id\": \"secret-123456789012\",\n     \"provider\": \"google_cloud\",\n     \"service_account_id\": \"sa-123456789012\",\n     \"collector_id\": \"collector-123456789012\",\n     \"project_id\": \"project-123456789012\",\n     \"domain_id\": \"domain-123456789012\",\n     \"created_at\": \"2022-01-01T11:00:02.588Z\",\n     \"started_at\": \"2022-01-01T11:00:02.819Z\",\n     \"finished_at\": \"2022-01-01T11:00:34.398Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job-task/get-detail": {
       "post": {
         "tags": ["inventory-v2 > job-task"],
         "summary": "Get Detail",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |job_task_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"job_task_id" : {"type": "string","title": "JOB_TASK_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"job_task_id\": \"job-task-123456789012\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/JobTaskDetailInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/JobTaskDetailInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job-task/list": {
       "post": {
         "tags": ["inventory-v2 > job-task"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all JobTasks in a specific Job. You can use a query to get a filtered list of JobTasks.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |job_task_id||string||\n |status|PENDING, CANCELED, IN_PROGRESS, SUCCESS, FAILURE |string||\n |provider||string||\n |workspace_id||string||\n |project_id||string||\n |service_account_id||string||\n |job_id||string||\n |secret_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"job_task_id" : {"type": "string","title": "JOB_TASK_ID" },"status" : {"type": "string","title": "STATUS" },"provider" : {"type": "string","title": "PROVIDER" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" },"project_id" : {"type": "string","title": "PROJECT_ID" },"service_account_id" : {"type": "string","title": "SERVICE_ACCOUNT_ID" },"job_id" : {"type": "string","title": "JOB_ID" },"secret_id" : {"type": "string","title": "SECRET_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"query\": {\n       \"filter\": [\n           {\n               \"key\": \"status\",\n               \"value\": \"FAILURE\",\n               \"operator\": \"eq\"\n           }\n       ],\n       \"page\": {\n           \"start\": 1,\n           \"limit\": 5\n       }\n   }\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/JobTasksInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/JobTasksInfo"},"Default Example":{
                     "value": "{\n   \"results\": [\n       {\n           \"job_task_id\": \"job_task-69b301d0fbfc\",\n           \"status\": \"SUCCESS\",\n           \"updated_count\": 55,\n           \"job_id\": \"job-587a3d3b4db3\",\n           \"secret_id\": \"secret-957e407bfc15\",\n           \"provider\": \"aws\",\n           \"service_account_id\": \"sa-a41ff4765671\",\n           \"project_id\": \"project-77dfad3f7cd3\",\n           \"domain_id\": \"domain-58010aa2e451\",\n           \"workspace_id\": \"workspace-78099aa2e451\",\n           \"created_at\": \"2022-06-17T08:00:00.680Z\",\n           \"started_at\": \"2022-06-17T08:00:00.914Z\",\n           \"updated_at\": \"2022-06-17T08:00:00.814Z\",\n           \"finished_at\": \"2022-06-17T08:05:48.933Z\"\n       },\n       {\n           \"job_task_id\": \"job_task-c5077338cf23\",\n           \"status\": \"SUCCESS\",\n           \"created_count\": 123,\n           \"updated_count\": 1921,\n           \"job_id\": \"job-587a3d3b4db3\",\n           \"secret_id\": \"secret-1cd7417c1889\",\n           \"provider\": \"aws\",\n           \"service_account_id\": \"sa-5e186fcc7c91\",\n           \"project_id\": \"project-18655561c535\",\n           \"workspace_id\": \"workspace-1c1b7b7b7b7b\",\n           \"domain_id\": \"domain-58010aa2e451\",\n           \"created_at\": \"2022-06-17T08:00:00.582Z\",\n           \"started_at\": \"2022-06-17T08:00:00.814Z\",\n           \"updated_at\": \"2022-06-17T08:00:00.814Z\",\n           \"finished_at\": \"2022-06-17T08:07:31.995Z\"\n       }\n   ],\n   \"total_count\": 2\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job-task/stat": {
       "post": {
         "tags": ["inventory-v2 > job-task"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace/create": {
       "post": {
         "tags": ["inventory-v2 > namespace"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |name||string|True|\n |category||string|True|\n |resource_group|DOMAIN, WORKSPACE |string|True|\n |namespace_group_id||string|True|\n |namespace_id||string||\n |icon||string||\n |tags||Struct||\n |workspace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"namespace_id" : {"type": "string","title": "NAMESPACE_ID" },"name" : {"type": "string","title": "NAME" },"category" : {"type": "string","title": "CATEGORY" },"icon" : {"type": "string","title": "ICON" },"tags" : {"type": "object","title": "TAGS" },"resource_group" : {"type": "string","title": "RESOURCE_GROUP" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" },"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/NamespaceInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/NamespaceInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace/update": {
       "post": {
         "tags": ["inventory-v2 > namespace"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |namespace_id||string|True|\n |name||string||\n |icon||string||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"namespace_id" : {"type": "string","title": "NAMESPACE_ID" },"name" : {"type": "string","title": "NAME" },"icon" : {"type": "string","title": "ICON" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/NamespaceInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/NamespaceInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace/delete": {
       "post": {
         "tags": ["inventory-v2 > namespace"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |namespace_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"namespace_id" : {"type": "string","title": "NAMESPACE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace/get": {
       "post": {
         "tags": ["inventory-v2 > namespace"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |namespace_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"namespace_id" : {"type": "string","title": "NAMESPACE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/NamespaceInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/NamespaceInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace/list": {
       "post": {
         "tags": ["inventory-v2 > namespace"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |resource_group|DOMAIN, WORKSPACE |string|True|\n |query||Query||\n |namespace_id||string||\n |category||string||\n |exist_only||boolean||\n |workspace_id||string||\n |namespace_group_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"namespace_id" : {"type": "string","title": "NAMESPACE_ID" },"category" : {"type": "string","title": "CATEGORY" },"exist_only" : {"type": "boolean","title": "EXIST_ONLY" },"resource_group" : {"type": "string","title": "RESOURCE_GROUP" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" },"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/NamespacesInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/NamespacesInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace/stat": {
       "post": {
         "tags": ["inventory-v2 > namespace"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job/delete": {
       "post": {
         "tags": ["inventory-v2 > job"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \nDeletes a specific Job. You must specify the `job_id` of the Job to delete.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |job_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"job_id" : {"type": "string","title": "JOB_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"job_id\": \"job-123456789012\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job/get": {
       "post": {
         "tags": ["inventory-v2 > job"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \nGets a specific Job. Prints detailed information about the Job, including its state, total tasks, and collector info.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |job_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"job_id" : {"type": "string","title": "JOB_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"job_id\": \"job-123456789012\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/JobInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/JobInfo"},"Default Example":{
                     "value": "{\n     \"job_id\": \"job-123456789012\",\n     \"status\": \"SUCCESS\",\n     \"total_tasks\": 2,\n     \"success_tasks\": 2,\n     \"request_secret_id: \"secret-123456789012\",\n     \"request_workspace_id\": \"workspace-123456789012\",\n     \"resource_group\": \"WORKSPACE\"\n     \"workspace_id\": \"workspace-123456789012\",\n     \"domain_id\": \"domain-123456789012\",\n     \"created_at\": \"2022-01-01T10:00:01.389Z\",\n     \"updated_at\": \"2022-01-01T10:00:01.389Z\",\n     \"finished_at\": \"2022-01-01T10:02:11.270Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job/list": {
       "post": {
         "tags": ["inventory-v2 > job"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all Jobs. You can use a query to get a filtered list of Jobs.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |job_id||string||\n |status|CANCELED, IN_PROGRESS, SUCCESS, FAILURE, TIMEOUT |string||\n |workspace_id||string||\n |collector_id||string||\n |plugin_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"job_id" : {"type": "string","title": "JOB_ID" },"status" : {"type": "string","title": "STATUS" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" },"collector_id" : {"type": "string","title": "COLLECTOR_ID" },"plugin_id" : {"type": "string","title": "PLUGIN_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"query\": {\n       \"page\": {\n           \"start\": 1,\n           \"limit\": 5\n       }\n   }\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/JobsInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/JobsInfo"},"Default Example":{
                     "value": "{\n   \"results\": [\n       {\n           \"job_id\": \"job-3b124006c2d2\",\n           \"status\": \"SUCCESS\",\n           \"total_tasks\": 2,\n           \"success_tasks\": 2,\n           \"resource_group\": \"DOMAIN\",\n           \"domain_id\": \"domain-58010aa2e451\",\n           \"created_at\": \"2022-06-17T08:00:01.225Z\",\n           \"updated_at\": \"2022-06-17T08:00:01.225Z\",\n           \"finished_at\": \"2022-06-17T08:00:15.197Z\"\n       },\n       {\n           \"job_id\": \"job-587a3d3b4db3\",\n           \"status\": \"IN_PROGRESS\",\n           \"total_tasks\": 3,\n           \"success_tasks\": 1,\n           \"remained_tasks\": 1.\n           \"resource_group\": \"DOMAIN\",\n           \"domain_id\": \"domain-58010aa2e451\",\n           \"created_at\": \"2022-06-17T08:00:00.407Z\",\n           \"updated_at\": \"2022-06-17T08:00:00.407Z\",\n           \"finished_at\": \"2022-06-17T08:07:32.023Z\"\n       },\n       {\n          \"job_id\": \"job-587a3d3b4db3\",\n          \"status\": \"FAILURE\",\n          \"total_tasks\": 3,\n          \"success_tasks\": 1,\n          \"failure_tasks\": 1,\n          \"resource_group\": \"DOMAIN\",\n          \"domain_id\": \"domain-58010aa2e451\",\n          \"created_at\": \"2022-06-17T08:00:00.407Z\",\n          \"updated_at\": \"2022-06-17T08:05:00.407Z\",\n          \"finished_at\": \"2022-06-17T08:10:00.407Z\"\n       }\n\n   ],\n   \"total_count\": 3\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job/analyze": {
       "post": {
         "tags": ["inventory-v2 > job"],
         "summary": "Analyze",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||AnalyzeQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY" }                 }
               },
               "examples":{"Default Example":{"value": "{\n \"query\": {\n     \"group_by\": [\"job_id\", \"status\"],\n     \"page\": {\n       \"start\": 1, \"limit\": 5\n     },\n     \"fields\": {\n       \"total_tasks_sum\": {\n         \"key\": \"total_tasks\",\n         \"operator\": \"sum\"\n        },\n        \"remain_tasks_sum\": {\n           \"key\": \"remain_tasks\",\n           \"operator\": \"sum\"\n        },\n        \"failure_tasks_sum\": {\n           \"key\": \"failure_tasks\",\n           \"operator\": \"sum\"\n        }\n     }\n  }\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/job/stat": {
       "post": {
         "tags": ["inventory-v2 > job"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Default Example":{"value": "{\n \"query\": {\n     \"distinct\": \"status\"\n }"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/create": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \nCreates a new Asset. A Asset instance is created based on data including the `resource`'s attribute values. When creating, the classification information defined by AssetType is also needed. The created Asset has collection information which is the collection history for the `resource` by plugin.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |asset_type_id||string|True|\n |provider||string|True|\n |data||Struct|True|\n |name||string||\n |account||string||\n |ip_addresses||array||\n |metadata||Struct||\n |tags||Struct||\n |region_code||string||\n |project_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"asset_type_id" : {"type": "string","title": "ASSET_TYPE_ID" },"provider" : {"type": "string","title": "PROVIDER" },"name" : {"type": "string","title": "NAME" },"account" : {"type": "string","title": "ACCOUNT" },"ip_addresses" : {"items": {}, "type": "array","title": "IP_ADDRESSES" },"data" : {"type": "object","title": "DATA" },"metadata" : {"type": "object","title": "METADATA" },"tags" : {"type": "object","title": "TAGS" },"region_code" : {"type": "string","title": "REGION_CODE" },"project_id" : {"type": "string","title": "PROJECT_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"cloud_service_type\": \"Key\",\n   \"provider\": \"aws\",\n   \"cloud_service_group\": \"KMS\",\n   \"name\": \"cloud_service_test\",\n   \"account\": \"251340636361\",\n   \"launched_at\": \"2020-08-03T15:00:54.000Z\",\n   \"ip_addresses\": [],\n   \"data\": {\n       \"alias_arn\": null,\n       \"origin\": \"AWS_KMS\",\n       \"cloudwatch\": {\n           \"region_name\": \"ap-northeast-1\",\n           \"namespace\": \"AWS/KMS\",\n           \"dimensions\": [\n               {\n                   \"Value\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n                   \"Name\": \"KeyId\"\n               }\n           ]\n       },\n       \"aws_account_id\": \"251340636361\",\n       \"creation_date\": \"2020-07-09T09:39:03.097000+0000\",\n       \"encryption_algorithms\": [\n           \"SYMMETRIC_DEFAULT\"\n       ],\n       \"key_usage\": \"ENCRYPT_DECRYPT\",\n       \"key_id\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"key_type_path\": \"defaultKeys\",\n       \"key_rotated\": false,\n       \"description\": \"Default master key that protects my Secrets Manager data when no other key is defined\",\n       \"key_state\": \"Enabled\",\n       \"customer_master_key_spec\": \"SYMMETRIC_DEFAULT\",\n       \"enabled\": true,\n       \"arn\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"key_manager\": \"AWS\"\n   },\n   \"metadata\": {},\n   \"reference\": {\n       \"resource_id\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"external_link\": \"https://console.aws.amazon.com/kms/home?region=ap-northeast-1#/kms/defaultKeys/0drda5e1-c40f-45d7-a647-xxxxxxx/\"\n   },\n   \"tags\": {\n       \"a\": \"b\"\n   },\n   \"region_code\": \"ap-northeast-1\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/AssetInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/AssetInfo"},"Default Example":{
                     "value": "{\n   \"cloud_service_id\": \"cloud-svc-c00f38a173e1\",\n   \"name\": \"cloud_service_test\",\n   \"state\": \"ACTIVE\",\n   \"account\": \"251340636361\",\n   \"cloud_service_type\": \"Key\",\n   \"cloud_service_group\": \"KMS\",\n   \"provider\": \"aws\",\n   \"data\": {\n       \"alias_arn\": null,\n       \"origin\": \"AWS_KMS\",\n       \"cloudwatch\": {\n           \"region_name\": \"ap-northeast-1\",\n           \"namespace\": \"AWS/KMS\",\n           \"dimensions\": [\n               {\n                   \"Value\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n                   \"Name\": \"KeyId\"\n               }\n           ]\n       },\n       \"aws_account_id\": \"251340636361\",\n       \"creation_date\": \"2020-07-09T09:39:03.097000+0000\",\n       \"encryption_algorithms\": [\n           \"SYMMETRIC_DEFAULT\"\n       ],\n       \"key_usage\": \"ENCRYPT_DECRYPT\",\n       \"key_id\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"key_type_path\": \"defaultKeys\",\n       \"key_rotated\": false,\n       \"description\": \"Default master key that protects my Secrets Manager data when no other key is defined\",\n       \"key_state\": \"Enabled\",\n       \"customer_master_key_spec\": \"SYMMETRIC_DEFAULT\",\n       \"enabled\": true,\n       \"arn\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"key_manager\": \"AWS\"\n   },\n   \"metadata\": {\n       \"manual\": {}\n   },\n   \"reference\": {\n       \"resource_id\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"external_link\": \"https://console.aws.amazon.com/kms/home?region=ap-northeast-1#/kms/defaultKeys/0drda5e1-c40f-45d7-a647-xxxxxxx/\"\n   },\n   \"tags\": {\n       \"custom\": {\n             \"b\" : \"c\"\n       },\n       \"aws\" : {\n             \"env\": \"dev\"\n       }\n   },\n   \"collection_info\": {\n       \"service_account_id\": \"sa-abcd1234\",\n       \"secret_id\": \"secret-abcd1234\",\n       \"collector_id\": \"collector-abcd1234\",\n       \"last_collected_at\": \"2022-06-22T06:38:48.989Z\"\n   },\n   \"ip_addresses\": [],\n   \"region_code\": \"ap-northeast-1\",\n   \"workspace_id\": \"workspace-58010aa2e451\",\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-06-22T06:38:48.989Z\",\n   \"updated_at\": \"2022-06-22T06:38:48.989Z\",\n   \"launched_at\": \"2020-08-03T15:00:54.000Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/update": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \nUpdates a specific Asset. You can make changes in Asset settings, except for the classification system of Asset and the information about the `resource` attribute value.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |cloud_service_id||string|True|\n |name||string||\n |account||string||\n |instance_type||string||\n |instance_size||float||\n |ip_addresses||array||\n |data||Struct||\n |metadata||Struct||\n |tags||Struct||\n |region_code||string||\n |project_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"cloud_service_id" : {"type": "string","title": "CLOUD_SERVICE_ID" },"name" : {"type": "string","title": "NAME" },"account" : {"type": "string","title": "ACCOUNT" },"instance_type" : {"type": "string","title": "INSTANCE_TYPE" },"instance_size" : {"type": "float","title": "INSTANCE_SIZE" },"ip_addresses" : {"items": {}, "type": "array","title": "IP_ADDRESSES" },"data" : {"type": "object","title": "DATA" },"metadata" : {"type": "object","title": "METADATA" },"tags" : {"type": "object","title": "TAGS" },"region_code" : {"type": "string","title": "REGION_CODE" },"project_id" : {"type": "string","title": "PROJECT_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"cloud_service_id\": \"cloud-svc-c00f38a173e1\",\n   \"name\": \"cloud_service_test2\",\n   \"ip_addresses\": [\n       \"1.1.1.1\",\n       \"2.2.2.2\"\n   ],\n   \"tags\": {\n       \"description\": \"spaceone\"\n   },\n   \"region_code\": \"ap-northeast-2\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/AssetInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/AssetInfo"},"Default Example":{
                     "value": "{\n   \"cloud_service_id\": \"cloud-svc-c00f38a173e1\",\n   \"name\": \"cloud_service_test\",\n   \"state\": \"ACTIVE\",\n   \"account\": \"251340636361\",\n   \"cloud_service_type\": \"Key\",\n   \"cloud_service_group\": \"KMS\",\n   \"provider\": \"aws\",\n   \"data\": {\n       \"alias_arn\": null,\n       \"origin\": \"AWS_KMS\",\n       \"cloudwatch\": {\n           \"region_name\": \"ap-northeast-1\",\n           \"namespace\": \"AWS/KMS\",\n           \"dimensions\": [\n               {\n                   \"Value\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n                   \"Name\": \"KeyId\"\n               }\n           ]\n       },\n       \"aws_account_id\": \"251340636361\",\n       \"creation_date\": \"2020-07-09T09:39:03.097000+0000\",\n       \"encryption_algorithms\": [\n           \"SYMMETRIC_DEFAULT\"\n       ],\n       \"key_usage\": \"ENCRYPT_DECRYPT\",\n       \"key_id\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"key_type_path\": \"defaultKeys\",\n       \"key_rotated\": false,\n       \"description\": \"Default master key that protects my Secrets Manager data when no other key is defined\",\n       \"key_state\": \"Enabled\",\n       \"customer_master_key_spec\": \"SYMMETRIC_DEFAULT\",\n       \"enabled\": true,\n       \"arn\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"key_manager\": \"AWS\"\n   },\n   \"metadata\": {\n       \"manual\": {}\n   },\n   \"reference\": {\n       \"resource_id\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"external_link\": \"https://console.aws.amazon.com/kms/home?region=ap-northeast-1#/kms/defaultKeys/0drda5e1-c40f-45d7-a647-xxxxxxx/\"\n   },\n   \"tags\": {\n       \"custom\": {\n             \"b\" : \"c\"\n       },\n       \"aws\" : {\n             \"env\": \"dev\"\n       }\n   },\n   \"collection_info\": {\n       \"service_account_id\": \"sa-abcd1234\",\n       \"secret_id\": \"secret-abcd1234\",\n       \"collector_id\": \"collector-abcd1234\",\n       \"last_collected_at\": \"2022-06-22T06:38:48.989Z\"\n   },\n   \"ip_addresses\": [],\n   \"region_code\": \"ap-northeast-1\",\n   \"workspace_id\": \"workspace-58010aa2e451\",\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-06-22T06:38:48.989Z\",\n   \"updated_at\": \"2022-06-22T06:38:48.989Z\",\n   \"launched_at\": \"2020-08-03T15:00:54.000Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/delete": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \nDeletes a specific Asset. You must specify the `cloud_service_id` of the Asset to delete.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |asset_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"asset_id" : {"type": "string","title": "ASSET_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"asset_id\": \"asset-fea2b0d32141\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/get": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \nGets a specific Asset. Prints detailed information about the Asset, including its state, classification information, and attribute values.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |asset_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"asset_id" : {"type": "string","title": "ASSET_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"asset_id\": \"asset-fea2b0d32141\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/AssetInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/AssetInfo"},"Default Example":{
                     "value": "{\n   \"cloud_service_id\": \"cloud-svc-c00f38a173e1\",\n   \"name\": \"cloud_service_test\",\n   \"state\": \"ACTIVE\",\n   \"account\": \"251340636361\",\n   \"cloud_service_type\": \"Key\",\n   \"cloud_service_group\": \"KMS\",\n   \"provider\": \"aws\",\n   \"data\": {\n       \"alias_arn\": null,\n       \"origin\": \"AWS_KMS\",\n       \"cloudwatch\": {\n           \"region_name\": \"ap-northeast-1\",\n           \"namespace\": \"AWS/KMS\",\n           \"dimensions\": [\n               {\n                   \"Value\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n                   \"Name\": \"KeyId\"\n               }\n           ]\n       },\n       \"aws_account_id\": \"251340636361\",\n       \"creation_date\": \"2020-07-09T09:39:03.097000+0000\",\n       \"encryption_algorithms\": [\n           \"SYMMETRIC_DEFAULT\"\n       ],\n       \"key_usage\": \"ENCRYPT_DECRYPT\",\n       \"key_id\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"key_type_path\": \"defaultKeys\",\n       \"key_rotated\": false,\n       \"description\": \"Default master key that protects my Secrets Manager data when no other key is defined\",\n       \"key_state\": \"Enabled\",\n       \"customer_master_key_spec\": \"SYMMETRIC_DEFAULT\",\n       \"enabled\": true,\n       \"arn\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"key_manager\": \"AWS\"\n   },\n   \"metadata\": {\n       \"manual\": {}\n   },\n   \"reference\": {\n       \"resource_id\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n       \"external_link\": \"https://console.aws.amazon.com/kms/home?region=ap-northeast-1#/kms/defaultKeys/0drda5e1-c40f-45d7-a647-xxxxxxx/\"\n   },\n   \"tags\": {\n       \"custom\": {\n             \"b\" : \"c\"\n       },\n       \"aws\" : {\n             \"env\": \"dev\"\n       }\n   },\n   \"collection_info\": {\n       \"service_account_id\": \"sa-abcd1234\",\n       \"secret_id\": \"secret-abcd1234\",\n       \"collector_id\": \"collector-abcd1234\",\n       \"last_collected_at\": \"2022-06-22T06:38:48.989Z\"\n   },\n   \"ip_addresses\": [],\n   \"region_code\": \"ap-northeast-1\",\n   \"workspace_id\": \"workspace-58010aa2e451\",\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-06-22T06:38:48.989Z\",\n   \"updated_at\": \"2022-06-22T06:38:48.989Z\",\n   \"launched_at\": \"2020-08-03T15:00:54.000Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/list": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all Assets. You can use a query to get a filtered list of Assets.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |asset_id||string||\n |name||string||\n |state||string||\n |ip_address||string||\n |account||string||\n |asset_type_id||string||\n |provider||string||\n |region_id||string||\n |workspace_id||string||\n |project_id||string||\n |project_group_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"asset_id" : {"type": "string","title": "ASSET_ID" },"name" : {"type": "string","title": "NAME" },"state" : {"type": "string","title": "STATE" },"ip_address" : {"type": "string","title": "IP_ADDRESS" },"account" : {"type": "string","title": "ACCOUNT" },"asset_type_id" : {"type": "string","title": "ASSET_TYPE_ID" },"provider" : {"type": "string","title": "PROVIDER" },"region_id" : {"type": "string","title": "REGION_ID" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" },"project_id" : {"type": "string","title": "PROJECT_ID" },"project_group_id" : {"type": "string","title": "PROJECT_GROUP_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"query\": {\n       \"filter\": [\n           {\n               \"key\": \"asset_type_id\",\n               \"value\": \"Key\",\n               \"operator\": \"eq\"\n           }\n       ]\n   }\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/AssetsInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/AssetsInfo"},"Default Example":{
                     "value": "{\n   \"results\": [{\n       \"cloud_service_id\": \"cloud-svc-c00f38a173e1\",\n       \"name\": \"cloud_service_test2\",\n       \"state\": \"ACTIVE\",\n       \"account\": \"251340636361\",\n       \"cloud_service_type\": \"Key\",\n       \"cloud_service_group\": \"KMS\",\n       \"provider\": \"aws\",\n       \"data\": {\n           \"alias_arn\": null,\n           \"origin\": \"AWS_KMS\",\n           \"cloudwatch\": {\n               \"region_name\": \"ap-northeast-1\",\n               \"namespace\": \"AWS/KMS\",\n               \"dimensions\": [\n                   {\n                       \"Value\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n                       \"Name\": \"KeyId\"\n                   }\n               ]\n           },\n           \"aws_account_id\": \"251340636361\",\n           \"creation_date\": \"2020-07-09T09:39:03.097000+0000\",\n           \"encryption_algorithms\": [\n               \"SYMMETRIC_DEFAULT\"\n           ],\n           \"key_usage\": \"ENCRYPT_DECRYPT\",\n           \"key_id\": \"0drda5e1-c40f-45d7-a647-xxxxxxx\",\n           \"key_type_path\": \"defaultKeys\",\n           \"key_rotated\": false,\n           \"description\": \"Default master key that protects my Secrets Manager data when no other key is defined\",\n           \"key_state\": \"Enabled\",\n           \"customer_master_key_spec\": \"SYMMETRIC_DEFAULT\",\n           \"enabled\": true,\n           \"arn\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n           \"key_manager\": \"AWS\"\n       },\n       \"metadata\": {\n           \"manual\": {}\n       },\n       \"reference\": {\n           \"resource_id\": \"arn:aws:kms:ap-northeast-1:251340636361:key/0drda5e1-c40f-45d7-a647-xxxxxxx\",\n           \"external_link\": \"https://console.aws.amazon.com/kms/home?region=ap-northeast-1#/kms/defaultKeys/0drda5e1-c40f-45d7-a647-xxxxxxx/\"\n       },\n       \"tags\": {\n           \"description\": \"spaceone\"\n       },\n       \"collection_info\": {\n            \"service_account_id\": \"sa-abcd1234\",\n            \"secret_id\": \"secret-abcd1234\",\n            \"collector_id\": \"collector-abcd1234\",\n            \"last_collected_at\": \"2022-06-22T06:38:48.989Z\"\n       },\n       \"ip_addresses\": [\n           \"1.1.1.1\",\n           \"2.2.2.2\"\n       ],\n       \"region_code\": \"ap-northeast-1\",\n       \"workspace_id\": \"workspace-58010aa2e451\",\n       \"domain_id\": \"domain-58010aa2e451\",\n       \"created_at\": \"2022-06-22T06:38:48.989Z\",\n       \"updated_at\": \"2022-06-22T06:38:48.989Z\",\n       \"launched_at\": \"2020-08-03T15:00:54.000Z\"\n   }],\n   \"total_count\": 1\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/export": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "Export",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |options||array|True|\n |file_format|EXCEL, CSV |string||\n |file_name||string||\n |timezone||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"options" : {"items": {"$ref": "#/components/schemas/ExportOption"}, "type": "array","title": "OPTIONS" },"file_format" : {"type": "string","title": "FILE_FORMAT" },"file_name" : {"type": "string","title": "FILE_NAME" },"timezone" : {"type": "string","title": "TIMEZONE" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/history": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "History",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |asset_id||string|True|\n |query||Query||\n |history_id||string||\n |action|CREATE, UPDATE, DELETE |string||\n |updated_by||string||\n |collector_id||string||\n |job_id||string||\n |user_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"history_id" : {"type": "string","title": "HISTORY_ID" },"asset_id" : {"type": "string","title": "ASSET_ID" },"action" : {"type": "string","title": "ACTION" },"updated_by" : {"type": "string","title": "UPDATED_BY" },"collector_id" : {"type": "string","title": "COLLECTOR_ID" },"job_id" : {"type": "string","title": "JOB_ID" },"user_id" : {"type": "string","title": "USER_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/AssetHistoriesInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/AssetHistoriesInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/analyze": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "Analyze",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||AnalyzeQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/asset/stat": {
       "post": {
         "tags": ["inventory-v2 > asset"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric/create": {
       "post": {
         "tags": ["inventory-v2 > metric"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |name||string|True|\n |metric_type|COUNTER, GAUGE |string|True|\n |query_options||AnalyzeQuery|True|\n |namespace_id||string|True|\n |resource_group|DOMAIN, WORKSPACE |string|True|\n |metric_id||string||\n |resource_type||string||\n |date_field||string||\n |unit||string||\n |tags||Struct||\n |workspace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"metric_id" : {"type": "string","title": "METRIC_ID" },"name" : {"type": "string","title": "NAME" },"metric_type" : {"type": "string","title": "METRIC_TYPE" },"resource_type" : {"type": "string","title": "RESOURCE_TYPE" },"query_options" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY_OPTIONS" },"date_field" : {"type": "string","title": "DATE_FIELD" },"unit" : {"type": "string","title": "UNIT" },"tags" : {"type": "object","title": "TAGS" },"namespace_id" : {"type": "string","title": "NAMESPACE_ID" },"resource_group" : {"type": "string","title": "RESOURCE_GROUP" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric/update": {
       "post": {
         "tags": ["inventory-v2 > metric"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |metric_id||string|True|\n |name||string||\n |query_options||AnalyzeQuery||\n |date_field||string||\n |unit||string||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"metric_id" : {"type": "string","title": "METRIC_ID" },"name" : {"type": "string","title": "NAME" },"query_options" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY_OPTIONS" },"date_field" : {"type": "string","title": "DATE_FIELD" },"unit" : {"type": "string","title": "UNIT" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric/delete": {
       "post": {
         "tags": ["inventory-v2 > metric"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |metric_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"metric_id" : {"type": "string","title": "METRIC_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric/run": {
       "post": {
         "tags": ["inventory-v2 > metric"],
         "summary": "Run",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |metric_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"metric_id" : {"type": "string","title": "METRIC_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric/test": {
       "post": {
         "tags": ["inventory-v2 > metric"],
         "summary": "Test",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |metric_id||string|True|\n |query_options||AnalyzeQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"metric_id" : {"type": "string","title": "METRIC_ID" },"query_options" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY_OPTIONS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric/get": {
       "post": {
         "tags": ["inventory-v2 > metric"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |metric_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"metric_id" : {"type": "string","title": "METRIC_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric/list": {
       "post": {
         "tags": ["inventory-v2 > metric"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |metric_id||string||\n |metric_type|COUNTER, GAUGE |string||\n |resource_type||string||\n |is_managed||string||\n |namespace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"metric_id" : {"type": "string","title": "METRIC_ID" },"metric_type" : {"type": "string","title": "METRIC_TYPE" },"resource_type" : {"type": "string","title": "RESOURCE_TYPE" },"is_managed" : {"type": "string","title": "IS_MANAGED" },"namespace_id" : {"type": "string","title": "NAMESPACE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricsInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricsInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric/stat": {
       "post": {
         "tags": ["inventory-v2 > metric"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace-group/create": {
       "post": {
         "tags": ["inventory-v2 > namespace-group"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |name||string|True|\n |icon||string|True|\n |resource_group||string|True|\n |namespace_group_id||string||\n |description||string||\n |tags||Struct||\n |workspace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID" },"name" : {"type": "string","title": "NAME" },"icon" : {"type": "string","title": "ICON" },"description" : {"type": "string","title": "DESCRIPTION" },"tags" : {"type": "object","title": "TAGS" },"resource_group" : {"type": "string","title": "RESOURCE_GROUP" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/NamespaceGroupInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/NamespaceGroupInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace-group/update": {
       "post": {
         "tags": ["inventory-v2 > namespace-group"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |namespace_group_id||string|True|\n |name||string||\n |icon||string||\n |description||string||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID" },"name" : {"type": "string","title": "NAME" },"icon" : {"type": "string","title": "ICON" },"description" : {"type": "string","title": "DESCRIPTION" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/NamespaceGroupInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/NamespaceGroupInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace-group/delete": {
       "post": {
         "tags": ["inventory-v2 > namespace-group"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |namespace_group_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace-group/get": {
       "post": {
         "tags": ["inventory-v2 > namespace-group"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |namespace_group_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/NamespaceGroupInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/NamespaceGroupInfo"},"Default Example":{
                     "value": "{\n\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace-group/list": {
       "post": {
         "tags": ["inventory-v2 > namespace-group"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |namespace_group_id||string||\n |exist_only||boolean||\n |workspace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID" },"exist_only" : {"type": "boolean","title": "EXIST_ONLY" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/NamespaceGroupsInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/NamespaceGroupsInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/namespace-group/stat": {
       "post": {
         "tags": ["inventory-v2 > namespace-group"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/create": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \nCreates a new Collector with information of the plugin to use. Information of the plugin includes `version`, `provider`, and `upgrade_mode`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |name||string|True|\n |plugin_info||PluginInfo|True|\n |resource_group|DOMAIN, WORKSPACE |string|True|\n |schedule||Scheduled||\n |provider||string||\n |secret_filter||SecretFilter||\n |tags||Struct||\n |workspace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"name" : {"type": "string","title": "NAME" },"plugin_info" : {"$ref": "#/components/schemas/PluginInfo","title": "PLUGIN_INFO" },"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE" },"provider" : {"type": "string","title": "PROVIDER" },"secret_filter" : {"$ref": "#/components/schemas/SecretFilter","title": "SECRET_FILTER" },"tags" : {"type": "object","title": "TAGS" },"resource_group" : {"type": "string","title": "RESOURCE_GROUP" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"name\": \"Azure Collector\",\n   \"plugin_info\": {\n       \"plugin_id\": \"plugin-azure-inven-collector\",\n       \"version\": \"1.13.13\",\n       \"options\": {},\n       \"metadata\": {\n           \"filter_format\": [],\n           \"supported_schedules\": [\n               \"hours\"\n           ],\n           \"supported_resource_type\": [\n               \"inventory.CloudService\",\n               \"inventory.CloudServiceType\",\n               \"inventory.Region\"\n           ],\n           \"supported_features\": [\n               \"garbage_collection\"\n           ]\n       },\n       \"upgrade_mode\": \"AUTO\"\n   },\n   \"schedule\": {\n       \"state\": \"ENABLED\",\n       \"hours\": [10, 18]\n   },\n   \"secret_filter\": {\n       \"state\": \"ENABLED\",\n       \"secrets\": [\"secret-xxx\", \"secret-yyy\"],\n       \"service_accounts\": [\"sa-xxx\", \"sa-yyy\"],\n       \"schemas\": [\"schema-xxx\", \"schema-yyy\"]\n   },\n   \"tags\": {\n       \"type\": \"test\"\n   },\n   \"resource_group\": \"DOMAIN\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorInfo"},"Default Example":{
                     "value": "{\n   \"collector_id\": \"collector-2c0847644f39\",\n   \"name\": \"AWS Collector\",\n   \"plugin_info\": {\n       \"plugin_id\": \"plugin-azure-inven-collector\",\n       \"version\": \"1.13.13\",\n       \"options\": {},\n       \"metadata\": {\n           \"supported_schedules\": [\n               \"hours\"\n           ],\n           \"supported_resource_type\": [\n               \"inventory.CloudService\",\n               \"inventory.CloudServiceType\",\n               \"inventory.Region\"\n           ],\n           \"filter_format\": [],\n           \"supported_features\": [\n               \"garbage_collection\"\n           ]\n       },\n       \"upgrade_mode\": \"AUTO\"\n   },\n   \"tags\": {\n       \"type\": \"test\"\n   },\n   \"created_by\": \"wonny@cloudforet.io\",\n   \"provider\": \"aws\",\n   \"schedule\": {\n       \"state\": \"ENABLED\",\n       \"hours\": [0, 6, 12, 18]\n   },\n   \"secret_filter\": {\n       \"state\": \"ENABLED\",\n       \"secrets\": [\"secret-xxx\", \"secret-yyy\"],\n       \"service_accounts\": [\"sa-xxx\", \"sa-yyy\"],\n       \"schemas\": [\"schema-xxx\", \"schema-yyy\"]\n   },\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-06-17T06:33:27.195Z\",\n   \"last_collected_at\": \"2022-06-17T06:33:27.195Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/update": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \nUpdates a specific Collector. You can make changes in Collector settings, including `name` and `tags`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_id||string|True|\n |name||string||\n |schedule||Scheduled||\n |secret_filter||SecretFilter||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_id" : {"type": "string","title": "COLLECTOR_ID" },"name" : {"type": "string","title": "NAME" },"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE" },"secret_filter" : {"$ref": "#/components/schemas/SecretFilter","title": "SECRET_FILTER" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"collector_id\": \"collector-2c0847644f39\",\n   \"name\": \"New Azure Collector\",\n   \"schedule\": {\n       \"state\": \"ENABLED\",\n       \"hours\": [10,18]\n   },\n   \"secret_filter\": {\n       \"state\": \"ENABLED\",\n       \"secrets\": [\"secret-xxx\", \"secret-yyy\"],\n       \"service_accounts\": [\"sa-xxx\", \"sa-yyy\"],\n       \"schemas\": [\"schema-xxx\", \"schema-yyy\"]\n   },\n   \"tags\": {\n       \"a\": \"b\"\n   }\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorInfo"},"Default Example":{
                     "value": "{\n   \"collector_id\": \"collector-2c0847644f39\",\n   \"name\": \"AWS Collector\",\n   \"plugin_info\": {\n       \"plugin_id\": \"plugin-azure-inven-collector\",\n       \"version\": \"1.13.13\",\n       \"options\": {},\n       \"metadata\": {\n           \"supported_schedules\": [\n               \"hours\"\n           ],\n           \"supported_resource_type\": [\n               \"inventory.CloudService\",\n               \"inventory.CloudServiceType\",\n               \"inventory.Region\"\n           ],\n           \"filter_format\": [],\n           \"supported_features\": [\n               \"garbage_collection\"\n           ]\n       },\n       \"upgrade_mode\": \"AUTO\"\n   },\n   \"tags\": {\n       \"type\": \"test\"\n   },\n   \"created_by\": \"wonny@cloudforet.io\",\n   \"provider\": \"aws\",\n   \"schedule\": {\n       \"state\": \"ENABLED\",\n       \"hours\": [0, 6, 12, 18]\n   },\n   \"secret_filter\": {\n       \"state\": \"ENABLED\",\n       \"secrets\": [\"secret-xxx\", \"secret-yyy\"],\n       \"service_accounts\": [\"sa-xxx\", \"sa-yyy\"],\n       \"schemas\": [\"schema-xxx\", \"schema-yyy\"]\n   },\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-06-17T06:33:27.195Z\",\n   \"last_collected_at\": \"2022-06-17T06:33:27.195Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/update-plugin": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "Update Plugin",
         "operationId" : "",
         "description": "### Description \nUpdates the plugin of a specific Collector. This method resets the plugin data in the Collector to update the `metadata`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_id||string|True|\n |version||string||\n |options||Struct||\n |upgrade_mode|MANUAL, AUTO |string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_id" : {"type": "string","title": "COLLECTOR_ID" },"version" : {"type": "string","title": "VERSION" },"options" : {"type": "object","title": "OPTIONS" },"upgrade_mode" : {"type": "string","title": "UPGRADE_MODE" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorInfo"},"Default Example":{
                     "value": "{\n   \"collector_id\": \"collector-2c0847644f39\",\n   \"name\": \"AWS Collector\",\n   \"plugin_info\": {\n       \"plugin_id\": \"plugin-azure-inven-collector\",\n       \"version\": \"1.13.13\",\n       \"options\": {},\n       \"metadata\": {\n           \"supported_schedules\": [\n               \"hours\"\n           ],\n           \"supported_resource_type\": [\n               \"inventory.CloudService\",\n               \"inventory.CloudServiceType\",\n               \"inventory.Region\"\n           ],\n           \"filter_format\": [],\n           \"supported_features\": [\n               \"garbage_collection\"\n           ]\n       },\n       \"upgrade_mode\": \"AUTO\"\n   },\n   \"tags\": {\n       \"type\": \"test\"\n   },\n   \"created_by\": \"wonny@cloudforet.io\",\n   \"provider\": \"aws\",\n   \"schedule\": {\n       \"state\": \"ENABLED\",\n       \"hours\": [0, 6, 12, 18]\n   },\n   \"secret_filter\": {\n       \"state\": \"ENABLED\",\n       \"secrets\": [\"secret-xxx\", \"secret-yyy\"],\n       \"service_accounts\": [\"sa-xxx\", \"sa-yyy\"],\n       \"schemas\": [\"schema-xxx\", \"schema-yyy\"]\n   },\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-06-17T06:33:27.195Z\",\n   \"last_collected_at\": \"2022-06-17T06:33:27.195Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/verify-plugin": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "Verify Plugin",
         "operationId" : "",
         "description": "### Description \nVerifies the plugin of a specific Collector. This method validates the plugin data, `version` and `endpoint`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_id||string|True|\n |secret_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_id" : {"type": "string","title": "COLLECTOR_ID" },"secret_id" : {"type": "string","title": "SECRET_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/delete": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \nDeletes a specific Collector. You must specify the `collector_id` of the Collector to delete.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_id" : {"type": "string","title": "COLLECTOR_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"collector_id\": \"collector-f2e4e9cc7f21\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/get": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \nGets a specific Collector. Prints detailed information about the Collector, including its state, basic information, and the plugin information used for cloud resource collection.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_id" : {"type": "string","title": "COLLECTOR_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"collector_id\": \"collector-f2e4e9cc7f21\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorInfo"},"Default Example":{
                     "value": "{\n   \"collector_id\": \"collector-2c0847644f39\",\n   \"name\": \"AWS Collector\",\n   \"plugin_info\": {\n       \"plugin_id\": \"plugin-azure-inven-collector\",\n       \"version\": \"1.13.13\",\n       \"options\": {},\n       \"metadata\": {\n           \"supported_schedules\": [\n               \"hours\"\n           ],\n           \"supported_resource_type\": [\n               \"inventory.CloudService\",\n               \"inventory.CloudServiceType\",\n               \"inventory.Region\"\n           ],\n           \"filter_format\": [],\n           \"supported_features\": [\n               \"garbage_collection\"\n           ]\n       },\n       \"upgrade_mode\": \"AUTO\"\n   },\n   \"tags\": {\n       \"type\": \"test\"\n   },\n   \"created_by\": \"wonny@cloudforet.io\",\n   \"provider\": \"aws\",\n   \"schedule\": {\n       \"state\": \"ENABLED\",\n       \"hours\": [0, 6, 12, 18]\n   },\n   \"secret_filter\": {\n       \"state\": \"ENABLED\",\n       \"secrets\": [\"secret-xxx\", \"secret-yyy\"],\n       \"service_accounts\": [\"sa-xxx\", \"sa-yyy\"],\n       \"schemas\": [\"schema-xxx\", \"schema-yyy\"]\n   },\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-06-17T06:33:27.195Z\",\n   \"last_collected_at\": \"2022-06-17T06:33:27.195Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/list": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all Collectors. You can use a query to get a filtered list of Collectors.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query|True|\n |collector_id||string|True|\n |name||string|True|\n |secret_filter_state|ENABLED, DISABLED |string|True|\n |schedule_state|ENABLED, DISABLED |string|True|\n |workspace_id||string|True|\n |plugin_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"collector_id" : {"type": "string","title": "COLLECTOR_ID" },"name" : {"type": "string","title": "NAME" },"secret_filter_state" : {"type": "string","title": "SECRET_FILTER_STATE" },"schedule_state" : {"type": "string","title": "SCHEDULE_STATE" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" },"plugin_id" : {"type": "string","title": "PLUGIN_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"query\": {}\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorsInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorsInfo"},"Default Example":{
                     "value": "{\n    \"results\": [\n       {\n         \"collector_id\": \"collector-2c0847644f39\",\n         \"name\": \"AWS Collector\",\n         \"plugin_info\": {\n             \"plugin_id\": \"plugin-30d21ef75a5d\",\n             \"version\": \"1.13.13\",\n             \"options\": {},\n             \"metadata\": {\n                 \"supported_schedules\": [\n                     \"hours\"\n                 ],\n             \"supported_resource_type\": [\n               \"inventory.CloudService\",\n               \"inventory.CloudServiceType\",\n               \"inventory.Region\"\n             ],\n             \"filter_format\": [],\n             \"supported_features\": [\n               \"garbage_collection\"\n             ]\n         },\n         \"upgrade_mode\": \"AUTO\"\n     },\n     \"tags\": {\n         \"type\": \"test\"\n     },\n     \"created_at\": \"2022-06-17T06:33:27.195Z\",\n     \"domain_id\": \"domain-58010aa2e451\",\n     \"provider\": \"aws\",\n     \"schedule\": {\n         \"state\": \"ENABLED\",\n         \"hours\": [0, 6, 12, 18]\n     },\n     \"secret_filter\": {\n         \"state\": \"ENABLED\",\n         \"secrets\": [\"secret-xxx\", \"secret-yyy\"],\n         \"service_accounts\": [\"sa-xxx\", \"sa-yyy\"],\n         \"schemas\": [\"schema-xxx\", \"schema-yyy\"]\n     },\n     \"last_collected_at\": \"2022-06-17T06:33:27.195Z\"\n   },\n   {\n     \"collector_id\": \"collector-2c0847644f39\",\n     \"name\": \"AWS Collector\",\n     \"plugin_info\": {\n         \"plugin_id\": \"plugin-30d21ef75a5d\",\n         \"version\": \"1.13.13\",\n         \"options\": {},\n         \"metadata\": {\n             \"supported_schedules\": [\n                 \"hours\"\n             ],\n             \"supported_resource_type\": [\n                 \"inventory.CloudService\",\n                 \"inventory.CloudServiceType\",\n                 \"inventory.Region\"\n             ],\n             \"filter_format\": [],\n             \"supported_features\": [\n               \"garbage_collection\"\n             ]\n         },\n         \"upgrade_mode\": \"AUTO\"\n     },\n     \"tags\": {\n         \"type\": \"test\"\n     },\n     \"created_at\": \"2022-06-17T06:33:27.195Z\",\n     \"domain_id\": \"domain-58010aa2e451\",\n     \"provider\": \"aws\",\n     \"schedule\": {\n         \"state\": \"ENABLED\",\n         \"hours\": [0, 6, 12, 18]\n     },\n     \"secret_filter\": {\n         \"state\": \"ENABLED\",\n         \"secrets\": [\"secret-xxx\", \"secret-yyy\"],\n         \"service_accounts\": [\"sa-xxx\", \"sa-yyy\"],\n         \"schemas\": [\"schema-xxx\", \"schema-yyy\"]\n     },\n     \"last_collected_at\": \"2022-06-17T06:33:27.195Z\"\n   }\n   ],\n   \"total_count\": 2\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/stat": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector/collect": {
       "post": {
         "tags": ["inventory-v2 > collector"],
         "summary": "Collect",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_id||string|True|\n |secret_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_id" : {"type": "string","title": "COLLECTOR_ID" },"secret_id" : {"type": "string","title": "SECRET_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/JobInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/JobInfo"},"Default Example":{
                     "value": "{\n     \"job_id\": \"job-123456789012\",\n     \"status\": \"SUCCESS\",\n     \"total_tasks\": 2,\n     \"success_tasks\": 2,\n     \"request_secret_id: \"secret-123456789012\",\n     \"request_workspace_id\": \"workspace-123456789012\",\n     \"resource_group\": \"WORKSPACE\"\n     \"workspace_id\": \"workspace-123456789012\",\n     \"domain_id\": \"domain-123456789012\",\n     \"created_at\": \"2022-01-01T10:00:01.389Z\",\n     \"updated_at\": \"2022-01-01T10:00:01.389Z\",\n     \"finished_at\": \"2022-01-01T10:02:11.270Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric-data/list": {
       "post": {
         "tags": ["inventory-v2 > metric-data"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |metric_id||string|True|\n |query||Query||\n |workspace_id||string||\n |project_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"metric_id" : {"type": "string","title": "METRIC_ID" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" },"project_id" : {"type": "string","title": "PROJECT_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/MetricDatasInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/MetricDatasInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric-data/stat": {
       "post": {
         "tags": ["inventory-v2 > metric-data"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n |metric_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" },"metric_id" : {"type": "string","title": "METRIC_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/metric-data/analyze": {
       "post": {
         "tags": ["inventory-v2 > metric-data"],
         "summary": "Analyze",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||TimeSeriesAnalyzeQuery|True|\n |metric_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/TimeSeriesAnalyzeQuery","title": "QUERY" },"metric_id" : {"type": "string","title": "METRIC_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector-rule/create": {
       "post": {
         "tags": ["inventory-v2 > collector-rule"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \nCreates a new CollectorRule. When creating the cloud service, this method can apply two types of conditions: mapping projects where the cloud service incurred to the Cloud Service, and mapping cloud service accounts to the Cloud Service. By adjusting the `condition_policy` parameter, the CollectorRule can be applied when all conditions are met, applied when any of the conditions are met, or always applied regardless of whether the conditions are met.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_id||string|True|\n |conditions_policy|ALL, ANY, ALWAYS |string|True|\n |actions||CollectorRuleActions|True|\n |name||string||\n |conditions||array||\n |options||CollectorRuleOptions||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_id" : {"type": "string","title": "COLLECTOR_ID" },"name" : {"type": "string","title": "NAME" },"conditions" : {"items": {"$ref": "#/components/schemas/CollectorRuleCondition"}, "type": "array","title": "CONDITIONS" },"conditions_policy" : {"type": "string","title": "CONDITIONS_POLICY" },"actions" : {"$ref": "#/components/schemas/CollectorRuleActions","title": "ACTIONS" },"options" : {"$ref": "#/components/schemas/CollectorRuleOptions","title": "OPTIONS" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"name\": \"match_service_account_test\",\n   \"conditions_policy\": \"ALWAYS\",\n   \"actions\": {\n       \"match_service_account\": {\"source\": \"account\", \"target\": \"data.project_id\"}\n   },\n   \"options\": {\"stop_processing\": true},\n   \"tags\": {\"b\": \"c\", \"a\": \"b\"},\n   \"collector_id\": \"collector-2e39891cbbb5\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorRuleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorRuleInfo"},"Default Example":{
                     "value": "{\n   \"collector_rule_id\": \"collector-rule-c8055231e212\",\n   \"name\": \"match_service_account_test\",\n   \"order\": 2,\n   \"conditions_policy\": \"ALWAYS\",\n   \"actions\": {\n       \"match_service_account\": {\n           \"source\": \"account\",\n           \"target\": \"data.project_id\"\n       }\n   },\n   \"options\": {\n       \"stop_processing\": true\n   },\n   \"tags\": {\n       \"a\": \"b\",\n       \"b\": \"c\"\n   },\n   \"collector_id\": \"collector-2e39891cbbb5\",\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-07-19T10:13:28.335Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector-rule/update": {
       "post": {
         "tags": ["inventory-v2 > collector-rule"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \nUpdates a specific CollectorRule. You can make changes in CollectorRule settings, including filtering conditions.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_rule_id||string|True|\n |name||string||\n |conditions||array||\n |conditions_policy|ALL, ANY, ALWAYS |string||\n |actions||CollectorRuleActions||\n |options||CollectorRuleOptions||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID" },"name" : {"type": "string","title": "NAME" },"conditions" : {"items": {"$ref": "#/components/schemas/CollectorRuleCondition"}, "type": "array","title": "CONDITIONS" },"conditions_policy" : {"type": "string","title": "CONDITIONS_POLICY" },"actions" : {"$ref": "#/components/schemas/CollectorRuleActions","title": "ACTIONS" },"options" : {"$ref": "#/components/schemas/CollectorRuleOptions","title": "OPTIONS" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"collector_rule_id\": \"collector-rule-c8055231e212\",\n   \"name\": \"match_service_account_test\",\n   \"conditions_policy\": \"ALWAYS\",\n   \"actions\": {\n       \"match_service_account\": {\n           \"source\": \"account\",\n           \"target\": \"data.project_id\"\n       }\n   },\n   \"options\": {\n       \"stop_processing\": true\n   },\n   \"tags\": {\"b\": \"c\", \"a\": \"b\"}\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorRuleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorRuleInfo"},"Default Example":{
                     "value": "{\n   \"collector_rule_id\": \"collector-rule-c8055231e212\",\n   \"name\": \"match_service_account_test\",\n   \"order\": 2,\n   \"conditions_policy\": \"ALWAYS\",\n   \"actions\": {\n       \"match_service_account\": {\n           \"source\": \"account\",\n           \"target\": \"data.project_id\"\n       }\n   },\n   \"options\": {\n       \"stop_processing\": true\n   },\n   \"tags\": {\n       \"a\": \"b\",\n       \"b\": \"c\"\n   },\n   \"collector_id\": \"collector-2e39891cbbb5\",\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-07-19T10:13:28.335Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector-rule/change-order": {
       "post": {
         "tags": ["inventory-v2 > collector-rule"],
         "summary": "Change Order",
         "operationId" : "",
         "description": "### Description \nChanges the priority order of the CollectorRules to apply. If there are multiple CollectorRules applied in a specific service account, the priority order of the resources is required. This method changes the priority order to apply CollectorRules.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_rule_id||string|True|\n |order||int|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID" },"order" : {"type": "integer","title": "ORDER" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"collector_rule_id\": \"collector-rule-c8055231e212\",\n   \"order\": 2\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorRuleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorRuleInfo"},"Default Example":{
                     "value": "{\n   \"collector_rule_id\": \"collector-rule-c8055231e212\",\n   \"name\": \"match_service_account_test\",\n   \"order\": 2,\n   \"conditions_policy\": \"ALWAYS\",\n   \"actions\": {\n       \"match_service_account\": {\n           \"source\": \"account\",\n           \"target\": \"data.project_id\"\n       }\n   },\n   \"options\": {\n       \"stop_processing\": true\n   },\n   \"tags\": {\n       \"a\": \"b\",\n       \"b\": \"c\"\n   },\n   \"collector_id\": \"collector-2e39891cbbb5\",\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-07-19T10:13:28.335Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector-rule/delete": {
       "post": {
         "tags": ["inventory-v2 > collector-rule"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \nDeletes a specific CollectorRule. You must specify the `collector_rule_id` of the CollectorRule to delete.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_rule_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"collector_rule_id\": \"collector-rule-c8055231e212\",\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector-rule/get": {
       "post": {
         "tags": ["inventory-v2 > collector-rule"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \nGets a specific CollectorRule. Prints detailed information about the CollectorRule, including  `conditions_policy` and conditions applied to Collector.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |collector_rule_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"collector_rule_id\": \"collector-rule-c8055231e212\",\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorRuleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorRuleInfo"},"Default Example":{
                     "value": "{\n   \"collector_rule_id\": \"collector-rule-c8055231e212\",\n   \"name\": \"match_service_account_test\",\n   \"order\": 2,\n   \"conditions_policy\": \"ALWAYS\",\n   \"actions\": {\n       \"match_service_account\": {\n           \"source\": \"account\",\n           \"target\": \"data.project_id\"\n       }\n   },\n   \"options\": {\n       \"stop_processing\": true\n   },\n   \"tags\": {\n       \"a\": \"b\",\n       \"b\": \"c\"\n   },\n   \"collector_id\": \"collector-2e39891cbbb5\",\n   \"domain_id\": \"domain-58010aa2e451\",\n   \"created_at\": \"2022-07-19T10:13:28.335Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector-rule/list": {
       "post": {
         "tags": ["inventory-v2 > collector-rule"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all CollectorRules. You can use a query to get a filtered list of CollectorRules.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |collector_rule_id||string||\n |name||string||\n |rule_type|MANAGED, CUSTOM |string||\n |workspace_id||string||\n |collector_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID" },"name" : {"type": "string","title": "NAME" },"rule_type" : {"type": "string","title": "RULE_TYPE" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" },"collector_id" : {"type": "string","title": "COLLECTOR_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"query\": {}\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/CollectorRulesInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/CollectorRulesInfo"},"Default Example":{
                     "value": "{\n   \"results\": [\n       {\n           \"collector_rule_id\": \"collector-rule-c8055231e212\",\n           \"name\": \"match_service_account\",\n           \"order\": 1,\n           \"conditions_policy\": \"ALWAYS\",\n           \"actions\": {\n               \"match_service_account\": {\n                   \"source\": \"account\",\n                   \"target\": \"data.project_id\"\n               }\n           },\n           \"options\": {\n               \"stop_processing\": true\n           },\n           \"tags\": {},\n           \"collector_id\": \"collector-2e39891cbbb5\",\n           \"domain_id\": \"domain-58010aa2e451\",\n           \"created_at\": \"2022-05-25T16:01:51.858Z\"\n       },\n       {\n           \"collector_rule_id\": \"collector-rule-t3345231e167\",\n           \"name\": \"match_service_account\",\n           \"order\": 1,\n           \"conditions_policy\": \"ALWAYS\",\n           \"actions\": {\n               \"match_service_account\": {\n                   \"source\": \"account\",\n                   \"target\": \"data.account_id\"\n               }\n           },\n           \"options\": {\n               \"stop_processing\": true\n           },\n           \"tags\": {},\n           \"collector_id\": \"collector-7163022d49a1\",\n           \"domain_id\": \"domain-58010aa2e451\",\n           \"created_at\": \"2022-06-03T16:00:54.099Z\"\n       }\n   ],\n   \"total_count\": 2\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/collector-rule/stat": {
       "post": {
         "tags": ["inventory-v2 > collector-rule"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/region/create": {
       "post": {
         "tags": ["inventory-v2 > region"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \nCreates a new Region. As the parameter `region_key`, which is automatically created when a Region is created, is in a form of `{provider}.{region_code}`, it is unique regardless of providers. You can also specify the latitude, longitude, and continent information in `tags`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |name||string|True|\n |region_code||string|True|\n |provider||string|True|\n |resource_group|DOMAIN, WORKSPACE |string|True|\n |tags||Struct||\n |workspace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"name" : {"type": "string","title": "NAME" },"region_code" : {"type": "string","title": "REGION_CODE" },"provider" : {"type": "string","title": "PROVIDER" },"tags" : {"type": "object","title": "TAGS" },"resource_group" : {"type": "string","title": "RESOURCE_GROUP" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/RegionInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/RegionInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/region/update": {
       "post": {
         "tags": ["inventory-v2 > region"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \nUpdates a specific Region. You can make changes in Region settings, including `name` and `tags`. The `tags` contain the continent, latitude, and longitude.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |region_id||string|True|\n |name||string||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"region_id" : {"type": "string","title": "REGION_ID" },"name" : {"type": "string","title": "NAME" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/RegionInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/RegionInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/region/delete": {
       "post": {
         "tags": ["inventory-v2 > region"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \nDeletes a specific Region. You must specify the `region_id` of the Region to delete.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |region_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"region_id" : {"type": "string","title": "REGION_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/region/get": {
       "post": {
         "tags": ["inventory-v2 > region"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \nGets a specific Region. Prints detailed information about the Region, including `name`, `region_code`, and a location coordinate.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |region_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"region_id" : {"type": "string","title": "REGION_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/RegionInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/RegionInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/region/list": {
       "post": {
         "tags": ["inventory-v2 > region"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all Regions. You can use a query to get a filtered list of Regions.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |region_id||string||\n |name||string||\n |region_code||string||\n |provider||string||\n |exists_only||boolean||\n |workspace_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"region_id" : {"type": "string","title": "REGION_ID" },"name" : {"type": "string","title": "NAME" },"region_code" : {"type": "string","title": "REGION_CODE" },"provider" : {"type": "string","title": "PROVIDER" },"exists_only" : {"type": "boolean","title": "EXISTS_ONLY" },"workspace_id" : {"type": "string","title": "WORKSPACE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/RegionsInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/RegionsInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/inventory-v2/region/stat": {
       "post": {
         "tags": ["inventory-v2 > region"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"securitySchemes": {"HTTPBearer": {"type": "http","scheme": "bearer","bearerFormat": "JWT"}}
   },
   "components":{
     "schemas": {
     "CreateMetricExampleRequest": {
         "properties" : {"metric_id" : {"type": "string","title": "METRIC_ID"},"name" : {"type": "string","title": "NAME"},"options" : {"type": "object","title": "OPTIONS"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["metric_id","name","options"],
                "title": "CreateMetricExampleRequest"
           }
           ,        "MetricExampleInfo": {
         "properties" : {"example_id" : {"type": "string","title": "EXAMPLE_ID"},"name" : {"type": "string","title": "NAME"},"options" : {"type": "object","title": "OPTIONS"},"tags" : {"type": "object","title": "TAGS"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"user_id" : {"type": "string","title": "USER_ID"},"metric_id" : {"type": "string","title": "METRIC_ID"},"namespace_id" : {"type": "string","title": "NAMESPACE_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"}},
         "type": "object",
         "required": ["example_id","name","options","tags","domain_id","user_id","metric_id","namespace_id","created_at","updated_at"],
                "title": "MetricExampleInfo"
           }
           ,        "MetricExampleQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"example_id" : {"type": "string","title": "EXAMPLE_ID"},"name" : {"type": "string","title": "NAME"},"metric_id" : {"type": "string","title": "METRIC_ID"},"namespace_id" : {"type": "string","title": "NAMESPACE_ID"}},
         "type": "object",
         "required": [],
                "title": "MetricExampleQuery"
           }
           ,        "MetricExampleRequest": {
         "properties" : {"example_id" : {"type": "string","title": "EXAMPLE_ID"}},
         "type": "object",
         "required": ["example_id"],
                "title": "MetricExampleRequest"
           }
           ,        "MetricExampleStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "MetricExampleStatQuery"
           }
           ,        "MetricExamplesInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/MetricExampleInfo"},
               "type": "array","$ref": "#/components/schemas/MetricExampleInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "MetricExamplesInfo"
           }
           ,        "UpdateMetricExampleRequest": {
         "properties" : {"example_id" : {"type": "string","title": "EXAMPLE_ID"},"name" : {"type": "string","title": "NAME"},"options" : {"type": "object","title": "OPTIONS"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["example_id"],
                "title": "UpdateMetricExampleRequest"
           }
           ,        "VersionInfo": {
         "properties" : {"version" : {"type": "string","title": "VERSION"}},
         "type": "object",
         "required": ["version"],
                "title": "VersionInfo"
           }
           ,        "AuthenticationRequest": {
         "properties" : {"domain_id" : {"type": "string","title": "DOMAIN_ID"}},
         "type": "object",
         "required": ["domain_id"],
                "title": "AuthenticationRequest"
           }
           ,        "AuthenticationResponse": {
         "properties" : {"domain_id" : {"type": "string","title": "DOMAIN_ID"},"public_key" : {"type": "string","title": "PUBLIC_KEY"}},
         "type": "object",
         "required": ["domain_id","public_key"],
                "title": "AuthenticationResponse"
           }
           ,        "AuthorizationRequest": {
         "properties" : {"service" : {"type": "string","title": "SERVICE"},"resource" : {"type": "string","title": "RESOURCE"},"verb" : {"type": "string","title": "VERB"},"scope" : {"type": "Scope","title": "SCOPE"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"project_group_id" : {"type": "string","title": "PROJECT_GROUP_ID"},"user_id" : {"type": "string","title": "USER_ID"},"require_project_id" : {"type": "boolean","title": "REQUIRE_PROJECT_ID"},"require_project_group_id" : {"type": "boolean","title": "REQUIRE_PROJECT_GROUP_ID"},"require_user_id" : {"type": "boolean","title": "REQUIRE_USER_ID"},"require_domain_id" : {"type": "boolean","title": "REQUIRE_DOMAIN_ID"}},
         "type": "object",
         "required": ["service","resource","verb","scope","domain_id","project_id","project_group_id","user_id","require_project_id","require_project_group_id","require_user_id","require_domain_id"],
                "title": "AuthorizationRequest"
           }
           ,        "AuthorizationResponse": {
         "properties" : {"role_type" : {"type": "string","title": "ROLE_TYPE"},"projects" : {"items": {"type": "string"},
               "type": "array","title": "PROJECTS"},"project_groups" : {"items": {"type": "string"},
               "type": "array","title": "PROJECT_GROUPS"}},
         "type": "object",
         "required": ["role_type","projects","project_groups"],
                "title": "AuthorizationResponse"
           }
           ,        "EventRequest": {
         "properties" : {"service" : {"type": "string","title": "SERVICE"},"resource" : {"type": "string","title": "RESOURCE"},"verb" : {"type": "string","title": "VERB"},"status" : {"type": "string","title": "STATUS"},"message" : {"type": "object","title": "MESSAGE"}},
         "type": "object",
         "required": ["service","resource","verb","status","message"],
                "title": "EventRequest"
           }
           ,        "AggregateCount": {
         "properties" : {"name" : {"type": "string","title": "NAME"}},
         "type": "object",
         "required": ["name"],
                "title": "AggregateCount"
           }
           ,        "AggregateGroup": {
         "properties" : {"keys" : {"items": {"$ref": "#/components/schemas/AggregateGroupKey"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupKey","title": "KEYS"},"fields" : {"items": {"$ref": "#/components/schemas/AggregateGroupField"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupField","title": "FIELDS"}},
         "type": "object",
         "required": ["keys","fields"],
                "title": "AggregateGroup"
           }
           ,        "AggregateGroupField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"},"fields" : {"items": {"$ref": "#/components/schemas/AggregateGroupSubField"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupSubField","title": "FIELDS"},"conditions" : {"items": {"$ref": "#/components/schemas/AggregateSubCondition"},
               "type": "array","$ref": "#/components/schemas/AggregateSubCondition","title": "CONDITIONS"}},
         "type": "object",
         "required": ["key","k","name","n","operator","o","fields","conditions"],
                "title": "AggregateGroupField"
           }
           ,        "AggregateGroupKey": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"date_format" : {"type": "string","title": "DATE_FORMAT"}},
         "type": "object",
         "required": ["key","k","name","n","date_format"],
                "title": "AggregateGroupKey"
           }
           ,        "AggregateGroupSubField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"}},
         "type": "object",
         "required": ["key","k","name","n"],
                "title": "AggregateGroupSubField"
           }
           ,        "AggregateProject": {
         "properties" : {"fields" : {"items": {"$ref": "#/components/schemas/AggregateProjectField"},
               "type": "array","$ref": "#/components/schemas/AggregateProjectField","title": "FIELDS"},"exclude_keys" : {"type": "boolean","title": "EXCLUDE_KEYS"}},
         "type": "object",
         "required": ["fields","exclude_keys"],
                "title": "AggregateProject"
           }
           ,        "AggregateProjectField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","name","n","operator","o"],
                "title": "AggregateProjectField"
           }
           ,        "AggregateSort": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"},"keys" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "KEYS"}},
         "type": "object",
         "required": ["key","desc","keys"],
                "title": "AggregateSort"
           }
           ,        "AggregateSubCondition": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"value" : {"type": "Value","title": "VALUE"},"v" : {"type": "Value","title": "V"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","value","v","operator","o"],
                "title": "AggregateSubCondition"
           }
           ,        "AggregateUnwind": {
         "properties" : {"path" : {"type": "string","title": "PATH"}},
         "type": "object",
         "required": ["path"],
                "title": "AggregateUnwind"
           }
           ,        "AnalyzeQuery": {
         "properties" : {"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"field_group" : {"items": {"type": "string"},
               "type": "array","title": "FIELD_GROUP"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["group_by","field_group","filter","filter_or","page","sort","fields","select","keyword"],
                "title": "AnalyzeQuery"
           }
           ,        "ExportAnalyzeQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"keyword" : {"type": "string","title": "KEYWORD"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"}},
         "type": "object",
         "required": ["filter","filter_or","keyword","sort","group_by","fields","select","page"],
                "title": "ExportAnalyzeQuery"
           }
           ,        "ExportOption": {
         "properties" : {"name" : {"type": "string","title": "NAME"},"title" : {"type": "string","title": "TITLE"},"query_type" : {"type": "QueryType","title": "QUERY_TYPE"},"search_query" : {"$ref": "#/components/schemas/ExportSearchQuery","title": "SEARCH_QUERY"},"analyze_query" : {"$ref": "#/components/schemas/ExportAnalyzeQuery","title": "ANALYZE_QUERY"}},
         "type": "object",
         "required": ["name","title","query_type","search_query","analyze_query"],
                "title": "ExportOption"
           }
           ,        "ExportSearchQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"keyword" : {"type": "string","title": "KEYWORD"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "array","title": "FIELDS"},"unwind" : {"$ref": "#/components/schemas/Unwind","title": "UNWIND"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"}},
         "type": "object",
         "required": ["filter","filter_or","keyword","sort","fields","unwind","page"],
                "title": "ExportSearchQuery"
           }
           ,        "Filter": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"value" : {"type": "Value","title": "VALUE"},"v" : {"type": "Value","title": "V"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","value","v","operator","o"],
                "title": "Filter"
           }
           ,        "Page": {
         "properties" : {"start" : {"type": "integer/long","title": "START"},"limit" : {"type": "integer/long","title": "LIMIT"}},
         "type": "object",
         "required": ["start","limit"],
                "title": "Page"
           }
           ,        "Query": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"sort" : {"$ref": "#/components/schemas/Sort","title": "SORT"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"minimal" : {"type": "boolean","title": "MINIMAL"},"count_only" : {"type": "boolean","title": "COUNT_ONLY"},"only" : {"items": {"type": "string"},
               "type": "array","title": "ONLY"},"keyword" : {"type": "string","title": "KEYWORD"},"unwind" : {"$ref": "#/components/schemas/Unwind","title": "UNWIND"}},
         "type": "object",
         "required": ["filter","filter_or","sort","page","minimal","count_only","only","keyword","unwind"],
                "title": "Query"
           }
           ,        "Sort": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"},"keys" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "KEYS"}},
         "type": "object",
         "required": ["key","desc","keys"],
                "title": "Sort"
           }
           ,        "SortKey": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"}},
         "type": "object",
         "required": ["key","desc"],
                "title": "SortKey"
           }
           ,        "StatisticsAggregate": {
         "properties" : {"unwind" : {"$ref": "#/components/schemas/AggregateUnwind","title": "UNWIND"},"group" : {"$ref": "#/components/schemas/AggregateGroup","title": "GROUP"},"count" : {"$ref": "#/components/schemas/AggregateCount","title": "COUNT"},"sort" : {"$ref": "#/components/schemas/AggregateSort","title": "SORT"},"project" : {"$ref": "#/components/schemas/AggregateProject","title": "PROJECT"},"limit" : {"type": "integer","title": "LIMIT"},"skip" : {"type": "integer","title": "SKIP"}},
         "type": "object",
         "required": ["unwind","group","count","sort","project","limit","skip"],
                "title": "StatisticsAggregate"
           }
           ,        "StatisticsQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"aggregate" : {"items": {"$ref": "#/components/schemas/StatisticsAggregate"},
               "type": "array","$ref": "#/components/schemas/StatisticsAggregate","title": "AGGREGATE"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"distinct" : {"type": "string","title": "DISTINCT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["filter","filter_or","aggregate","page","distinct","keyword"],
                "title": "StatisticsQuery"
           }
           ,        "TimeSeriesAnalyzeQuery": {
         "properties" : {"granularity" : {"type": "Granularity","title": "GRANULARITY"},"start" : {"type": "string","title": "START"},"end" : {"type": "string","title": "END"},"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"field_group" : {"items": {"type": "string"},
               "type": "array","title": "FIELD_GROUP"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["granularity","start","end","group_by","field_group","filter","filter_or","page","sort","fields","select","keyword"],
                "title": "TimeSeriesAnalyzeQuery"
           }
           ,        "Unwind": {
         "properties" : {"path" : {"type": "string","title": "PATH"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"}},
         "type": "object",
         "required": ["path","filter"],
                "title": "Unwind"
           }
           ,        "ErrorInfo": {
         "properties" : {"error_code" : {"type": "string","title": "ERROR_CODE"},"message" : {"type": "string","title": "MESSAGE"},"additional" : {"type": "object","title": "ADDITIONAL"}},
         "type": "object",
         "required": ["error_code","message","additional"],
                "title": "ErrorInfo"
           }
           ,        "JobTaskDetailInfo": {
         "properties" : {"job_task_id" : {"type": "string","title": "JOB_TASK_ID"},"created_info" : {"type": "object","title": "CREATED_INFO"},"updated_info" : {"type": "object","title": "UPDATED_INFO"},"failure_info" : {"type": "object","title": "FAILURE_INFO"},"deleted_info" : {"type": "object","title": "DELETED_INFO"},"disconnected_info" : {"type": "object","title": "DISCONNECTED_INFO"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"job_id" : {"type": "string","title": "JOB_ID"},"created_at" : {"type": "string","title": "CREATED_AT"}},
         "type": "object",
         "required": ["job_task_id","created_info","updated_info","failure_info","deleted_info","disconnected_info","domain_id","workspace_id","project_id","job_id","created_at"],
                "title": "JobTaskDetailInfo"
           }
           ,        "JobTaskInfo": {
         "properties" : {"job_task_id" : {"type": "string","title": "JOB_TASK_ID"},"status" : {"type": "string","title": "STATUS"},"provider" : {"type": "string","title": "PROVIDER"},"created_count" : {"type": "integer","title": "CREATED_COUNT"},"updated_count" : {"type": "integer","title": "UPDATED_COUNT"},"failure_count" : {"type": "integer","title": "FAILURE_COUNT"},"deleted_count" : {"type": "integer","title": "DELETED_COUNT"},"disconnected_count" : {"type": "integer","title": "DISCONNECTED_COUNT"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"service_account_id" : {"type": "string","title": "SERVICE_ACCOUNT_ID"},"job_id" : {"type": "string","title": "JOB_ID"},"secret_id" : {"type": "string","title": "SECRET_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"started_at" : {"type": "string","title": "STARTED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"},"finished_at" : {"type": "string","title": "FINISHED_AT"}},
         "type": "object",
         "required": ["job_task_id","status","provider","created_count","updated_count","failure_count","deleted_count","disconnected_count","domain_id","workspace_id","project_id","collector_id","service_account_id","job_id","secret_id","created_at","started_at","updated_at","finished_at"],
                "title": "JobTaskInfo"
           }
           ,        "JobTaskQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"job_task_id" : {"type": "string","title": "JOB_TASK_ID"},"status" : {"type": "string","title": "STATUS"},"provider" : {"type": "string","title": "PROVIDER"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"service_account_id" : {"type": "string","title": "SERVICE_ACCOUNT_ID"},"job_id" : {"type": "string","title": "JOB_ID"},"secret_id" : {"type": "string","title": "SECRET_ID"}},
         "type": "object",
         "required": [],
                "title": "JobTaskQuery"
           }
           ,        "JobTaskRequest": {
         "properties" : {"job_task_id" : {"type": "string","title": "JOB_TASK_ID"}},
         "type": "object",
         "required": ["job_task_id"],
                "title": "JobTaskRequest"
           }
           ,        "JobTaskStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "JobTaskStatQuery"
           }
           ,        "JobTasksInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/JobTaskInfo"},
               "type": "array","$ref": "#/components/schemas/JobTaskInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "JobTasksInfo"
           }
           ,        "CreateNamespaceRequest": {
         "properties" : {"namespace_id" : {"type": "string","title": "NAMESPACE_ID"},"name" : {"type": "string","title": "NAME"},"category" : {"type": "string","title": "CATEGORY"},"icon" : {"type": "string","title": "ICON"},"tags" : {"type": "object","title": "TAGS"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID"}},
         "type": "object",
         "required": ["name","category","resource_group","namespace_group_id"],
                "title": "CreateNamespaceRequest"
           }
           ,        "NamespaceInfo": {
         "properties" : {"namespace_id" : {"type": "string","title": "NAMESPACE_ID"},"name" : {"type": "string","title": "NAME"},"category" : {"type": "string","title": "CATEGORY"},"icon" : {"type": "string","title": "ICON"},"tags" : {"type": "object","title": "TAGS"},"is_managed" : {"type": "boolean","title": "IS_MANAGED"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"}},
         "type": "object",
         "required": ["namespace_id","name","category","icon","tags","is_managed","resource_group","domain_id","workspace_id","namespace_group_id","created_at","updated_at"],
                "title": "NamespaceInfo"
           }
           ,        "NamespaceQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"namespace_id" : {"type": "string","title": "NAMESPACE_ID"},"category" : {"type": "string","title": "CATEGORY"},"exist_only" : {"type": "boolean","title": "EXIST_ONLY"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID"}},
         "type": "object",
         "required": ["resource_group"],
                "title": "NamespaceQuery"
           }
           ,        "NamespaceRequest": {
         "properties" : {"namespace_id" : {"type": "string","title": "NAMESPACE_ID"}},
         "type": "object",
         "required": ["namespace_id"],
                "title": "NamespaceRequest"
           }
           ,        "NamespaceStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "NamespaceStatQuery"
           }
           ,        "NamespacesInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/NamespaceInfo"},
               "type": "array","$ref": "#/components/schemas/NamespaceInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "NamespacesInfo"
           }
           ,        "UpdateNamespaceRequest": {
         "properties" : {"namespace_id" : {"type": "string","title": "NAMESPACE_ID"},"name" : {"type": "string","title": "NAME"},"icon" : {"type": "string","title": "ICON"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["namespace_id"],
                "title": "UpdateNamespaceRequest"
           }
           ,        "JobAnalyzeQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "JobAnalyzeQuery"
           }
           ,        "JobInfo": {
         "properties" : {"job_id" : {"type": "string","title": "JOB_ID"},"status" : {"type": "string","title": "STATUS"},"total_tasks" : {"type": "integer","title": "TOTAL_TASKS"},"remained_tasks" : {"type": "integer","title": "REMAINED_TASKS"},"success_tasks" : {"type": "integer","title": "SUCCESS_TASKS"},"failure_tasks" : {"type": "integer","title": "FAILURE_TASKS"},"request_secret_id" : {"type": "string","title": "REQUEST_SECRET_ID"},"request_workspace_id" : {"type": "string","title": "REQUEST_WORKSPACE_ID"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"plugin_id" : {"type": "string","title": "PLUGIN_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"},"finished_at" : {"type": "string","title": "FINISHED_AT"}},
         "type": "object",
         "required": ["job_id","status","total_tasks","remained_tasks","success_tasks","failure_tasks","request_secret_id","request_workspace_id","resource_group","domain_id","workspace_id","collector_id","plugin_id","created_at","updated_at","finished_at"],
                "title": "JobInfo"
           }
           ,        "JobRequest": {
         "properties" : {"job_id" : {"type": "string","title": "JOB_ID"}},
         "type": "object",
         "required": ["job_id"],
                "title": "JobRequest"
           }
           ,        "JobStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "JobStatQuery"
           }
           ,        "JobsInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/JobInfo"},
               "type": "array","$ref": "#/components/schemas/JobInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "JobsInfo"
           }
           ,        "JobsQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"job_id" : {"type": "string","title": "JOB_ID"},"status" : {"type": "string","title": "STATUS"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"plugin_id" : {"type": "string","title": "PLUGIN_ID"}},
         "type": "object",
         "required": [],
                "title": "JobsQuery"
           }
           ,        "AssetAnalyzeQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "AssetAnalyzeQuery"
           }
           ,        "AssetCreateRequest": {
         "properties" : {"asset_type_id" : {"type": "string","title": "ASSET_TYPE_ID"},"provider" : {"type": "string","title": "PROVIDER"},"name" : {"type": "string","title": "NAME"},"account" : {"type": "string","title": "ACCOUNT"},"ip_addresses" : {"items": {"type": "string"},
               "type": "array","title": "IP_ADDRESSES"},"data" : {"type": "object","title": "DATA"},"metadata" : {"type": "object","title": "METADATA"},"tags" : {"type": "object","title": "TAGS"},"region_code" : {"type": "string","title": "REGION_CODE"},"project_id" : {"type": "string","title": "PROJECT_ID"}},
         "type": "object",
         "required": ["asset_type_id","provider","data"],
                "title": "AssetCreateRequest"
           }
           ,        "AssetExportRequest": {
         "properties" : {"options" : {"items": {"$ref": "#/components/schemas/ExportOption"},
               "type": "array","$ref": "#/components/schemas/ExportOption","title": "OPTIONS"},"file_format" : {"type": "string","title": "FILE_FORMAT"},"file_name" : {"type": "string","title": "FILE_NAME"},"timezone" : {"type": "string","title": "TIMEZONE"}},
         "type": "object",
         "required": ["options"],
                "title": "AssetExportRequest"
           }
           ,        "AssetHistoriesInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/AssetHistoryInfo"},
               "type": "array","$ref": "#/components/schemas/AssetHistoryInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "AssetHistoriesInfo"
           }
           ,        "AssetHistoryInfo": {
         "properties" : {"history_id" : {"type": "string","title": "HISTORY_ID"},"asset_id" : {"type": "string","title": "ASSET_ID"},"action" : {"type": "string","title": "ACTION"},"diff" : {"items": {"type": "object"},
               "type": "array","title": "DIFF"},"diff_count" : {"type": "integer","title": "DIFF_COUNT"},"updated_by" : {"type": "string","title": "UPDATED_BY"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"job_id" : {"type": "string","title": "JOB_ID"},"user_id" : {"type": "string","title": "USER_ID"},"created_at" : {"type": "string","title": "CREATED_AT"}},
         "type": "object",
         "required": ["history_id","asset_id","action","diff","diff_count","updated_by","domain_id","collector_id","job_id","user_id","created_at"],
                "title": "AssetHistoryInfo"
           }
           ,        "AssetHistoryQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"history_id" : {"type": "string","title": "HISTORY_ID"},"asset_id" : {"type": "string","title": "ASSET_ID"},"action" : {"type": "string","title": "ACTION"},"updated_by" : {"type": "string","title": "UPDATED_BY"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"job_id" : {"type": "string","title": "JOB_ID"},"user_id" : {"type": "string","title": "USER_ID"}},
         "type": "object",
         "required": ["asset_id"],
                "title": "AssetHistoryQuery"
           }
           ,        "AssetInfo": {
         "properties" : {"asset_id" : {"type": "string","title": "ASSET_ID"},"name" : {"type": "string","title": "NAME"},"state" : {"type": "string","title": "STATE"},"ip_addresses" : {"items": {"type": "string"},
               "type": "array","title": "IP_ADDRESSES"},"account" : {"type": "string","title": "ACCOUNT"},"asset_type_id" : {"type": "string","title": "ASSET_TYPE_ID"},"provider" : {"type": "string","title": "PROVIDER"},"data" : {"type": "object","title": "DATA"},"tags" : {"type": "object","title": "TAGS"},"region_id" : {"type": "string","title": "REGION_ID"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"service_account_id" : {"type": "string","title": "SERVICE_ACCOUNT_ID"},"secret_id" : {"type": "string","title": "SECRET_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"},"deleted_at" : {"type": "string","title": "DELETED_AT"}},
         "type": "object",
         "required": ["asset_id","name","state","ip_addresses","account","asset_type_id","provider","data","tags","region_id","domain_id","workspace_id","project_id","collector_id","service_account_id","secret_id","created_at","updated_at","deleted_at"],
                "title": "AssetInfo"
           }
           ,        "AssetQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"asset_id" : {"type": "string","title": "ASSET_ID"},"name" : {"type": "string","title": "NAME"},"state" : {"type": "string","title": "STATE"},"ip_address" : {"type": "string","title": "IP_ADDRESS"},"account" : {"type": "string","title": "ACCOUNT"},"asset_type_id" : {"type": "string","title": "ASSET_TYPE_ID"},"provider" : {"type": "string","title": "PROVIDER"},"region_id" : {"type": "string","title": "REGION_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"project_group_id" : {"type": "string","title": "PROJECT_GROUP_ID"}},
         "type": "object",
         "required": [],
                "title": "AssetQuery"
           }
           ,        "AssetRequest": {
         "properties" : {"asset_id" : {"type": "string","title": "ASSET_ID"}},
         "type": "object",
         "required": ["asset_id"],
                "title": "AssetRequest"
           }
           ,        "AssetStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "AssetStatQuery"
           }
           ,        "AssetsInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/AssetInfo"},
               "type": "array","$ref": "#/components/schemas/AssetInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "AssetsInfo"
           }
           ,        "UpdateAssetRequest": {
         "properties" : {"cloud_service_id" : {"type": "string","title": "CLOUD_SERVICE_ID"},"name" : {"type": "string","title": "NAME"},"account" : {"type": "string","title": "ACCOUNT"},"instance_type" : {"type": "string","title": "INSTANCE_TYPE"},"instance_size" : {"type": "float","title": "INSTANCE_SIZE"},"ip_addresses" : {"items": {"type": "string"},
               "type": "array","title": "IP_ADDRESSES"},"data" : {"type": "object","title": "DATA"},"metadata" : {"type": "object","title": "METADATA"},"tags" : {"type": "object","title": "TAGS"},"region_code" : {"type": "string","title": "REGION_CODE"},"project_id" : {"type": "string","title": "PROJECT_ID"}},
         "type": "object",
         "required": ["cloud_service_id"],
                "title": "UpdateAssetRequest"
           }
           ,        "CreateMetricRequest": {
         "properties" : {"metric_id" : {"type": "string","title": "METRIC_ID"},"name" : {"type": "string","title": "NAME"},"metric_type" : {"type": "string","title": "METRIC_TYPE"},"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"query_options" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY_OPTIONS"},"date_field" : {"type": "string","title": "DATE_FIELD"},"unit" : {"type": "string","title": "UNIT"},"tags" : {"type": "object","title": "TAGS"},"namespace_id" : {"type": "string","title": "NAMESPACE_ID"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"}},
         "type": "object",
         "required": ["name","metric_type","query_options","namespace_id","resource_group"],
                "title": "CreateMetricRequest"
           }
           ,        "MetricInfo": {
         "properties" : {"metric_id" : {"type": "string","title": "METRIC_ID"},"name" : {"type": "string","title": "NAME"},"metric_type" : {"type": "string","title": "METRIC_TYPE"},"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"query_options" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY_OPTIONS"},"date_field" : {"type": "string","title": "DATE_FIELD"},"unit" : {"type": "string","title": "UNIT"},"tags" : {"type": "object","title": "TAGS"},"labels_info" : {"items": {"type": "object"},
               "type": "array","title": "LABELS_INFO"},"is_managed" : {"type": "boolean","title": "IS_MANAGED"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"namespace_id" : {"type": "string","title": "NAMESPACE_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"}},
         "type": "object",
         "required": ["metric_id","name","metric_type","resource_type","query_options","date_field","unit","tags","labels_info","is_managed","resource_group","domain_id","workspace_id","namespace_id","created_at","updated_at"],
                "title": "MetricInfo"
           }
           ,        "MetricQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"metric_id" : {"type": "string","title": "METRIC_ID"},"metric_type" : {"type": "string","title": "METRIC_TYPE"},"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"is_managed" : {"type": "string","title": "IS_MANAGED"},"namespace_id" : {"type": "string","title": "NAMESPACE_ID"}},
         "type": "object",
         "required": [],
                "title": "MetricQuery"
           }
           ,        "MetricRequest": {
         "properties" : {"metric_id" : {"type": "string","title": "METRIC_ID"}},
         "type": "object",
         "required": ["metric_id"],
                "title": "MetricRequest"
           }
           ,        "MetricStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "MetricStatQuery"
           }
           ,        "MetricTestRequest": {
         "properties" : {"metric_id" : {"type": "string","title": "METRIC_ID"},"query_options" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY_OPTIONS"}},
         "type": "object",
         "required": ["metric_id","query_options"],
                "title": "MetricTestRequest"
           }
           ,        "MetricsInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/MetricInfo"},
               "type": "array","$ref": "#/components/schemas/MetricInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "MetricsInfo"
           }
           ,        "UpdateMetricRequest": {
         "properties" : {"metric_id" : {"type": "string","title": "METRIC_ID"},"name" : {"type": "string","title": "NAME"},"query_options" : {"$ref": "#/components/schemas/AnalyzeQuery","title": "QUERY_OPTIONS"},"date_field" : {"type": "string","title": "DATE_FIELD"},"unit" : {"type": "string","title": "UNIT"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["metric_id"],
                "title": "UpdateMetricRequest"
           }
           ,        "CreateNamespaceGroupRequest": {
         "properties" : {"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID"},"name" : {"type": "string","title": "NAME"},"icon" : {"type": "string","title": "ICON"},"description" : {"type": "string","title": "DESCRIPTION"},"tags" : {"type": "object","title": "TAGS"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"}},
         "type": "object",
         "required": ["name","icon","resource_group"],
                "title": "CreateNamespaceGroupRequest"
           }
           ,        "NamespaceGroupInfo": {
         "properties" : {"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID"},"name" : {"type": "string","title": "NAME"},"icon" : {"type": "string","title": "ICON"},"description" : {"type": "string","title": "DESCRIPTION"},"tags" : {"type": "object","title": "TAGS"},"is_managed" : {"type": "boolean","title": "IS_MANAGED"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"}},
         "type": "object",
         "required": ["namespace_group_id","name","icon","is_managed","resource_group","domain_id","workspace_id","created_at","updated_at"],
                "title": "NamespaceGroupInfo"
           }
           ,        "NamespaceGroupQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID"},"exist_only" : {"type": "boolean","title": "EXIST_ONLY"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"}},
         "type": "object",
         "required": [],
                "title": "NamespaceGroupQuery"
           }
           ,        "NamespaceGroupRequest": {
         "properties" : {"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID"}},
         "type": "object",
         "required": ["namespace_group_id"],
                "title": "NamespaceGroupRequest"
           }
           ,        "NamespaceGroupStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "NamespaceGroupStatQuery"
           }
           ,        "NamespaceGroupsInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/NamespaceGroupInfo"},
               "type": "array","$ref": "#/components/schemas/NamespaceGroupInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "NamespaceGroupsInfo"
           }
           ,        "UpdateNamespaceGroupRequest": {
         "properties" : {"namespace_group_id" : {"type": "string","title": "NAMESPACE_GROUP_ID"},"name" : {"type": "string","title": "NAME"},"icon" : {"type": "string","title": "ICON"},"description" : {"type": "string","title": "DESCRIPTION"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["namespace_group_id"],
                "title": "UpdateNamespaceGroupRequest"
           }
           ,        "CollectRequest": {
         "properties" : {"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"secret_id" : {"type": "string","title": "SECRET_ID"}},
         "type": "object",
         "required": ["collector_id"],
                "title": "CollectRequest"
           }
           ,        "CollectorInfo": {
         "properties" : {"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"name" : {"type": "string","title": "NAME"},"provider" : {"type": "string","title": "PROVIDER"},"secret_filter" : {"$ref": "#/components/schemas/SecretFilter","title": "SECRET_FILTER"},"plugin_info" : {"$ref": "#/components/schemas/PluginInfo","title": "PLUGIN_INFO"},"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE"},"tags" : {"type": "object","title": "TAGS"},"created_by" : {"type": "string","title": "CREATED_BY"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"},"last_collected_at" : {"type": "string","title": "LAST_COLLECTED_AT"}},
         "type": "object",
         "required": ["collector_id","name","provider","secret_filter","plugin_info","schedule","tags","created_by","resource_group","domain_id","workspace_id","created_at","updated_at","last_collected_at"],
                "title": "CollectorInfo"
           }
           ,        "CollectorQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"name" : {"type": "string","title": "NAME"},"secret_filter_state" : {"type": "string","title": "SECRET_FILTER_STATE"},"schedule_state" : {"type": "string","title": "SCHEDULE_STATE"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"plugin_id" : {"type": "string","title": "PLUGIN_ID"}},
         "type": "object",
         "required": ["query","collector_id","name","secret_filter_state","schedule_state","workspace_id","plugin_id"],
                "title": "CollectorQuery"
           }
           ,        "CollectorRequest": {
         "properties" : {"collector_id" : {"type": "string","title": "COLLECTOR_ID"}},
         "type": "object",
         "required": ["collector_id"],
                "title": "CollectorRequest"
           }
           ,        "CollectorStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "CollectorStatQuery"
           }
           ,        "CollectorsInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/CollectorInfo"},
               "type": "array","$ref": "#/components/schemas/CollectorInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "CollectorsInfo"
           }
           ,        "CreateCollectorRequest": {
         "properties" : {"name" : {"type": "string","title": "NAME"},"plugin_info" : {"$ref": "#/components/schemas/PluginInfo","title": "PLUGIN_INFO"},"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE"},"provider" : {"type": "string","title": "PROVIDER"},"secret_filter" : {"$ref": "#/components/schemas/SecretFilter","title": "SECRET_FILTER"},"tags" : {"type": "object","title": "TAGS"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"}},
         "type": "object",
         "required": ["name","plugin_info","resource_group"],
                "title": "CreateCollectorRequest"
           }
           ,        "PluginInfo": {
         "properties" : {"plugin_id" : {"type": "string","title": "PLUGIN_ID"},"version" : {"type": "string","title": "VERSION"},"options" : {"type": "object","title": "OPTIONS"},"metadata" : {"type": "object","title": "METADATA"},"upgrade_mode" : {"type": "string","title": "UPGRADE_MODE"}},
         "type": "object",
         "required": ["plugin_id","version","options","metadata","upgrade_mode"],
                "title": "PluginInfo"
           }
           ,        "Scheduled": {
         "properties" : {"state" : {"type": "string","title": "STATE"},"hours" : {"items": {"type": "integer"},
               "type": "array","title": "HOURS"}},
         "type": "object",
         "required": ["state","hours"],
                "title": "Scheduled"
           }
           ,        "SecretFilter": {
         "properties" : {"state" : {"type": "string","title": "STATE"},"secrets" : {"items": {"type": "string"},
               "type": "array","title": "SECRETS"},"service_accounts" : {"items": {"type": "string"},
               "type": "array","title": "SERVICE_ACCOUNTS"},"schemas" : {"items": {"type": "string"},
               "type": "array","title": "SCHEMAS"},"exclude_secrets" : {"items": {"type": "string"},
               "type": "array","title": "EXCLUDE_SECRETS"},"exclude_service_accounts" : {"items": {"type": "string"},
               "type": "array","title": "EXCLUDE_SERVICE_ACCOUNTS"},"exclude_schemas" : {"items": {"type": "string"},
               "type": "array","title": "EXCLUDE_SCHEMAS"}},
         "type": "object",
         "required": ["state","secrets","service_accounts","schemas","exclude_secrets","exclude_service_accounts","exclude_schemas"],
                "title": "SecretFilter"
           }
           ,        "UpdateCollectorRequest": {
         "properties" : {"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"name" : {"type": "string","title": "NAME"},"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE"},"secret_filter" : {"$ref": "#/components/schemas/SecretFilter","title": "SECRET_FILTER"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["collector_id"],
                "title": "UpdateCollectorRequest"
           }
           ,        "UpdatePluginRequest": {
         "properties" : {"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"version" : {"type": "string","title": "VERSION"},"options" : {"type": "object","title": "OPTIONS"},"upgrade_mode" : {"type": "string","title": "UPGRADE_MODE"}},
         "type": "object",
         "required": ["collector_id"],
                "title": "UpdatePluginRequest"
           }
           ,        "VerifyPluginRequest": {
         "properties" : {"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"secret_id" : {"type": "string","title": "SECRET_ID"}},
         "type": "object",
         "required": ["collector_id"],
                "title": "VerifyPluginRequest"
           }
           ,        "MetricDataAnalyzeQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/TimeSeriesAnalyzeQuery","title": "QUERY"},"metric_id" : {"type": "string","title": "METRIC_ID"}},
         "type": "object",
         "required": ["query","metric_id"],
                "title": "MetricDataAnalyzeQuery"
           }
           ,        "MetricDataInfo": {
         "properties" : {"metric_id" : {"type": "string","title": "METRIC_ID"},"value" : {"type": "float","title": "VALUE"},"unit" : {"type": "string","title": "UNIT"},"labels" : {"type": "object","title": "LABELS"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"service_account_id" : {"type": "string","title": "SERVICE_ACCOUNT_ID"},"namespace_id" : {"type": "string","title": "NAMESPACE_ID"},"created_year" : {"type": "string","title": "CREATED_YEAR"},"created_month" : {"type": "string","title": "CREATED_MONTH"},"created_date" : {"type": "string","title": "CREATED_DATE"}},
         "type": "object",
         "required": ["metric_id","value","unit","labels","domain_id","workspace_id","project_id","service_account_id","namespace_id","created_year","created_month","created_date"],
                "title": "MetricDataInfo"
           }
           ,        "MetricDataQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"metric_id" : {"type": "string","title": "METRIC_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"}},
         "type": "object",
         "required": ["metric_id"],
                "title": "MetricDataQuery"
           }
           ,        "MetricDataStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"},"metric_id" : {"type": "string","title": "METRIC_ID"}},
         "type": "object",
         "required": ["query"],
                "title": "MetricDataStatQuery"
           }
           ,        "MetricDatasInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/MetricDataInfo"},
               "type": "array","$ref": "#/components/schemas/MetricDataInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "MetricDatasInfo"
           }
           ,        "ChangeCollectorRuleOrderRequest": {
         "properties" : {"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID"},"order" : {"type": "integer","title": "ORDER"}},
         "type": "object",
         "required": ["collector_rule_id","order"],
                "title": "ChangeCollectorRuleOrderRequest"
           }
           ,        "CollectorRuleActions": {
         "properties" : {"change_project" : {"type": "string","title": "CHANGE_PROJECT"},"match_project" : {"$ref": "#/components/schemas/MatchRule","title": "MATCH_PROJECT"},"match_service_account" : {"$ref": "#/components/schemas/MatchRule","title": "MATCH_SERVICE_ACCOUNT"},"add_additional_info" : {"type": "object","title": "ADD_ADDITIONAL_INFO"}},
         "type": "object",
         "required": ["change_project","match_project","match_service_account","add_additional_info"],
                "title": "CollectorRuleActions"
           }
           ,        "CollectorRuleCondition": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"value" : {"type": "string","title": "VALUE"},"operator" : {"type": "string","title": "OPERATOR"}},
         "type": "object",
         "required": ["key","value","operator"],
                "title": "CollectorRuleCondition"
           }
           ,        "CollectorRuleInfo": {
         "properties" : {"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID"},"name" : {"type": "string","title": "NAME"},"rule_type" : {"type": "string","title": "RULE_TYPE"},"order" : {"type": "integer","title": "ORDER"},"conditions" : {"items": {"$ref": "#/components/schemas/CollectorRuleCondition"},
               "type": "array","$ref": "#/components/schemas/CollectorRuleCondition","title": "CONDITIONS"},"conditions_policy" : {"type": "string","title": "CONDITIONS_POLICY"},"actions" : {"$ref": "#/components/schemas/CollectorRuleActions","title": "ACTIONS"},"options" : {"$ref": "#/components/schemas/CollectorRuleOptions","title": "OPTIONS"},"tags" : {"type": "object","title": "TAGS"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"}},
         "type": "object",
         "required": ["collector_rule_id","name","rule_type","order","conditions","conditions_policy","actions","options","tags","resource_group","domain_id","workspace_id","collector_id","created_at","updated_at"],
                "title": "CollectorRuleInfo"
           }
           ,        "CollectorRuleOptions": {
         "properties" : {"stop_processing" : {"type": "boolean","title": "STOP_PROCESSING"}},
         "type": "object",
         "required": ["stop_processing"],
                "title": "CollectorRuleOptions"
           }
           ,        "CollectorRuleQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID"},"name" : {"type": "string","title": "NAME"},"rule_type" : {"type": "string","title": "RULE_TYPE"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"collector_id" : {"type": "string","title": "COLLECTOR_ID"}},
         "type": "object",
         "required": [],
                "title": "CollectorRuleQuery"
           }
           ,        "CollectorRuleRequest": {
         "properties" : {"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID"}},
         "type": "object",
         "required": ["collector_rule_id"],
                "title": "CollectorRuleRequest"
           }
           ,        "CollectorRuleStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "CollectorRuleStatQuery"
           }
           ,        "CollectorRulesInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/CollectorRuleInfo"},
               "type": "array","$ref": "#/components/schemas/CollectorRuleInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "CollectorRulesInfo"
           }
           ,        "CreateCollectorRuleRequest": {
         "properties" : {"collector_id" : {"type": "string","title": "COLLECTOR_ID"},"name" : {"type": "string","title": "NAME"},"conditions" : {"items": {"$ref": "#/components/schemas/CollectorRuleCondition"},
               "type": "array","$ref": "#/components/schemas/CollectorRuleCondition","title": "CONDITIONS"},"conditions_policy" : {"type": "string","title": "CONDITIONS_POLICY"},"actions" : {"$ref": "#/components/schemas/CollectorRuleActions","title": "ACTIONS"},"options" : {"$ref": "#/components/schemas/CollectorRuleOptions","title": "OPTIONS"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["collector_id","conditions_policy","actions"],
                "title": "CreateCollectorRuleRequest"
           }
           ,        "MatchRule": {
         "properties" : {"source" : {"type": "string","title": "SOURCE"},"target" : {"type": "string","title": "TARGET"}},
         "type": "object",
         "required": ["source","target"],
                "title": "MatchRule"
           }
           ,        "UpdateCollectorRuleRequest": {
         "properties" : {"collector_rule_id" : {"type": "string","title": "COLLECTOR_RULE_ID"},"name" : {"type": "string","title": "NAME"},"conditions" : {"items": {"$ref": "#/components/schemas/CollectorRuleCondition"},
               "type": "array","$ref": "#/components/schemas/CollectorRuleCondition","title": "CONDITIONS"},"conditions_policy" : {"type": "string","title": "CONDITIONS_POLICY"},"actions" : {"$ref": "#/components/schemas/CollectorRuleActions","title": "ACTIONS"},"options" : {"$ref": "#/components/schemas/CollectorRuleOptions","title": "OPTIONS"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["collector_rule_id"],
                "title": "UpdateCollectorRuleRequest"
           }
           ,        "CreateRegionRequest": {
         "properties" : {"name" : {"type": "string","title": "NAME"},"region_code" : {"type": "string","title": "REGION_CODE"},"provider" : {"type": "string","title": "PROVIDER"},"tags" : {"type": "object","title": "TAGS"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"}},
         "type": "object",
         "required": ["name","region_code","provider","resource_group"],
                "title": "CreateRegionRequest"
           }
           ,        "RegionInfo": {
         "properties" : {"region_id" : {"type": "string","title": "REGION_ID"},"name" : {"type": "string","title": "NAME"},"region_code" : {"type": "string","title": "REGION_CODE"},"provider" : {"type": "string","title": "PROVIDER"},"tags" : {"type": "object","title": "TAGS"},"resource_group" : {"type": "string","title": "RESOURCE_GROUP"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"}},
         "type": "object",
         "required": ["region_id","name","region_code","provider","tags","resource_group","domain_id","workspace_id","created_at","updated_at"],
                "title": "RegionInfo"
           }
           ,        "RegionQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"region_id" : {"type": "string","title": "REGION_ID"},"name" : {"type": "string","title": "NAME"},"region_code" : {"type": "string","title": "REGION_CODE"},"provider" : {"type": "string","title": "PROVIDER"},"exists_only" : {"type": "boolean","title": "EXISTS_ONLY"},"workspace_id" : {"type": "string","title": "WORKSPACE_ID"}},
         "type": "object",
         "required": [],
                "title": "RegionQuery"
           }
           ,        "RegionRequest": {
         "properties" : {"region_id" : {"type": "string","title": "REGION_ID"}},
         "type": "object",
         "required": ["region_id"],
                "title": "RegionRequest"
           }
           ,        "RegionStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "RegionStatQuery"
           }
           ,        "RegionsInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/RegionInfo"},
               "type": "array","$ref": "#/components/schemas/RegionInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "RegionsInfo"
           }
           ,        "UpdateRegionRequest": {
         "properties" : {"region_id" : {"type": "string","title": "REGION_ID"},"name" : {"type": "string","title": "NAME"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["region_id"],
                "title": "UpdateRegionRequest"
           }
                   },
      "Struct": {"properties": {"type": "object","title": "Struct"}},
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
       },
       "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [{"type": "string"}, {"type": "integer"}]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {"type": "string","title": "Message"},
          "type": {"type": "string","title": "Error Type"}
        },
        "type": "object",
        "required": ["loc","msg","type"],
        "title": "ValidationError"
      },
      "securitySchemes": {"HTTPBearer": {"type": "http","scheme": "bearer"}
      }
   }
}