{
   "openapi": "3.1.0",
   "externalDocs":{
       "description": "Home",
       "url": "/docs"
   },
   "info": {
     "title": "Repository API",
     "version": "3.1.0"
   },
   "paths":{"/repository/plugin/register": {
       "post": {
         "tags": ["repository > plugin"],
         "summary": "Register",
         "operationId" : "",
         "description": "### Description \nRegisters a Plugin. The parameter `registry_type`, meaning container registry type, can be either `DOCKER_HUB` or `AWS_PRIVATE_ECR`. The default value of the `registry_type` is `DOCKER_HUB`. The parameter `registry_url` is required if the `registry_type` is not `DOCKER_HUB`. The parameter `image` is limited to 40 characters.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |name||string|True|\n |resource_type||string|True|\n |image||string|True|\n |docs| {'en': {}, 'ko': {}, 'ja':{}}|Struct|True|\n |provider||string||\n |registry_type|DOCKER_HUB, AWS_PRIVATE_ECR, HARBOR, GITHUB |string||\n |registry_config||Struct||\n |capability||Struct||\n |labels||array||\n |tags||Struct||\n |plugin_id|if plugin_id is not provided, it will be generated by image name |string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"name" : {"type": "string","title": "NAME" },"resource_type" : {"type": "string","title": "RESOURCE_TYPE" },"image" : {"type": "string","title": "IMAGE" },"provider" : {"type": "string","title": "PROVIDER" },"registry_type" : {"type": "string","title": "REGISTRY_TYPE" },"registry_config" : {"type": "object","title": "REGISTRY_CONFIG" },"capability" : {"type": "object","title": "CAPABILITY" },"labels" : {"type": "array","title": "LABELS" },"tags" : {"type": "object","title": "TAGS" },"plugin_id" : {"type": "string","title": "PLUGIN_ID" },"docs" : {"type": "object","title": "DOCS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"name\": \"JIRA Software Collector\",\n   \"service_type\": \"inventory.Collector\",\n   \"image\": \"cloudforet/plugin-jira-noti-protocol\",\n   \"registry_type\": \"DOCKER_HUB\",\n   \"registry_config\": {},\n   \"provider\": \"jira\",\n   \"capability\": {\n       \"supported_schema\": [\n           \"jira-software-secret-api-token\"\n       ]\n   },\n   \"labels\": [\n       \"jira\",\n       \"atlassian\",\n       \"notification\"\n   ],\n   \"tags\": {\n       \"description\": \"Atlassian JIRA Issue notification\",\n       \"icon\": \"https://icon-path/jira-icon.png\"\n   }\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/PluginInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/PluginInfo"},"Default Example":{
                     "value": "{\n   \"plugin_id\": \"plugin-jira-noti-protocol\",\n   \"name\": \"JIRA Issue notification\",\n   \"image\": \"pyengine/plugin-jira-noti-protocol\",\n   \"registry_url\": \"registry.hub.docker.com\",\n   \"state\": \"ENABLED\",\n   \"service_type\": \"notification.Procotol\",\n   \"provider\": \"atlassian\",\n   \"registry_type\": \"DOCKER_HUB\",\n   \"registry_config\": {},\n   \"capability\": {\n       \"supported_schema\": [\n           \"atlassian_jira\"\n       ]\n   },\n   \"template\": {\n       \"options\": {\n           \"schema\": {\n               \"type\": \"object\",\n               \"required\": [],\n               \"properties\": {\n                   \"project_id\": {\n                       \"type\": \"string\",\n                       \"title\": \"Project ID\",\n                       \"minLength\": 4.0\n                   },\n                   \"sa_name\": {\n                       \"title\": \"Service Account\",\n                       \"type\": \"string\",\n                       \"minLength\": 4.0\n                   }\n               }\n           }\n       }\n   },\n   \"labels\": [\n       \"jira\",\n       \"atlassian\",\n       \"notification\"\n   ],\n   \"tags\": {\n       \"description\": \"Atlassian JIRA Issue notification\",\n       \"icon\": \"https://icon-path/jira-icon.png\"\n   },\n   \"repository_info\": {\n       \"repository_id\": \"repo-123456789012\",\n       \"name\": \"Marketplace\",\n       \"repository_type\": \"remote\"\n   },\n   \"domain_id\": \"domain-123456789012\",\n   \"created_at\": \"2022-01-01T08:02:38.094Z\",\n   \"updated_at\": \"2022-01-01T08:02:38.094Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/plugin/update": {
       "post": {
         "tags": ["repository > plugin"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \nUpdates a specific Plugin registered. A Plugin can be updated only if its Repository's `repository_type` is `local`. You can make changes in Plugin settings, including `template` and its options, `schema`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |plugin_id||string|True|\n |name||string||\n |capability||Struct||\n |labels||array||\n |tags||Struct||\n |docs||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"plugin_id" : {"type": "string","title": "PLUGIN_ID" },"name" : {"type": "string","title": "NAME" },"capability" : {"type": "object","title": "CAPABILITY" },"labels" : {"type": "array","title": "LABELS" },"tags" : {"type": "object","title": "TAGS" },"docs" : {"type": "object","title": "DOCS" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"name\": \"JIRA Software Collector\",\n   \"capability\": {\n       \"supported_schema\": [\n           \"jira-software-secret-api-token\"\n       ]\n   },\n   \"labels\": [\n       \"jira\",\n       \"atlassian\",\n       \"notification\"\n   ],\n   \"tags\": {\n       \"description\": \"Atlassian JIRA Issue notification\",\n       \"icon\": \"https://icon-path/jira-icon.png\"\n   }\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/PluginInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/PluginInfo"},"Default Example":{
                     "value": "{\n   \"plugin_id\": \"plugin-jira-noti-protocol\",\n   \"name\": \"JIRA Issue notification\",\n   \"image\": \"pyengine/plugin-jira-noti-protocol\",\n   \"registry_url\": \"registry.hub.docker.com\",\n   \"state\": \"ENABLED\",\n   \"service_type\": \"notification.Procotol\",\n   \"provider\": \"atlassian\",\n   \"registry_type\": \"DOCKER_HUB\",\n   \"registry_config\": {},\n   \"capability\": {\n       \"supported_schema\": [\n           \"atlassian_jira\"\n       ]\n   },\n   \"template\": {\n       \"options\": {\n           \"schema\": {\n               \"type\": \"object\",\n               \"required\": [],\n               \"properties\": {\n                   \"project_id\": {\n                       \"type\": \"string\",\n                       \"title\": \"Project ID\",\n                       \"minLength\": 4.0\n                   },\n                   \"sa_name\": {\n                       \"title\": \"Service Account\",\n                       \"type\": \"string\",\n                       \"minLength\": 4.0\n                   }\n               }\n           }\n       }\n   },\n   \"labels\": [\n       \"jira\",\n       \"atlassian\",\n       \"notification\"\n   ],\n   \"tags\": {\n       \"description\": \"Atlassian JIRA Issue notification\",\n       \"icon\": \"https://icon-path/jira-icon.png\"\n   },\n   \"repository_info\": {\n       \"repository_id\": \"repo-123456789012\",\n       \"name\": \"Marketplace\",\n       \"repository_type\": \"remote\"\n   },\n   \"domain_id\": \"domain-123456789012\",\n   \"created_at\": \"2022-01-01T08:02:38.094Z\",\n   \"updated_at\": \"2022-01-01T08:02:38.094Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/plugin/deregister": {
       "post": {
         "tags": ["repository > plugin"],
         "summary": "Deregister",
         "operationId" : "",
         "description": "### Description \nDeregisters and deletes a specific Plugin. You must specify the `plugin_id` of the Plugin to deregister.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |plugin_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"plugin_id" : {"type": "string","title": "PLUGIN_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"plugin_id\": \"plugin-aws-sns-mon-webhook\",\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/plugin/enable": {
       "post": {
         "tags": ["repository > plugin"],
         "summary": "Enable",
         "operationId" : "",
         "description": "### Description \nEnables a specific Plugin. If the Plugin is enabled, the Plugin can be used as its parameter `state` becomes `ENABLED`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |plugin_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"plugin_id" : {"type": "string","title": "PLUGIN_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"plugin_id\": \"plugin-aws-sns-mon-webhook\",\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/PluginInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/PluginInfo"},"Default Example":{
                     "value": "{\n   \"plugin_id\": \"plugin-jira-noti-protocol\",\n   \"name\": \"JIRA Issue notification\",\n   \"image\": \"pyengine/plugin-jira-noti-protocol\",\n   \"registry_url\": \"registry.hub.docker.com\",\n   \"state\": \"ENABLED\",\n   \"service_type\": \"notification.Procotol\",\n   \"provider\": \"atlassian\",\n   \"registry_type\": \"DOCKER_HUB\",\n   \"registry_config\": {},\n   \"capability\": {\n       \"supported_schema\": [\n           \"atlassian_jira\"\n       ]\n   },\n   \"template\": {\n       \"options\": {\n           \"schema\": {\n               \"type\": \"object\",\n               \"required\": [],\n               \"properties\": {\n                   \"project_id\": {\n                       \"type\": \"string\",\n                       \"title\": \"Project ID\",\n                       \"minLength\": 4.0\n                   },\n                   \"sa_name\": {\n                       \"title\": \"Service Account\",\n                       \"type\": \"string\",\n                       \"minLength\": 4.0\n                   }\n               }\n           }\n       }\n   },\n   \"labels\": [\n       \"jira\",\n       \"atlassian\",\n       \"notification\"\n   ],\n   \"tags\": {\n       \"description\": \"Atlassian JIRA Issue notification\",\n       \"icon\": \"https://icon-path/jira-icon.png\"\n   },\n   \"repository_info\": {\n       \"repository_id\": \"repo-123456789012\",\n       \"name\": \"Marketplace\",\n       \"repository_type\": \"remote\"\n   },\n   \"domain_id\": \"domain-123456789012\",\n   \"created_at\": \"2022-01-01T08:02:38.094Z\",\n   \"updated_at\": \"2022-01-01T08:02:38.094Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/plugin/disable": {
       "post": {
         "tags": ["repository > plugin"],
         "summary": "Disable",
         "operationId" : "",
         "description": "### Description \nDisables a specific Plugin. If the Plugin is disabled, the Plugin cannot be used as its parameter `state` becomes `DISABLED`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |plugin_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"plugin_id" : {"type": "string","title": "PLUGIN_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"plugin_id\": \"plugin-aws-sns-mon-webhook\",\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/PluginInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/PluginInfo"},"Default Example":{
                     "value": "{\n   \"plugin_id\": \"plugin-jira-noti-protocol\",\n   \"name\": \"JIRA Issue notification\",\n   \"image\": \"pyengine/plugin-jira-noti-protocol\",\n   \"registry_url\": \"registry.hub.docker.com\",\n   \"state\": \"ENABLED\",\n   \"service_type\": \"notification.Procotol\",\n   \"provider\": \"atlassian\",\n   \"registry_type\": \"DOCKER_HUB\",\n   \"registry_config\": {},\n   \"capability\": {\n       \"supported_schema\": [\n           \"atlassian_jira\"\n       ]\n   },\n   \"template\": {\n       \"options\": {\n           \"schema\": {\n               \"type\": \"object\",\n               \"required\": [],\n               \"properties\": {\n                   \"project_id\": {\n                       \"type\": \"string\",\n                       \"title\": \"Project ID\",\n                       \"minLength\": 4.0\n                   },\n                   \"sa_name\": {\n                       \"title\": \"Service Account\",\n                       \"type\": \"string\",\n                       \"minLength\": 4.0\n                   }\n               }\n           }\n       }\n   },\n   \"labels\": [\n       \"jira\",\n       \"atlassian\",\n       \"notification\"\n   ],\n   \"tags\": {\n       \"description\": \"Atlassian JIRA Issue notification\",\n       \"icon\": \"https://icon-path/jira-icon.png\"\n   },\n   \"repository_info\": {\n       \"repository_id\": \"repo-123456789012\",\n       \"name\": \"Marketplace\",\n       \"repository_type\": \"remote\"\n   },\n   \"domain_id\": \"domain-123456789012\",\n   \"created_at\": \"2022-01-01T08:02:38.094Z\",\n   \"updated_at\": \"2022-01-01T08:02:38.094Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/plugin/get-versions": {
       "post": {
         "tags": ["repository > plugin"],
         "summary": "Get Versions",
         "operationId" : "",
         "description": "### Description \nGets all version data of a specific Plugin from its Repository. The parameter `plugin_id` is used as an identifier of a Plugin to get version data.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |plugin_id||string|True|\n |repository_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"plugin_id" : {"type": "string","title": "PLUGIN_ID" },"repository_id" : {"type": "string","title": "REPOSITORY_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"plugin_id\": \"plugin-aws-sns-mon-webhook\",\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/VersionsInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/VersionsInfo"},"Default Example":{
                     "value": "{\n   \"total_count\": 1,\n   \"results\": [\n       \"1.2.2\",\n       \"1.2.1.20220429.104002\",\n       \"1.2.1.20220422.161421\",\n       \"1.2.1.20220411.113807\",\n       \"1.2.1\"\n   ]\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/plugin/get": {
       "post": {
         "tags": ["repository > plugin"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \nGets a specific Plugin. Prints detailed information about the Plugin, including  `image`, `registry_url`, and `state`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |plugin_id||string|True|\n |repository_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"plugin_id" : {"type": "string","title": "PLUGIN_ID" },"repository_id" : {"type": "string","title": "REPOSITORY_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"plugin_id\": \"plugin-aws-sns-mon-webhook\",\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/PluginInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/PluginInfo"},"Default Example":{
                     "value": "{\n   \"plugin_id\": \"plugin-jira-noti-protocol\",\n   \"name\": \"JIRA Issue notification\",\n   \"image\": \"pyengine/plugin-jira-noti-protocol\",\n   \"registry_url\": \"registry.hub.docker.com\",\n   \"state\": \"ENABLED\",\n   \"service_type\": \"notification.Procotol\",\n   \"provider\": \"atlassian\",\n   \"registry_type\": \"DOCKER_HUB\",\n   \"registry_config\": {},\n   \"capability\": {\n       \"supported_schema\": [\n           \"atlassian_jira\"\n       ]\n   },\n   \"template\": {\n       \"options\": {\n           \"schema\": {\n               \"type\": \"object\",\n               \"required\": [],\n               \"properties\": {\n                   \"project_id\": {\n                       \"type\": \"string\",\n                       \"title\": \"Project ID\",\n                       \"minLength\": 4.0\n                   },\n                   \"sa_name\": {\n                       \"title\": \"Service Account\",\n                       \"type\": \"string\",\n                       \"minLength\": 4.0\n                   }\n               }\n           }\n       }\n   },\n   \"labels\": [\n       \"jira\",\n       \"atlassian\",\n       \"notification\"\n   ],\n   \"tags\": {\n       \"description\": \"Atlassian JIRA Issue notification\",\n       \"icon\": \"https://icon-path/jira-icon.png\"\n   },\n   \"repository_info\": {\n       \"repository_id\": \"repo-123456789012\",\n       \"name\": \"Marketplace\",\n       \"repository_type\": \"remote\"\n   },\n   \"domain_id\": \"domain-123456789012\",\n   \"created_at\": \"2022-01-01T08:02:38.094Z\",\n   \"updated_at\": \"2022-01-01T08:02:38.094Z\"\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/plugin/list": {
       "post": {
         "tags": ["repository > plugin"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all Plugins registered in a specific Repository. The parameter `repository_id` is used as an identifier of a Repository to get its list of Plugins. You can use a query to get a filtered list of Plugins.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |plugin_id||string||\n |name||string||\n |state|ENABLED, DISABLED |string||\n |resource_type||string||\n |provider||string||\n |registry_type|DOCKER_HUB, AWS_PRIVATE_ECR, HARBOR, GITHUB |string||\n |repository_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"plugin_id" : {"type": "string","title": "PLUGIN_ID" },"name" : {"type": "string","title": "NAME" },"state" : {"type": "string","title": "STATE" },"resource_type" : {"type": "string","title": "RESOURCE_TYPE" },"provider" : {"type": "string","title": "PROVIDER" },"registry_type" : {"type": "string","title": "REGISTRY_TYPE" },"repository_id" : {"type": "string","title": "REPOSITORY_ID" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"query\": {},\n   \"repository_id\": \"repo-123456789012\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/PluginsInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/PluginsInfo"},"Default Example":{
                     "value": "{\n   \"results\": [\n       {\n           \"plugin_id\": \"plugin-api-direct-mon-webhook\",\n           \"name\": \"API Direct Webhook\",\n           \"image\": \"pyengine/plugin-api-direct-mon-webhook\",\n           \"registry_url\": \"registry.hub.docker.com\",\n           \"state\": \"ENABLED\",\n           \"service_type\": \"monitoring.Webhook\",\n           \"registry_type\": \"DOCKER_HUB\",\n           \"registry_config\": {},\n           \"capability\": {},\n           \"template\": {},\n           \"labels\": [],\n           \"tags\": {\n               \"icon\": \"https://icon-url/icon.svg\"\n           },\n           \"repository_info\": {\n               \"repository_id\": \"repo-123456789012\",\n               \"name\": \"Marketplace\",\n               \"repository_type\": \"remote\"\n           },\n           \"domain_id\": \"domain-987654321098\",\n           \"created_at\": \"2022-01-01T03:25:10.408Z\",\n           \"updated_at\": \"2022-01-01T03:25:10.408Z\"\n       },\n       {\n           \"plugin_id\": \"plugin-aws-hyperbilling-cost-datasource\",\n           \"name\": \"AWS HyperBilling Cost Analysis Data Source\",\n           \"image\": \"pyengine/plugin-aws-hyperbilling-cost-datasource\",\n           \"registry_url\": \"registry.hub.docker.com\",\n           \"state\": \"ENABLED\",\n           \"service_type\": \"cost_analysis.DataSoruce\",\n           \"registry_type\": \"DOCKER_HUB\",\n           \"registry_config\": {},\n           \"capability\": {},\n           \"template\": {},\n           \"labels\": [],\n           \"tags\": {},\n           \"repository_info\": {\n               \"repository_id\": \"repo-123456789012\",\n               \"name\": \"Marketplace\",\n               \"repository_type\": \"remote\"\n           },\n           \"domain_id\": \"domain-987654321098\",\n           \"created_at\": \"2022-01-01T04:56:55.082Z\",\n           \"updated_at\": \"2022-01-01T04:56:55.082Z\"\n       }\n   ],\n   \"total_count\": 2\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/repository/list": {
       "post": {
         "tags": ["repository > repository"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all Repositories regardless of `domain`. You can use a query to get a filtered list of Repositories.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |repository_id||string||\n |repository_type||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"repository_id" : {"type": "string","title": "REPOSITORY_ID" },"repository_type" : {"type": "string","title": "REPOSITORY_TYPE" }                 }
               },
               "examples":{"Default Example":{"value": "{\n   \"query\": {},\n   \"repository_id\": \"repo-123456789012\"\n}"},"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/RepositoriesInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/RepositoriesInfo"},"Default Example":{
                     "value": "{\n   \"results\": [\n       {\n           \"repository_id\": \"repo-123456789012\",\n           \"name\": \"Open Source Marketplace\",\n           \"repository_type\": \"remote\",\n           \"endpoint\": \"grpc+ssl://repository.portal.spaceone.megazone.io:443\",\n       }\n   ],\n   \"total_count\": 1\n}"
                   }}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/dashboard-template/register": {
       "post": {
         "tags": ["repository > dashboard-template"],
         "summary": "Register",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |name||string|True|\n |template_id||string||\n |template_type|MULTI, SINGLE |string||\n |dashboards||array||\n |labels||array||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"template_id" : {"type": "string","title": "TEMPLATE_ID" },"name" : {"type": "string","title": "NAME" },"template_type" : {"type": "string","title": "TEMPLATE_TYPE" },"dashboards" : {"type": "array","title": "DASHBOARDS" },"labels" : {"type": "array","title": "LABELS" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/dashboard-template/update": {
       "post": {
         "tags": ["repository > dashboard-template"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |template_id||string|True|\n |name||string||\n |template_type|MULTI, SINGLE |string||\n |dashboards||array||\n |labels||array||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"template_id" : {"type": "string","title": "TEMPLATE_ID" },"name" : {"type": "string","title": "NAME" },"template_type" : {"type": "string","title": "TEMPLATE_TYPE" },"dashboards" : {"type": "array","title": "DASHBOARDS" },"labels" : {"type": "array","title": "LABELS" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/dashboard-template/deregister": {
       "post": {
         "tags": ["repository > dashboard-template"],
         "summary": "Deregister",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |template_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"template_id" : {"type": "string","title": "TEMPLATE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/dashboard-template/enable": {
       "post": {
         "tags": ["repository > dashboard-template"],
         "summary": "Enable",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |template_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"template_id" : {"type": "string","title": "TEMPLATE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/dashboard-template/disable": {
       "post": {
         "tags": ["repository > dashboard-template"],
         "summary": "Disable",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |template_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"template_id" : {"type": "string","title": "TEMPLATE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/dashboard-template/get": {
       "post": {
         "tags": ["repository > dashboard-template"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |template_id||string|True|\n |repository_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"template_id" : {"type": "string","title": "TEMPLATE_ID" },"repository_id" : {"type": "string","title": "REPOSITORY_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/DashboardTemplateInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/repository/dashboard-template/list": {
       "post": {
         "tags": ["repository > dashboard-template"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |template_id||string||\n |name||string||\n |state|ENABLED, DISABLED |string||\n |template_type|MULTI, SINGLE |string||\n |repository_id||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"template_id" : {"type": "string","title": "TEMPLATE_ID" },"name" : {"type": "string","title": "NAME" },"state" : {"type": "string","title": "STATE" },"template_type" : {"type": "string","title": "TEMPLATE_TYPE" },"repository_id" : {"type": "string","title": "REPOSITORY_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/DashboardTemplatesInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/DashboardTemplatesInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"securitySchemes": {"HTTPBearer": {"type": "http","scheme": "bearer","bearerFormat": "JWT"}}
   },
   "components":{
     "schemas": {
     "PluginInfo": {
         "properties" : {"plugin_id" : {"type": "string","title": "PLUGIN_ID"},"name" : {"type": "string","title": "NAME"},"state" : {"type": "string","title": "STATE"},"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"image" : {"type": "string","title": "IMAGE"},"provider" : {"type": "string","title": "PROVIDER"},"registry_type" : {"type": "string","title": "REGISTRY_TYPE"},"registry_url" : {"type": "string","title": "REGISTRY_URL"},"registry_config" : {"type": "object","title": "REGISTRY_CONFIG"},"capability" : {"type": "object","title": "CAPABILITY"},"labels" : {"type": "array","title": "LABELS"},"tags" : {"type": "object","title": "TAGS"},"docs" : {"type": "object","title": "DOCS"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"repository_info" : {"$ref": "#/components/schemas/RepositoryInfo","title": "REPOSITORY_INFO"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"}},
         "type": "object",
         "required": ["plugin_id","name","state","resource_type","image","provider","registry_type","registry_url","registry_config","capability","labels","tags","docs","domain_id","repository_info","created_at","updated_at"],
                "title": "PluginInfo"
           }
           ,        "PluginQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"plugin_id" : {"type": "string","title": "PLUGIN_ID"},"name" : {"type": "string","title": "NAME"},"state" : {"type": "string","title": "STATE"},"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"provider" : {"type": "string","title": "PROVIDER"},"registry_type" : {"type": "string","title": "REGISTRY_TYPE"},"repository_id" : {"type": "string","title": "REPOSITORY_ID"}},
         "type": "object",
         "required": [],
                "title": "PluginQuery"
           }
           ,        "PluginRequest": {
         "properties" : {"plugin_id" : {"type": "string","title": "PLUGIN_ID"}},
         "type": "object",
         "required": ["plugin_id"],
                "title": "PluginRequest"
           }
           ,        "PluginsInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/PluginInfo"},
               "type": "array","$ref": "#/components/schemas/PluginInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "PluginsInfo"
           }
           ,        "RegisterPluginRequest": {
         "properties" : {"name" : {"type": "string","title": "NAME"},"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"image" : {"type": "string","title": "IMAGE"},"provider" : {"type": "string","title": "PROVIDER"},"registry_type" : {"type": "string","title": "REGISTRY_TYPE"},"registry_config" : {"type": "object","title": "REGISTRY_CONFIG"},"capability" : {"type": "object","title": "CAPABILITY"},"labels" : {"type": "array","title": "LABELS"},"tags" : {"type": "object","title": "TAGS"},"plugin_id" : {"type": "string","title": "PLUGIN_ID"},"docs" : {"type": "object","title": "DOCS"}},
         "type": "object",
         "required": ["name","resource_type","image","docs"],
                "title": "RegisterPluginRequest"
           }
           ,        "RepositoryPluginRequest": {
         "properties" : {"plugin_id" : {"type": "string","title": "PLUGIN_ID"},"repository_id" : {"type": "string","title": "REPOSITORY_ID"}},
         "type": "object",
         "required": ["plugin_id"],
                "title": "RepositoryPluginRequest"
           }
           ,        "UpdatePluginRequest": {
         "properties" : {"plugin_id" : {"type": "string","title": "PLUGIN_ID"},"name" : {"type": "string","title": "NAME"},"capability" : {"type": "object","title": "CAPABILITY"},"labels" : {"type": "array","title": "LABELS"},"tags" : {"type": "object","title": "TAGS"},"docs" : {"type": "object","title": "DOCS"}},
         "type": "object",
         "required": ["plugin_id"],
                "title": "UpdatePluginRequest"
           }
           ,        "VersionsInfo": {
         "properties" : {"version" : {"items": {"type": "string"},
               "type": "array","title": "VERSION"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"},"results" : {"items": {"type": "string"},
               "type": "array","title": "RESULTS"}},
         "type": "object",
         "required": ["version","total_count","results"],
                "title": "VersionsInfo"
           }
           ,        "AuthenticationRequest": {
         "properties" : {"domain_id" : {"type": "string","title": "DOMAIN_ID"}},
         "type": "object",
         "required": ["domain_id"],
                "title": "AuthenticationRequest"
           }
           ,        "AuthenticationResponse": {
         "properties" : {"domain_id" : {"type": "string","title": "DOMAIN_ID"},"public_key" : {"type": "string","title": "PUBLIC_KEY"}},
         "type": "object",
         "required": ["domain_id","public_key"],
                "title": "AuthenticationResponse"
           }
           ,        "AuthorizationRequest": {
         "properties" : {"service" : {"type": "string","title": "SERVICE"},"resource" : {"type": "string","title": "RESOURCE"},"verb" : {"type": "string","title": "VERB"},"scope" : {"type": "Scope","title": "SCOPE"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"project_group_id" : {"type": "string","title": "PROJECT_GROUP_ID"},"user_id" : {"type": "string","title": "USER_ID"},"require_project_id" : {"type": "boolean","title": "REQUIRE_PROJECT_ID"},"require_project_group_id" : {"type": "boolean","title": "REQUIRE_PROJECT_GROUP_ID"},"require_user_id" : {"type": "boolean","title": "REQUIRE_USER_ID"},"require_domain_id" : {"type": "boolean","title": "REQUIRE_DOMAIN_ID"}},
         "type": "object",
         "required": ["service","resource","verb","scope","domain_id","project_id","project_group_id","user_id","require_project_id","require_project_group_id","require_user_id","require_domain_id"],
                "title": "AuthorizationRequest"
           }
           ,        "AuthorizationResponse": {
         "properties" : {"role_type" : {"type": "string","title": "ROLE_TYPE"},"projects" : {"items": {"type": "string"},
               "type": "array","title": "PROJECTS"},"project_groups" : {"items": {"type": "string"},
               "type": "array","title": "PROJECT_GROUPS"}},
         "type": "object",
         "required": ["role_type","projects","project_groups"],
                "title": "AuthorizationResponse"
           }
           ,        "EventRequest": {
         "properties" : {"service" : {"type": "string","title": "SERVICE"},"resource" : {"type": "string","title": "RESOURCE"},"verb" : {"type": "string","title": "VERB"},"status" : {"type": "string","title": "STATUS"},"message" : {"type": "object","title": "MESSAGE"}},
         "type": "object",
         "required": ["service","resource","verb","status","message"],
                "title": "EventRequest"
           }
           ,        "AggregateCount": {
         "properties" : {"name" : {"type": "string","title": "NAME"}},
         "type": "object",
         "required": ["name"],
                "title": "AggregateCount"
           }
           ,        "AggregateGroup": {
         "properties" : {"keys" : {"items": {"$ref": "#/components/schemas/AggregateGroupKey"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupKey","title": "KEYS"},"fields" : {"items": {"$ref": "#/components/schemas/AggregateGroupField"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupField","title": "FIELDS"}},
         "type": "object",
         "required": ["keys","fields"],
                "title": "AggregateGroup"
           }
           ,        "AggregateGroupField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"},"fields" : {"items": {"$ref": "#/components/schemas/AggregateGroupSubField"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupSubField","title": "FIELDS"},"conditions" : {"items": {"$ref": "#/components/schemas/AggregateSubCondition"},
               "type": "array","$ref": "#/components/schemas/AggregateSubCondition","title": "CONDITIONS"}},
         "type": "object",
         "required": ["key","k","name","n","operator","o","fields","conditions"],
                "title": "AggregateGroupField"
           }
           ,        "AggregateGroupKey": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"date_format" : {"type": "string","title": "DATE_FORMAT"}},
         "type": "object",
         "required": ["key","k","name","n","date_format"],
                "title": "AggregateGroupKey"
           }
           ,        "AggregateGroupSubField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"}},
         "type": "object",
         "required": ["key","k","name","n"],
                "title": "AggregateGroupSubField"
           }
           ,        "AggregateProject": {
         "properties" : {"fields" : {"items": {"$ref": "#/components/schemas/AggregateProjectField"},
               "type": "array","$ref": "#/components/schemas/AggregateProjectField","title": "FIELDS"},"exclude_keys" : {"type": "boolean","title": "EXCLUDE_KEYS"}},
         "type": "object",
         "required": ["fields","exclude_keys"],
                "title": "AggregateProject"
           }
           ,        "AggregateProjectField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","name","n","operator","o"],
                "title": "AggregateProjectField"
           }
           ,        "AggregateSort": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"},"keys" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "KEYS"}},
         "type": "object",
         "required": ["key","desc","keys"],
                "title": "AggregateSort"
           }
           ,        "AggregateSubCondition": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"value" : {"type": "Value","title": "VALUE"},"v" : {"type": "Value","title": "V"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","value","v","operator","o"],
                "title": "AggregateSubCondition"
           }
           ,        "AggregateUnwind": {
         "properties" : {"path" : {"type": "string","title": "PATH"}},
         "type": "object",
         "required": ["path"],
                "title": "AggregateUnwind"
           }
           ,        "AnalyzeQuery": {
         "properties" : {"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"field_group" : {"items": {"type": "string"},
               "type": "array","title": "FIELD_GROUP"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["group_by","field_group","filter","filter_or","page","sort","fields","select","keyword"],
                "title": "AnalyzeQuery"
           }
           ,        "ExportAnalyzeQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"keyword" : {"type": "string","title": "KEYWORD"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"}},
         "type": "object",
         "required": ["filter","filter_or","keyword","sort","group_by","fields","select","page"],
                "title": "ExportAnalyzeQuery"
           }
           ,        "ExportOption": {
         "properties" : {"name" : {"type": "string","title": "NAME"},"title" : {"type": "string","title": "TITLE"},"query_type" : {"type": "QueryType","title": "QUERY_TYPE"},"search_query" : {"$ref": "#/components/schemas/ExportSearchQuery","title": "SEARCH_QUERY"},"analyze_query" : {"$ref": "#/components/schemas/ExportAnalyzeQuery","title": "ANALYZE_QUERY"}},
         "type": "object",
         "required": ["name","title","query_type","search_query","analyze_query"],
                "title": "ExportOption"
           }
           ,        "ExportSearchQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"keyword" : {"type": "string","title": "KEYWORD"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "array","title": "FIELDS"},"unwind" : {"$ref": "#/components/schemas/Unwind","title": "UNWIND"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"}},
         "type": "object",
         "required": ["filter","filter_or","keyword","sort","fields","unwind","page"],
                "title": "ExportSearchQuery"
           }
           ,        "Filter": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"value" : {"type": "Value","title": "VALUE"},"v" : {"type": "Value","title": "V"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","value","v","operator","o"],
                "title": "Filter"
           }
           ,        "Page": {
         "properties" : {"start" : {"type": "integer/long","title": "START"},"limit" : {"type": "integer/long","title": "LIMIT"}},
         "type": "object",
         "required": ["start","limit"],
                "title": "Page"
           }
           ,        "Query": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"sort" : {"$ref": "#/components/schemas/Sort","title": "SORT"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"minimal" : {"type": "boolean","title": "MINIMAL"},"count_only" : {"type": "boolean","title": "COUNT_ONLY"},"only" : {"items": {"type": "string"},
               "type": "array","title": "ONLY"},"keyword" : {"type": "string","title": "KEYWORD"},"unwind" : {"$ref": "#/components/schemas/Unwind","title": "UNWIND"}},
         "type": "object",
         "required": ["filter","filter_or","sort","page","minimal","count_only","only","keyword","unwind"],
                "title": "Query"
           }
           ,        "Sort": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"},"keys" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "KEYS"}},
         "type": "object",
         "required": ["key","desc","keys"],
                "title": "Sort"
           }
           ,        "SortKey": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"}},
         "type": "object",
         "required": ["key","desc"],
                "title": "SortKey"
           }
           ,        "StatisticsAggregate": {
         "properties" : {"unwind" : {"$ref": "#/components/schemas/AggregateUnwind","title": "UNWIND"},"group" : {"$ref": "#/components/schemas/AggregateGroup","title": "GROUP"},"count" : {"$ref": "#/components/schemas/AggregateCount","title": "COUNT"},"sort" : {"$ref": "#/components/schemas/AggregateSort","title": "SORT"},"project" : {"$ref": "#/components/schemas/AggregateProject","title": "PROJECT"},"limit" : {"type": "integer","title": "LIMIT"},"skip" : {"type": "integer","title": "SKIP"}},
         "type": "object",
         "required": ["unwind","group","count","sort","project","limit","skip"],
                "title": "StatisticsAggregate"
           }
           ,        "StatisticsQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"aggregate" : {"items": {"$ref": "#/components/schemas/StatisticsAggregate"},
               "type": "array","$ref": "#/components/schemas/StatisticsAggregate","title": "AGGREGATE"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"distinct" : {"type": "string","title": "DISTINCT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["filter","filter_or","aggregate","page","distinct","keyword"],
                "title": "StatisticsQuery"
           }
           ,        "TimeSeriesAnalyzeQuery": {
         "properties" : {"granularity" : {"type": "Granularity","title": "GRANULARITY"},"start" : {"type": "string","title": "START"},"end" : {"type": "string","title": "END"},"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"field_group" : {"items": {"type": "string"},
               "type": "array","title": "FIELD_GROUP"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["granularity","start","end","group_by","field_group","filter","filter_or","page","sort","fields","select","keyword"],
                "title": "TimeSeriesAnalyzeQuery"
           }
           ,        "Unwind": {
         "properties" : {"path" : {"type": "string","title": "PATH"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"}},
         "type": "object",
         "required": ["path","filter"],
                "title": "Unwind"
           }
           ,        "VersionInfo": {
         "properties" : {"version" : {"type": "string","title": "VERSION"}},
         "type": "object",
         "required": ["version"],
                "title": "VersionInfo"
           }
           ,        "RepositoriesInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/RepositoryInfo"},
               "type": "array","$ref": "#/components/schemas/RepositoryInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "RepositoriesInfo"
           }
           ,        "RepositoryInfo": {
         "properties" : {"repository_id" : {"type": "string","title": "REPOSITORY_ID"},"name" : {"type": "string","title": "NAME"},"repository_type" : {"type": "string","title": "REPOSITORY_TYPE"},"endpoint" : {"type": "string","title": "ENDPOINT"}},
         "type": "object",
         "required": ["repository_id","name","repository_type","endpoint"],
                "title": "RepositoryInfo"
           }
           ,        "RepositoryQuery": {
         "properties" : {"repository_id" : {"type": "string","title": "REPOSITORY_ID"},"repository_type" : {"type": "string","title": "REPOSITORY_TYPE"}},
         "type": "object",
         "required": [],
                "title": "RepositoryQuery"
           }
           ,        "DashboardTemplateInfo": {
         "properties" : {"template_id" : {"type": "string","title": "TEMPLATE_ID"},"name" : {"type": "string","title": "NAME"},"state" : {"type": "string","title": "STATE"},"template_type" : {"type": "string","title": "TEMPLATE_TYPE"},"dashboards" : {"type": "array","title": "DASHBOARDS"},"labels" : {"type": "array","title": "LABELS"},"tags" : {"type": "object","title": "TAGS"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"repository_info" : {"$ref": "#/components/schemas/RepositoryInfo","title": "REPOSITORY_INFO"},"created_at" : {"type": "string","title": "CREATED_AT"},"updated_at" : {"type": "string","title": "UPDATED_AT"}},
         "type": "object",
         "required": ["template_id","name","state","template_type","dashboards","labels","tags","domain_id","repository_info","created_at","updated_at"],
                "title": "DashboardTemplateInfo"
           }
           ,        "DashboardTemplateQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"template_id" : {"type": "string","title": "TEMPLATE_ID"},"name" : {"type": "string","title": "NAME"},"state" : {"type": "string","title": "STATE"},"template_type" : {"type": "string","title": "TEMPLATE_TYPE"},"repository_id" : {"type": "string","title": "REPOSITORY_ID"}},
         "type": "object",
         "required": [],
                "title": "DashboardTemplateQuery"
           }
           ,        "DashboardTemplateRequest": {
         "properties" : {"template_id" : {"type": "string","title": "TEMPLATE_ID"}},
         "type": "object",
         "required": ["template_id"],
                "title": "DashboardTemplateRequest"
           }
           ,        "DashboardTemplatesInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/DashboardTemplateInfo"},
               "type": "array","$ref": "#/components/schemas/DashboardTemplateInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "DashboardTemplatesInfo"
           }
           ,        "RegisterDashboardTemplateRequest": {
         "properties" : {"template_id" : {"type": "string","title": "TEMPLATE_ID"},"name" : {"type": "string","title": "NAME"},"template_type" : {"type": "string","title": "TEMPLATE_TYPE"},"dashboards" : {"type": "array","title": "DASHBOARDS"},"labels" : {"type": "array","title": "LABELS"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["name"],
                "title": "RegisterDashboardTemplateRequest"
           }
           ,        "RepositoryDashboardTemplateRequest": {
         "properties" : {"template_id" : {"type": "string","title": "TEMPLATE_ID"},"repository_id" : {"type": "string","title": "REPOSITORY_ID"}},
         "type": "object",
         "required": ["template_id"],
                "title": "RepositoryDashboardTemplateRequest"
           }
           ,        "UpdateDashboardTemplateRequest": {
         "properties" : {"template_id" : {"type": "string","title": "TEMPLATE_ID"},"name" : {"type": "string","title": "NAME"},"template_type" : {"type": "string","title": "TEMPLATE_TYPE"},"dashboards" : {"type": "array","title": "DASHBOARDS"},"labels" : {"type": "array","title": "LABELS"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["template_id"],
                "title": "UpdateDashboardTemplateRequest"
           }
                   },
      "Struct": {"properties": {"type": "object","title": "Struct"}},
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
       },
       "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [{"type": "string"}, {"type": "integer"}]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {"type": "string","title": "Message"},
          "type": {"type": "string","title": "Error Type"}
        },
        "type": "object",
        "required": ["loc","msg","type"],
        "title": "ValidationError"
      },
      "securitySchemes": {"HTTPBearer": {"type": "http","scheme": "bearer"}
      }
   }
}