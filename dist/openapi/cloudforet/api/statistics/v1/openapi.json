{
   "openapi": "3.1.0",
   "externalDocs":{
       "description": "Home",
       "url": "/docs"
   },
   "info": {
     "title": "Statistics API",
     "version": "3.1.0"
   },
   "paths":{"/statistics/resource/stat": {
       "post": {
         "tags": ["statistics > resource"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \nEnables data preprocessing of different services. Although limited, it is possible to create not only basic queries but also data suitable for users' needs, such as joins between two tables created by the query, handling missing values, and sorting.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |aggregate||array|True|\n |page||StatPage||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"aggregate" : {"items": {"$ref": "#/components/schemas/StatAggregate"}, "type": "array","title": "AGGREGATE" },"page" : {"$ref": "#/components/schemas/StatPage","title": "PAGE" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/schedule/add": {
       "post": {
         "tags": ["statistics > schedule"],
         "summary": "Add",
         "operationId" : "",
         "description": "### Description \nAdds a new Schedule. When creating, `topic` and queries to be used should be specified. The time interval of the Schedule should be also specified to run queries repeatedly. The run set by Schedule starts every hour on the hour.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |topic||string|True|\n |options||Struct|True|\n |schedule||Scheduled|True|\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"topic" : {"type": "string","title": "TOPIC" },"options" : {"type": "object","title": "OPTIONS" },"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/ScheduleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/ScheduleInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/schedule/update": {
       "post": {
         "tags": ["statistics > update"],
         "summary": "Update",
         "operationId" : "",
         "description": "### Description \nUpdates a specific Schedule. You can make changes in Schedule settings, including time intervals.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |schedule_id||string|True|\n |schedule||Scheduled||\n |tags||Struct||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"schedule_id" : {"type": "string","title": "SCHEDULE_ID" },"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE" },"tags" : {"type": "object","title": "TAGS" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/ScheduleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/ScheduleInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/schedule/enable": {
       "post": {
         "tags": ["statistics > schedule"],
         "summary": "Enable",
         "operationId" : "",
         "description": "### Description \nEnables a specific Schedule. If a Schedule is enabled, the query usage will be scheduled by the time interval specified.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |schedule_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"schedule_id" : {"type": "string","title": "SCHEDULE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/ScheduleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/ScheduleInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/schedule/disable": {
       "post": {
         "tags": ["statistics > schedule"],
         "summary": "Disable",
         "operationId" : "",
         "description": "### Description \nDisables a specific Schedule. If a Schedule is disabled, the query usage will not be scheduled.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |schedule_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"schedule_id" : {"type": "string","title": "SCHEDULE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/ScheduleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/ScheduleInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/schedule/delete": {
       "post": {
         "tags": ["statistics > schedule"],
         "summary": "Delete",
         "operationId" : "",
         "description": "### Description \nDeletes a specific Schedule. You must specify the `schedule_id` of the Schedule to delete.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |schedule_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"schedule_id" : {"type": "string","title": "SCHEDULE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/schedule/get": {
       "post": {
         "tags": ["statistics > schedule"],
         "summary": "Get",
         "operationId" : "",
         "description": "### Description \nGets a specific Schedule. Prints detailed information about the Schedule, including the schedule interval and `state`.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |schedule_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"schedule_id" : {"type": "string","title": "SCHEDULE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/ScheduleInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/ScheduleInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/schedule/list": {
       "post": {
         "tags": ["statistics > schedule"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all Schedules. You can use a query to get a filtered list of Schedules.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |schedule_id||string||\n |topic||string||\n |state||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"schedule_id" : {"type": "string","title": "SCHEDULE_ID" },"topic" : {"type": "string","title": "TOPIC" },"state" : {"type": "string","title": "STATE" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/SchedulesInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/SchedulesInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/schedule/stat": {
       "post": {
         "tags": ["statistics > schedule"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/history/create": {
       "post": {
         "tags": ["statistics > history"],
         "summary": "Create",
         "operationId" : "",
         "description": "### Description \nCreates a new History. Gets a Schedule as an input and creates a History as an output. You can use this method to manually run a specific Schedule.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |schedule_id||string|True|\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"schedule_id" : {"type": "string","title": "SCHEDULE_ID" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response"}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/history/list": {
       "post": {
         "tags": ["statistics > history"],
         "summary": "List",
         "operationId" : "",
         "description": "### Description \nGets a list of all Histories. You can use a query to get a filtered list of Histories.",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||Query||\n |topic||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY" },"topic" : {"type": "string","title": "TOPIC" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"$ref": "#/components/schemas/HistoryInfo"},
                 "examples": {
                   "Schema": {"$ref": "#/components/schemas/HistoryInfo"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"/statistics/history/stat": {
       "post": {
         "tags": ["statistics > history"],
         "summary": "Stat",
         "operationId" : "",
         "description": "### Description \n",
         "requestBody": {
           "description": "\n| Key               | Description                                                   | Type      | Required|\n|-------------------|---------------------------------------------------------------|-----------|-------|\n |query||StatisticsQuery|True|\n |topic||string||\n<br>",
           "content": {
             "application/json": {
               "schema": {
                 "properties": {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY" },"topic" : {"type": "string","title": "TOPIC" }                 }
               },
               "examples":{"Schema":{}
               }
             }
           },"required": true
         },
         "responses": {
           "200": {
             "description": "Successfull Response","content":{
               "application/json": {
                 "schema": {"type": "object"},
                 "examples": {
                   "Schema": {"type": "object"}}
               }
             }}
         }
          ,"security": [{"HTTPBearer": []}]        }
     },"securitySchemes": {"HTTPBearer": {"type": "http","scheme": "bearer","bearerFormat": "JWT"}}
   },
   "components":{
     "schemas": {
     "ResourceStatRequest": {
         "properties" : {"aggregate" : {"items": {"$ref": "#/components/schemas/StatAggregate"},
               "type": "array","$ref": "#/components/schemas/StatAggregate","title": "AGGREGATE"},"page" : {"$ref": "#/components/schemas/StatPage","title": "PAGE"}},
         "type": "object",
         "required": ["aggregate"],
                "title": "ResourceStatRequest"
           }
           ,        "Sort": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"},"keys" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "KEYS"}},
         "type": "object",
         "required": ["key","desc","keys"],
                "title": "Sort"
           }
           ,        "StatAggregate": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatAggregateQuery","title": "QUERY"},"join" : {"$ref": "#/components/schemas/StatAggregateJoin","title": "JOIN"},"concat" : {"$ref": "#/components/schemas/StatAggregateConcat","title": "CONCAT"},"sort" : {"type": "array","title": "SORT"},"formula" : {"$ref": "#/components/schemas/StatAggregateFormula","title": "FORMULA"},"fill_na" : {"$ref": "#/components/schemas/StatAggregateFillNA","title": "FILL_NA"}},
         "type": "object",
         "required": ["query","join","concat","sort","formula","fill_na"],
                "title": "StatAggregate"
           }
           ,        "StatAggregateConcat": {
         "properties" : {"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"},"extend_data" : {"type": "object","title": "EXTEND_DATA"}},
         "type": "object",
         "required": ["resource_type","query"],
                "title": "StatAggregateConcat"
           }
           ,        "StatAggregateFillNA": {
         "properties" : {"data" : {"type": "object","title": "DATA"}},
         "type": "object",
         "required": ["data"],
                "title": "StatAggregateFillNA"
           }
           ,        "StatAggregateFormula": {
         "properties" : {"eval" : {"type": "string","title": "EVAL"},"query" : {"type": "string","title": "QUERY"}},
         "type": "object",
         "required": ["eval","query"],
                "title": "StatAggregateFormula"
           }
           ,        "StatAggregateJoin": {
         "properties" : {"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"},"extend_data" : {"type": "object","title": "EXTEND_DATA"},"type" : {"type": "string","title": "TYPE"},"keys" : {"items": {"type": "string"},
               "type": "array","title": "KEYS"}},
         "type": "object",
         "required": ["resource_type","query"],
                "title": "StatAggregateJoin"
           }
           ,        "StatAggregateQuery": {
         "properties" : {"resource_type" : {"type": "string","title": "RESOURCE_TYPE"},"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"},"extend_data" : {"type": "object","title": "EXTEND_DATA"}},
         "type": "object",
         "required": ["resource_type","query"],
                "title": "StatAggregateQuery"
           }
           ,        "StatPage": {
         "properties" : {"start" : {"type": "integer/long","title": "START"},"limit" : {"type": "integer/long","title": "LIMIT"}},
         "type": "object",
         "required": ["limit"],
                "title": "StatPage"
           }
           ,        "VersionInfo": {
         "properties" : {"version" : {"type": "string","title": "VERSION"}},
         "type": "object",
         "required": ["version"],
                "title": "VersionInfo"
           }
           ,        "AggregateCount": {
         "properties" : {"name" : {"type": "string","title": "NAME"}},
         "type": "object",
         "required": ["name"],
                "title": "AggregateCount"
           }
           ,        "AggregateGroup": {
         "properties" : {"keys" : {"items": {"$ref": "#/components/schemas/AggregateGroupKey"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupKey","title": "KEYS"},"fields" : {"items": {"$ref": "#/components/schemas/AggregateGroupField"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupField","title": "FIELDS"}},
         "type": "object",
         "required": ["keys","fields"],
                "title": "AggregateGroup"
           }
           ,        "AggregateGroupField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"},"fields" : {"items": {"$ref": "#/components/schemas/AggregateGroupSubField"},
               "type": "array","$ref": "#/components/schemas/AggregateGroupSubField","title": "FIELDS"},"conditions" : {"items": {"$ref": "#/components/schemas/AggregateSubCondition"},
               "type": "array","$ref": "#/components/schemas/AggregateSubCondition","title": "CONDITIONS"}},
         "type": "object",
         "required": ["key","k","name","n","operator","o","fields","conditions"],
                "title": "AggregateGroupField"
           }
           ,        "AggregateGroupKey": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"date_format" : {"type": "string","title": "DATE_FORMAT"}},
         "type": "object",
         "required": ["key","k","name","n","date_format"],
                "title": "AggregateGroupKey"
           }
           ,        "AggregateGroupSubField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"}},
         "type": "object",
         "required": ["key","k","name","n"],
                "title": "AggregateGroupSubField"
           }
           ,        "AggregateProject": {
         "properties" : {"fields" : {"items": {"$ref": "#/components/schemas/AggregateProjectField"},
               "type": "array","$ref": "#/components/schemas/AggregateProjectField","title": "FIELDS"},"exclude_keys" : {"type": "boolean","title": "EXCLUDE_KEYS"}},
         "type": "object",
         "required": ["fields","exclude_keys"],
                "title": "AggregateProject"
           }
           ,        "AggregateProjectField": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"name" : {"type": "string","title": "NAME"},"n" : {"type": "string","title": "N"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","name","n","operator","o"],
                "title": "AggregateProjectField"
           }
           ,        "AggregateSort": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"},"keys" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "KEYS"}},
         "type": "object",
         "required": ["key","desc","keys"],
                "title": "AggregateSort"
           }
           ,        "AggregateSubCondition": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"value" : {"type": "Value","title": "VALUE"},"v" : {"type": "Value","title": "V"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","value","v","operator","o"],
                "title": "AggregateSubCondition"
           }
           ,        "AggregateUnwind": {
         "properties" : {"path" : {"type": "string","title": "PATH"}},
         "type": "object",
         "required": ["path"],
                "title": "AggregateUnwind"
           }
           ,        "AnalyzeQuery": {
         "properties" : {"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"field_group" : {"items": {"type": "string"},
               "type": "array","title": "FIELD_GROUP"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["group_by","field_group","filter","filter_or","page","sort","fields","select","keyword"],
                "title": "AnalyzeQuery"
           }
           ,        "ExportAnalyzeQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"keyword" : {"type": "string","title": "KEYWORD"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"}},
         "type": "object",
         "required": ["filter","filter_or","keyword","sort","group_by","fields","select","page"],
                "title": "ExportAnalyzeQuery"
           }
           ,        "ExportOption": {
         "properties" : {"name" : {"type": "string","title": "NAME"},"title" : {"type": "string","title": "TITLE"},"query_type" : {"type": "QueryType","title": "QUERY_TYPE"},"search_query" : {"$ref": "#/components/schemas/ExportSearchQuery","title": "SEARCH_QUERY"},"analyze_query" : {"$ref": "#/components/schemas/ExportAnalyzeQuery","title": "ANALYZE_QUERY"}},
         "type": "object",
         "required": ["name","title","query_type","search_query","analyze_query"],
                "title": "ExportOption"
           }
           ,        "ExportSearchQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"keyword" : {"type": "string","title": "KEYWORD"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "array","title": "FIELDS"},"unwind" : {"$ref": "#/components/schemas/Unwind","title": "UNWIND"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"}},
         "type": "object",
         "required": ["filter","filter_or","keyword","sort","fields","unwind","page"],
                "title": "ExportSearchQuery"
           }
           ,        "Filter": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"k" : {"type": "string","title": "K"},"value" : {"type": "Value","title": "VALUE"},"v" : {"type": "Value","title": "V"},"operator" : {"type": "string","title": "OPERATOR"},"o" : {"type": "string","title": "O"}},
         "type": "object",
         "required": ["key","k","value","v","operator","o"],
                "title": "Filter"
           }
           ,        "Page": {
         "properties" : {"start" : {"type": "integer/long","title": "START"},"limit" : {"type": "integer/long","title": "LIMIT"}},
         "type": "object",
         "required": ["start","limit"],
                "title": "Page"
           }
           ,        "Query": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"sort" : {"$ref": "#/components/schemas/Sort","title": "SORT"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"minimal" : {"type": "boolean","title": "MINIMAL"},"count_only" : {"type": "boolean","title": "COUNT_ONLY"},"only" : {"items": {"type": "string"},
               "type": "array","title": "ONLY"},"keyword" : {"type": "string","title": "KEYWORD"},"unwind" : {"$ref": "#/components/schemas/Unwind","title": "UNWIND"}},
         "type": "object",
         "required": ["filter","filter_or","sort","page","minimal","count_only","only","keyword","unwind"],
                "title": "Query"
           }
           ,        "SortKey": {
         "properties" : {"key" : {"type": "string","title": "KEY"},"desc" : {"type": "boolean","title": "DESC"}},
         "type": "object",
         "required": ["key","desc"],
                "title": "SortKey"
           }
           ,        "StatisticsAggregate": {
         "properties" : {"unwind" : {"$ref": "#/components/schemas/AggregateUnwind","title": "UNWIND"},"group" : {"$ref": "#/components/schemas/AggregateGroup","title": "GROUP"},"count" : {"$ref": "#/components/schemas/AggregateCount","title": "COUNT"},"sort" : {"$ref": "#/components/schemas/AggregateSort","title": "SORT"},"project" : {"$ref": "#/components/schemas/AggregateProject","title": "PROJECT"},"limit" : {"type": "integer","title": "LIMIT"},"skip" : {"type": "integer","title": "SKIP"}},
         "type": "object",
         "required": ["unwind","group","count","sort","project","limit","skip"],
                "title": "StatisticsAggregate"
           }
           ,        "StatisticsQuery": {
         "properties" : {"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"aggregate" : {"items": {"$ref": "#/components/schemas/StatisticsAggregate"},
               "type": "array","$ref": "#/components/schemas/StatisticsAggregate","title": "AGGREGATE"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"distinct" : {"type": "string","title": "DISTINCT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["filter","filter_or","aggregate","page","distinct","keyword"],
                "title": "StatisticsQuery"
           }
           ,        "TimeSeriesAnalyzeQuery": {
         "properties" : {"granularity" : {"type": "Granularity","title": "GRANULARITY"},"start" : {"type": "string","title": "START"},"end" : {"type": "string","title": "END"},"group_by" : {"items": {"type": "string"},
               "type": "array","title": "GROUP_BY"},"field_group" : {"items": {"type": "string"},
               "type": "array","title": "FIELD_GROUP"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"},"filter_or" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER_OR"},"page" : {"$ref": "#/components/schemas/Page","title": "PAGE"},"sort" : {"items": {"$ref": "#/components/schemas/SortKey"},
               "type": "array","$ref": "#/components/schemas/SortKey","title": "SORT"},"fields" : {"type": "object","title": "FIELDS"},"select" : {"type": "object","title": "SELECT"},"keyword" : {"type": "string","title": "KEYWORD"}},
         "type": "object",
         "required": ["granularity","start","end","group_by","field_group","filter","filter_or","page","sort","fields","select","keyword"],
                "title": "TimeSeriesAnalyzeQuery"
           }
           ,        "Unwind": {
         "properties" : {"path" : {"type": "string","title": "PATH"},"filter" : {"items": {"$ref": "#/components/schemas/Filter"},
               "type": "array","$ref": "#/components/schemas/Filter","title": "FILTER"}},
         "type": "object",
         "required": ["path","filter"],
                "title": "Unwind"
           }
           ,        "AuthenticationRequest": {
         "properties" : {"domain_id" : {"type": "string","title": "DOMAIN_ID"}},
         "type": "object",
         "required": ["domain_id"],
                "title": "AuthenticationRequest"
           }
           ,        "AuthenticationResponse": {
         "properties" : {"domain_id" : {"type": "string","title": "DOMAIN_ID"},"public_key" : {"type": "string","title": "PUBLIC_KEY"}},
         "type": "object",
         "required": ["domain_id","public_key"],
                "title": "AuthenticationResponse"
           }
           ,        "AuthorizationRequest": {
         "properties" : {"service" : {"type": "string","title": "SERVICE"},"resource" : {"type": "string","title": "RESOURCE"},"verb" : {"type": "string","title": "VERB"},"scope" : {"type": "Scope","title": "SCOPE"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"project_id" : {"type": "string","title": "PROJECT_ID"},"project_group_id" : {"type": "string","title": "PROJECT_GROUP_ID"},"user_id" : {"type": "string","title": "USER_ID"},"require_project_id" : {"type": "boolean","title": "REQUIRE_PROJECT_ID"},"require_project_group_id" : {"type": "boolean","title": "REQUIRE_PROJECT_GROUP_ID"},"require_user_id" : {"type": "boolean","title": "REQUIRE_USER_ID"},"require_domain_id" : {"type": "boolean","title": "REQUIRE_DOMAIN_ID"}},
         "type": "object",
         "required": ["service","resource","verb","scope","domain_id","project_id","project_group_id","user_id","require_project_id","require_project_group_id","require_user_id","require_domain_id"],
                "title": "AuthorizationRequest"
           }
           ,        "AuthorizationResponse": {
         "properties" : {"role_type" : {"type": "string","title": "ROLE_TYPE"},"projects" : {"items": {"type": "string"},
               "type": "array","title": "PROJECTS"},"project_groups" : {"items": {"type": "string"},
               "type": "array","title": "PROJECT_GROUPS"}},
         "type": "object",
         "required": ["role_type","projects","project_groups"],
                "title": "AuthorizationResponse"
           }
           ,        "EventRequest": {
         "properties" : {"service" : {"type": "string","title": "SERVICE"},"resource" : {"type": "string","title": "RESOURCE"},"verb" : {"type": "string","title": "VERB"},"status" : {"type": "string","title": "STATUS"},"message" : {"type": "object","title": "MESSAGE"}},
         "type": "object",
         "required": ["service","resource","verb","status","message"],
                "title": "EventRequest"
           }
           ,        "AddScheduleRequest": {
         "properties" : {"topic" : {"type": "string","title": "TOPIC"},"options" : {"type": "object","title": "OPTIONS"},"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["topic","options","schedule"],
                "title": "AddScheduleRequest"
           }
           ,        "QueryOption": {
         "properties" : {"aggregate" : {"$ref": "#/components/schemas/StatAggregate","title": "AGGREGATE"},"page" : {"$ref": "#/components/schemas/StatPage","title": "PAGE"}},
         "type": "object",
         "required": ["aggregate"],
                "title": "QueryOption"
           }
           ,        "ScheduleInfo": {
         "properties" : {"schedule_id" : {"type": "string","title": "SCHEDULE_ID"},"topic" : {"type": "string","title": "TOPIC"},"state" : {"type": "string","title": "STATE"},"options" : {"type": "object","title": "OPTIONS"},"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE"},"tags" : {"type": "object","title": "TAGS"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"created_at" : {"type": "string","title": "CREATED_AT"},"last_scheduled_at" : {"type": "string","title": "LAST_SCHEDULED_AT"}},
         "type": "object",
         "required": ["schedule_id","topic","state","options","schedule","tags","domain_id","created_at","last_scheduled_at"],
                "title": "ScheduleInfo"
           }
           ,        "ScheduleQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"schedule_id" : {"type": "string","title": "SCHEDULE_ID"},"topic" : {"type": "string","title": "TOPIC"},"state" : {"type": "string","title": "STATE"}},
         "type": "object",
         "required": [],
                "title": "ScheduleQuery"
           }
           ,        "ScheduleRequest": {
         "properties" : {"schedule_id" : {"type": "string","title": "SCHEDULE_ID"}},
         "type": "object",
         "required": ["schedule_id"],
                "title": "ScheduleRequest"
           }
           ,        "ScheduleStatQuery": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"}},
         "type": "object",
         "required": ["query"],
                "title": "ScheduleStatQuery"
           }
           ,        "Scheduled": {
         "properties" : {"cron" : {"type": "string","title": "CRON"},"interval" : {"type": "integer","title": "INTERVAL"},"minutes" : {"items": {"type": "integer"},
               "type": "array","title": "MINUTES"},"hours" : {"items": {"type": "integer"},
               "type": "array","title": "HOURS"}},
         "type": "object",
         "required": ["cron","interval","minutes","hours"],
                "title": "Scheduled"
           }
           ,        "SchedulesInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/ScheduleInfo"},
               "type": "array","$ref": "#/components/schemas/ScheduleInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "SchedulesInfo"
           }
           ,        "UpdateScheduleRequest": {
         "properties" : {"schedule_id" : {"type": "string","title": "SCHEDULE_ID"},"schedule" : {"$ref": "#/components/schemas/Scheduled","title": "SCHEDULE"},"tags" : {"type": "object","title": "TAGS"}},
         "type": "object",
         "required": ["schedule_id"],
                "title": "UpdateScheduleRequest"
           }
           ,        "CreateHistoryRequest": {
         "properties" : {"schedule_id" : {"type": "string","title": "SCHEDULE_ID"}},
         "type": "object",
         "required": ["schedule_id"],
                "title": "CreateHistoryRequest"
           }
           ,        "HistoryInfo": {
         "properties" : {"results" : {"items": {"$ref": "#/components/schemas/HistoryValueInfo"},
               "type": "array","$ref": "#/components/schemas/HistoryValueInfo","title": "RESULTS"},"total_count" : {"type": "integer","title": "TOTAL_COUNT"}},
         "type": "object",
         "required": ["results","total_count"],
                "title": "HistoryInfo"
           }
           ,        "HistoryStatRequest": {
         "properties" : {"query" : {"$ref": "#/components/schemas/StatisticsQuery","title": "QUERY"},"topic" : {"type": "string","title": "TOPIC"}},
         "type": "object",
         "required": ["query"],
                "title": "HistoryStatRequest"
           }
           ,        "HistoryValueInfo": {
         "properties" : {"topic" : {"type": "string","title": "TOPIC"},"values" : {"type": "object","title": "VALUES"},"domain_id" : {"type": "string","title": "DOMAIN_ID"},"created_at" : {"type": "string","title": "CREATED_AT"}},
         "type": "object",
         "required": ["topic","values","domain_id","created_at"],
                "title": "HistoryValueInfo"
           }
           ,        "QueryHistoryRequest": {
         "properties" : {"query" : {"$ref": "#/components/schemas/Query","title": "QUERY"},"topic" : {"type": "string","title": "TOPIC"}},
         "type": "object",
         "required": [],
                "title": "QueryHistoryRequest"
           }
                   },
      "Struct": {"properties": {"type": "object","title": "Struct"}},
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
       },
       "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [{"type": "string"}, {"type": "integer"}]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {"type": "string","title": "Message"},
          "type": {"type": "string","title": "Error Type"}
        },
        "type": "object",
        "required": ["loc","msg","type"],
        "title": "ValidationError"
      },
      "securitySchemes": {"HTTPBearer": {"type": "http","scheme": "bearer"}
      }
   }
}