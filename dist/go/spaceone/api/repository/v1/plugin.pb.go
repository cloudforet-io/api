// A Plugin is a resource containing data of deployable plugins such as container image and registry URL.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: spaceone/api/repository/v1/plugin.proto

package v1

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PublicRegistryType int32

const (
	PublicRegistryType_NONE_REGISTRY_TYPE PublicRegistryType = 0
	PublicRegistryType_DOCKER_HUB         PublicRegistryType = 1
	PublicRegistryType_AWS_PRIVATE_ECR    PublicRegistryType = 2
	PublicRegistryType_HARBOR             PublicRegistryType = 3
	PublicRegistryType_GITHUB             PublicRegistryType = 4
)

// Enum value maps for PublicRegistryType.
var (
	PublicRegistryType_name = map[int32]string{
		0: "NONE_REGISTRY_TYPE",
		1: "DOCKER_HUB",
		2: "AWS_PRIVATE_ECR",
		3: "HARBOR",
		4: "GITHUB",
	}
	PublicRegistryType_value = map[string]int32{
		"NONE_REGISTRY_TYPE": 0,
		"DOCKER_HUB":         1,
		"AWS_PRIVATE_ECR":    2,
		"HARBOR":             3,
		"GITHUB":             4,
	}
)

func (x PublicRegistryType) Enum() *PublicRegistryType {
	p := new(PublicRegistryType)
	*p = x
	return p
}

func (x PublicRegistryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PublicRegistryType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_repository_v1_plugin_proto_enumTypes[0].Descriptor()
}

func (PublicRegistryType) Type() protoreflect.EnumType {
	return &file_spaceone_api_repository_v1_plugin_proto_enumTypes[0]
}

func (x PublicRegistryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PublicRegistryType.Descriptor instead.
func (PublicRegistryType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{0}
}

type PluginQuery_State int32

const (
	PluginQuery_NONE     PluginQuery_State = 0
	PluginQuery_ENABLED  PluginQuery_State = 1
	PluginQuery_DISABLED PluginQuery_State = 2
)

// Enum value maps for PluginQuery_State.
var (
	PluginQuery_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	PluginQuery_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x PluginQuery_State) Enum() *PluginQuery_State {
	p := new(PluginQuery_State)
	*p = x
	return p
}

func (x PluginQuery_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginQuery_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_repository_v1_plugin_proto_enumTypes[1].Descriptor()
}

func (PluginQuery_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_repository_v1_plugin_proto_enumTypes[1]
}

func (x PluginQuery_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginQuery_State.Descriptor instead.
func (PluginQuery_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{4, 0}
}

type PluginInfo_State int32

const (
	PluginInfo_NONE     PluginInfo_State = 0
	PluginInfo_ENABLED  PluginInfo_State = 1
	PluginInfo_DISABLED PluginInfo_State = 2
)

// Enum value maps for PluginInfo_State.
var (
	PluginInfo_State_name = map[int32]string{
		0: "NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	PluginInfo_State_value = map[string]int32{
		"NONE":     0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x PluginInfo_State) Enum() *PluginInfo_State {
	p := new(PluginInfo_State)
	*p = x
	return p
}

func (x PluginInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PluginInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_repository_v1_plugin_proto_enumTypes[2].Descriptor()
}

func (PluginInfo_State) Type() protoreflect.EnumType {
	return &file_spaceone_api_repository_v1_plugin_proto_enumTypes[2]
}

func (x PluginInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PluginInfo_State.Descriptor instead.
func (PluginInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{5, 0}
}

//	{
//	   "name": "JIRA Software Collector",
//	   "service_type": "inventory.Collector",
//	   "image": "cloudforet/plugin-jira-noti-protocol",
//	   "registry_type": "DOCKER_HUB",
//	   "registry_config": {},
//	   "provider": "jira",
//	   "capability": {
//	       "supported_schema": [
//	           "jira-software-secret-api-token"
//	       ]
//	   },
//	   "labels": [
//	       "jira",
//	       "atlassian",
//	       "notification"
//	   ],
//	   "tags": {
//	       "description": "Atlassian JIRA Issue notification",
//	       "icon": "https://icon-path/jira-icon.png"
//	   }
//	}
type RegisterPluginRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Name         string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ResourceType string                 `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Image        string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// +optional
	Provider string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	// +optional
	RegistryType PublicRegistryType `protobuf:"varint,5,opt,name=registry_type,json=registryType,proto3,enum=spaceone.api.repository.v1.PublicRegistryType" json:"registry_type,omitempty"`
	// +optional
	RegistryConfig *_struct.Struct `protobuf:"bytes,6,opt,name=registry_config,json=registryConfig,proto3" json:"registry_config,omitempty"`
	// +optional
	Capability *_struct.Struct `protobuf:"bytes,7,opt,name=capability,proto3" json:"capability,omitempty"`
	// +optional
	Labels *_struct.ListValue `protobuf:"bytes,8,opt,name=labels,proto3" json:"labels,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,9,opt,name=tags,proto3" json:"tags,omitempty"`
	// if plugin_id is not provided, it will be generated by image name
	// +optional
	PluginId string `protobuf:"bytes,10,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	// +optional
	// {"en": {}, "ko": {}, "ja":{}}
	Docs          *_struct.Struct `protobuf:"bytes,11,opt,name=docs,proto3" json:"docs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterPluginRequest) Reset() {
	*x = RegisterPluginRequest{}
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPluginRequest) ProtoMessage() {}

func (x *RegisterPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPluginRequest.ProtoReflect.Descriptor instead.
func (*RegisterPluginRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterPluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterPluginRequest) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *RegisterPluginRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *RegisterPluginRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *RegisterPluginRequest) GetRegistryType() PublicRegistryType {
	if x != nil {
		return x.RegistryType
	}
	return PublicRegistryType_NONE_REGISTRY_TYPE
}

func (x *RegisterPluginRequest) GetRegistryConfig() *_struct.Struct {
	if x != nil {
		return x.RegistryConfig
	}
	return nil
}

func (x *RegisterPluginRequest) GetCapability() *_struct.Struct {
	if x != nil {
		return x.Capability
	}
	return nil
}

func (x *RegisterPluginRequest) GetLabels() *_struct.ListValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RegisterPluginRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RegisterPluginRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *RegisterPluginRequest) GetDocs() *_struct.Struct {
	if x != nil {
		return x.Docs
	}
	return nil
}

//	{
//	   "name": "JIRA Software Collector",
//	   "capability": {
//	       "supported_schema": [
//	           "jira-software-secret-api-token"
//	       ]
//	   },
//	   "labels": [
//	       "jira",
//	       "atlassian",
//	       "notification"
//	   ],
//	   "tags": {
//	       "description": "Atlassian JIRA Issue notification",
//	       "icon": "https://icon-path/jira-icon.png"
//	   }
//	}
type UpdatePluginRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	PluginId string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Capability *_struct.Struct `protobuf:"bytes,3,opt,name=capability,proto3" json:"capability,omitempty"`
	// +optional
	Labels *_struct.ListValue `protobuf:"bytes,4,opt,name=labels,proto3" json:"labels,omitempty"`
	// +optional
	Tags *_struct.Struct `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	// +optional
	Docs          *_struct.Struct `protobuf:"bytes,6,opt,name=docs,proto3" json:"docs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePluginRequest) Reset() {
	*x = UpdatePluginRequest{}
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePluginRequest) ProtoMessage() {}

func (x *UpdatePluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePluginRequest.ProtoReflect.Descriptor instead.
func (*UpdatePluginRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *UpdatePluginRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *UpdatePluginRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePluginRequest) GetCapability() *_struct.Struct {
	if x != nil {
		return x.Capability
	}
	return nil
}

func (x *UpdatePluginRequest) GetLabels() *_struct.ListValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdatePluginRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdatePluginRequest) GetDocs() *_struct.Struct {
	if x != nil {
		return x.Docs
	}
	return nil
}

//	{
//	   "plugin_id": "plugin-aws-sns-mon-webhook",
//	}
type PluginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PluginId      string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginRequest) Reset() {
	*x = PluginRequest{}
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRequest) ProtoMessage() {}

func (x *PluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRequest.ProtoReflect.Descriptor instead.
func (*PluginRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *PluginRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

//	{
//	   "plugin_id": "plugin-aws-sns-mon-webhook",
//	}
type RepositoryPluginRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	PluginId string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	// +optional
	RepositoryId  string `protobuf:"bytes,21,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepositoryPluginRequest) Reset() {
	*x = RepositoryPluginRequest{}
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepositoryPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryPluginRequest) ProtoMessage() {}

func (x *RepositoryPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryPluginRequest.ProtoReflect.Descriptor instead.
func (*RepositoryPluginRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *RepositoryPluginRequest) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *RepositoryPluginRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

//	{
//	   "query": {},
//	   "repository_id": "repo-123456789012"
//	}
type PluginQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	PluginId string `protobuf:"bytes,2,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State PluginQuery_State `protobuf:"varint,4,opt,name=state,proto3,enum=spaceone.api.repository.v1.PluginQuery_State" json:"state,omitempty"`
	// +optional
	ResourceType string `protobuf:"bytes,5,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	// +optional
	Provider string `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
	// +optional
	RegistryType PublicRegistryType `protobuf:"varint,7,opt,name=registry_type,json=registryType,proto3,enum=spaceone.api.repository.v1.PublicRegistryType" json:"registry_type,omitempty"`
	// +optional
	RepositoryId  string `protobuf:"bytes,21,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginQuery) Reset() {
	*x = PluginQuery{}
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginQuery) ProtoMessage() {}

func (x *PluginQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginQuery.ProtoReflect.Descriptor instead.
func (*PluginQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *PluginQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *PluginQuery) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *PluginQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginQuery) GetState() PluginQuery_State {
	if x != nil {
		return x.State
	}
	return PluginQuery_NONE
}

func (x *PluginQuery) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *PluginQuery) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *PluginQuery) GetRegistryType() PublicRegistryType {
	if x != nil {
		return x.RegistryType
	}
	return PublicRegistryType_NONE_REGISTRY_TYPE
}

func (x *PluginQuery) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

//	{
//	   "plugin_id": "plugin-jira-noti-protocol",
//	   "name": "JIRA Issue notification",
//	   "image": "pyengine/plugin-jira-noti-protocol",
//	   "registry_url": "registry.hub.docker.com",
//	   "state": "ENABLED",
//	   "service_type": "notification.Procotol",
//	   "provider": "atlassian",
//	   "registry_type": "DOCKER_HUB",
//	   "registry_config": {},
//	   "capability": {
//	       "supported_schema": [
//	           "atlassian_jira"
//	       ]
//	   },
//	   "template": {
//	       "options": {
//	           "schema": {
//	               "type": "object",
//	               "required": [],
//	               "properties": {
//	                   "project_id": {
//	                       "type": "string",
//	                       "title": "Project ID",
//	                       "minLength": 4.0
//	                   },
//	                   "sa_name": {
//	                       "title": "Service Account",
//	                       "type": "string",
//	                       "minLength": 4.0
//	                   }
//	               }
//	           }
//	       }
//	   },
//	   "labels": [
//	       "jira",
//	       "atlassian",
//	       "notification"
//	   ],
//	   "tags": {
//	       "description": "Atlassian JIRA Issue notification",
//	       "icon": "https://icon-path/jira-icon.png"
//	   },
//	   "repository_info": {
//	       "repository_id": "repo-123456789012",
//	       "name": "Marketplace",
//	       "repository_type": "remote"
//	   },
//	   "domain_id": "domain-123456789012",
//	   "created_at": "2022-01-01T08:02:38.094Z",
//	   "updated_at": "2022-01-01T08:02:38.094Z"
//	}
type PluginInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PluginId       string                 `protobuf:"bytes,1,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State          PluginInfo_State       `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.repository.v1.PluginInfo_State" json:"state,omitempty"`
	ResourceType   string                 `protobuf:"bytes,4,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Image          string                 `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	Provider       string                 `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
	RegistryType   PublicRegistryType     `protobuf:"varint,7,opt,name=registry_type,json=registryType,proto3,enum=spaceone.api.repository.v1.PublicRegistryType" json:"registry_type,omitempty"`
	RegistryUrl    string                 `protobuf:"bytes,8,opt,name=registry_url,json=registryUrl,proto3" json:"registry_url,omitempty"`
	RegistryConfig *_struct.Struct        `protobuf:"bytes,9,opt,name=registry_config,json=registryConfig,proto3" json:"registry_config,omitempty"`
	Capability     *_struct.Struct        `protobuf:"bytes,10,opt,name=capability,proto3" json:"capability,omitempty"`
	Labels         *_struct.ListValue     `protobuf:"bytes,11,opt,name=labels,proto3" json:"labels,omitempty"`
	Tags           *_struct.Struct        `protobuf:"bytes,12,opt,name=tags,proto3" json:"tags,omitempty"`
	Docs           *_struct.Struct        `protobuf:"bytes,13,opt,name=docs,proto3" json:"docs,omitempty"`
	DomainId       string                 `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	RepositoryInfo *RepositoryInfo        `protobuf:"bytes,22,opt,name=repository_info,json=repositoryInfo,proto3" json:"repository_info,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string                 `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PluginInfo) Reset() {
	*x = PluginInfo{}
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo) ProtoMessage() {}

func (x *PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo.ProtoReflect.Descriptor instead.
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *PluginInfo) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *PluginInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginInfo) GetState() PluginInfo_State {
	if x != nil {
		return x.State
	}
	return PluginInfo_NONE
}

func (x *PluginInfo) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *PluginInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PluginInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *PluginInfo) GetRegistryType() PublicRegistryType {
	if x != nil {
		return x.RegistryType
	}
	return PublicRegistryType_NONE_REGISTRY_TYPE
}

func (x *PluginInfo) GetRegistryUrl() string {
	if x != nil {
		return x.RegistryUrl
	}
	return ""
}

func (x *PluginInfo) GetRegistryConfig() *_struct.Struct {
	if x != nil {
		return x.RegistryConfig
	}
	return nil
}

func (x *PluginInfo) GetCapability() *_struct.Struct {
	if x != nil {
		return x.Capability
	}
	return nil
}

func (x *PluginInfo) GetLabels() *_struct.ListValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *PluginInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PluginInfo) GetDocs() *_struct.Struct {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *PluginInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *PluginInfo) GetRepositoryInfo() *RepositoryInfo {
	if x != nil {
		return x.RepositoryInfo
	}
	return nil
}

func (x *PluginInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PluginInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

//	{
//	   "results": [
//	       {
//	           "plugin_id": "plugin-api-direct-mon-webhook",
//	           "name": "API Direct Webhook",
//	           "image": "pyengine/plugin-api-direct-mon-webhook",
//	           "registry_url": "registry.hub.docker.com",
//	           "state": "ENABLED",
//	           "service_type": "monitoring.Webhook",
//	           "registry_type": "DOCKER_HUB",
//	           "registry_config": {},
//	           "capability": {},
//	           "template": {},
//	           "labels": [],
//	           "tags": {
//	               "icon": "https://icon-url/icon.svg"
//	           },
//	           "repository_info": {
//	               "repository_id": "repo-123456789012",
//	               "name": "Marketplace",
//	               "repository_type": "remote"
//	           },
//	           "domain_id": "domain-987654321098",
//	           "created_at": "2022-01-01T03:25:10.408Z",
//	           "updated_at": "2022-01-01T03:25:10.408Z"
//	       },
//	       {
//	           "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
//	           "name": "AWS HyperBilling Cost Analysis Data Source",
//	           "image": "pyengine/plugin-aws-hyperbilling-cost-datasource",
//	           "registry_url": "registry.hub.docker.com",
//	           "state": "ENABLED",
//	           "service_type": "cost_analysis.DataSoruce",
//	           "registry_type": "DOCKER_HUB",
//	           "registry_config": {},
//	           "capability": {},
//	           "template": {},
//	           "labels": [],
//	           "tags": {},
//	           "repository_info": {
//	               "repository_id": "repo-123456789012",
//	               "name": "Marketplace",
//	               "repository_type": "remote"
//	           },
//	           "domain_id": "domain-987654321098",
//	           "created_at": "2022-01-01T04:56:55.082Z",
//	           "updated_at": "2022-01-01T04:56:55.082Z"
//	       }
//	   ],
//	   "total_count": 2
//	}
type PluginsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*PluginInfo          `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginsInfo) Reset() {
	*x = PluginsInfo{}
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsInfo) ProtoMessage() {}

func (x *PluginsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsInfo.ProtoReflect.Descriptor instead.
func (*PluginsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *PluginsInfo) GetResults() []*PluginInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PluginsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

//	{
//	   "total_count": 1,
//	   "results": [
//	       "1.2.2",
//	       "1.2.1.20220429.104002",
//	       "1.2.1.20220422.161421",
//	       "1.2.1.20220411.113807",
//	       "1.2.1"
//	   ]
//	}
type VersionsInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// deprecated field
	Version       []string `protobuf:"bytes,1,rep,name=version,proto3" json:"version,omitempty"`
	TotalCount    int32    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Results       []string `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionsInfo) Reset() {
	*x = VersionsInfo{}
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionsInfo) ProtoMessage() {}

func (x *VersionsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_repository_v1_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionsInfo.ProtoReflect.Descriptor instead.
func (*VersionsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *VersionsInfo) GetVersion() []string {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *VersionsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *VersionsInfo) GetResults() []string {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_spaceone_api_repository_v1_plugin_proto protoreflect.FileDescriptor

const file_spaceone_api_repository_v1_plugin_proto_rawDesc = "" +
	"\n" +
	"'spaceone/api/repository/v1/plugin.proto\x12\x1aspaceone.api.repository.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1cgoogle/api/annotations.proto\x1a spaceone/api/core/v2/query.proto\x1a+spaceone/api/repository/v1/repository.proto\"\xfd\x03\n" +
	"\x15RegisterPluginRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rresource_type\x18\x02 \x01(\tR\fresourceType\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x1a\n" +
	"\bprovider\x18\x04 \x01(\tR\bprovider\x12S\n" +
	"\rregistry_type\x18\x05 \x01(\x0e2..spaceone.api.repository.v1.PublicRegistryTypeR\fregistryType\x12@\n" +
	"\x0fregistry_config\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x0eregistryConfig\x127\n" +
	"\n" +
	"capability\x18\a \x01(\v2\x17.google.protobuf.StructR\n" +
	"capability\x122\n" +
	"\x06labels\x18\b \x01(\v2\x1a.google.protobuf.ListValueR\x06labels\x12+\n" +
	"\x04tags\x18\t \x01(\v2\x17.google.protobuf.StructR\x04tags\x12\x1b\n" +
	"\tplugin_id\x18\n" +
	" \x01(\tR\bpluginId\x12+\n" +
	"\x04docs\x18\v \x01(\v2\x17.google.protobuf.StructR\x04docs\"\x8d\x02\n" +
	"\x13UpdatePluginRequest\x12\x1b\n" +
	"\tplugin_id\x18\x01 \x01(\tR\bpluginId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x127\n" +
	"\n" +
	"capability\x18\x03 \x01(\v2\x17.google.protobuf.StructR\n" +
	"capability\x122\n" +
	"\x06labels\x18\x04 \x01(\v2\x1a.google.protobuf.ListValueR\x06labels\x12+\n" +
	"\x04tags\x18\x05 \x01(\v2\x17.google.protobuf.StructR\x04tags\x12+\n" +
	"\x04docs\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x04docs\",\n" +
	"\rPluginRequest\x12\x1b\n" +
	"\tplugin_id\x18\x01 \x01(\tR\bpluginId\"[\n" +
	"\x17RepositoryPluginRequest\x12\x1b\n" +
	"\tplugin_id\x18\x01 \x01(\tR\bpluginId\x12#\n" +
	"\rrepository_id\x18\x15 \x01(\tR\frepositoryId\"\x9f\x03\n" +
	"\vPluginQuery\x121\n" +
	"\x05query\x18\x01 \x01(\v2\x1b.spaceone.api.core.v2.QueryR\x05query\x12\x1b\n" +
	"\tplugin_id\x18\x02 \x01(\tR\bpluginId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12C\n" +
	"\x05state\x18\x04 \x01(\x0e2-.spaceone.api.repository.v1.PluginQuery.StateR\x05state\x12#\n" +
	"\rresource_type\x18\x05 \x01(\tR\fresourceType\x12\x1a\n" +
	"\bprovider\x18\x06 \x01(\tR\bprovider\x12S\n" +
	"\rregistry_type\x18\a \x01(\x0e2..spaceone.api.repository.v1.PublicRegistryTypeR\fregistryType\x12#\n" +
	"\rrepository_id\x18\x15 \x01(\tR\frepositoryId\",\n" +
	"\x05State\x12\b\n" +
	"\x04NONE\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x02\"\xb7\x06\n" +
	"\n" +
	"PluginInfo\x12\x1b\n" +
	"\tplugin_id\x18\x01 \x01(\tR\bpluginId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12B\n" +
	"\x05state\x18\x03 \x01(\x0e2,.spaceone.api.repository.v1.PluginInfo.StateR\x05state\x12#\n" +
	"\rresource_type\x18\x04 \x01(\tR\fresourceType\x12\x14\n" +
	"\x05image\x18\x05 \x01(\tR\x05image\x12\x1a\n" +
	"\bprovider\x18\x06 \x01(\tR\bprovider\x12S\n" +
	"\rregistry_type\x18\a \x01(\x0e2..spaceone.api.repository.v1.PublicRegistryTypeR\fregistryType\x12!\n" +
	"\fregistry_url\x18\b \x01(\tR\vregistryUrl\x12@\n" +
	"\x0fregistry_config\x18\t \x01(\v2\x17.google.protobuf.StructR\x0eregistryConfig\x127\n" +
	"\n" +
	"capability\x18\n" +
	" \x01(\v2\x17.google.protobuf.StructR\n" +
	"capability\x122\n" +
	"\x06labels\x18\v \x01(\v2\x1a.google.protobuf.ListValueR\x06labels\x12+\n" +
	"\x04tags\x18\f \x01(\v2\x17.google.protobuf.StructR\x04tags\x12+\n" +
	"\x04docs\x18\r \x01(\v2\x17.google.protobuf.StructR\x04docs\x12\x1b\n" +
	"\tdomain_id\x18\x15 \x01(\tR\bdomainId\x12S\n" +
	"\x0frepository_info\x18\x16 \x01(\v2*.spaceone.api.repository.v1.RepositoryInfoR\x0erepositoryInfo\x12\x1d\n" +
	"\n" +
	"created_at\x18\x1f \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18  \x01(\tR\tupdatedAt\",\n" +
	"\x05State\x12\b\n" +
	"\x04NONE\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x02\"p\n" +
	"\vPluginsInfo\x12@\n" +
	"\aresults\x18\x01 \x03(\v2&.spaceone.api.repository.v1.PluginInfoR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"c\n" +
	"\fVersionsInfo\x12\x18\n" +
	"\aversion\x18\x01 \x03(\tR\aversion\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x18\n" +
	"\aresults\x18\x03 \x03(\tR\aresults*i\n" +
	"\x12PublicRegistryType\x12\x16\n" +
	"\x12NONE_REGISTRY_TYPE\x10\x00\x12\x0e\n" +
	"\n" +
	"DOCKER_HUB\x10\x01\x12\x13\n" +
	"\x0fAWS_PRIVATE_ECR\x10\x02\x12\n" +
	"\n" +
	"\x06HARBOR\x10\x03\x12\n" +
	"\n" +
	"\x06GITHUB\x10\x042\xe1\b\n" +
	"\x06Plugin\x12\x90\x01\n" +
	"\bregister\x121.spaceone.api.repository.v1.RegisterPluginRequest\x1a&.spaceone.api.repository.v1.PluginInfo\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/repository/v1/plugin/register\x12\x8a\x01\n" +
	"\x06update\x12/.spaceone.api.repository.v1.UpdatePluginRequest\x1a&.spaceone.api.repository.v1.PluginInfo\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/repository/v1/plugin/update\x12|\n" +
	"\n" +
	"deregister\x12).spaceone.api.repository.v1.PluginRequest\x1a\x16.google.protobuf.Empty\"+\x82\xd3\xe4\x93\x02%:\x01*\" /repository/v1/plugin/deregister\x12\x84\x01\n" +
	"\x06enable\x12).spaceone.api.repository.v1.PluginRequest\x1a&.spaceone.api.repository.v1.PluginInfo\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/repository/v1/plugin/enable\x12\x86\x01\n" +
	"\adisable\x12).spaceone.api.repository.v1.PluginRequest\x1a&.spaceone.api.repository.v1.PluginInfo\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/repository/v1/plugin/disable\x12\x9c\x01\n" +
	"\fget_versions\x123.spaceone.api.repository.v1.RepositoryPluginRequest\x1a(.spaceone.api.repository.v1.VersionsInfo\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/repository/v1/plugin/get-versions\x12\x88\x01\n" +
	"\x03get\x123.spaceone.api.repository.v1.RepositoryPluginRequest\x1a&.spaceone.api.repository.v1.PluginInfo\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/repository/v1/plugin/get\x12\x7f\n" +
	"\x04list\x12'.spaceone.api.repository.v1.PluginQuery\x1a'.spaceone.api.repository.v1.PluginsInfo\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/repository/v1/plugin/listBAZ?github.com/cloudforet-io/api/dist/go/spaceone/api/repository/v1b\x06proto3"

var (
	file_spaceone_api_repository_v1_plugin_proto_rawDescOnce sync.Once
	file_spaceone_api_repository_v1_plugin_proto_rawDescData []byte
)

func file_spaceone_api_repository_v1_plugin_proto_rawDescGZIP() []byte {
	file_spaceone_api_repository_v1_plugin_proto_rawDescOnce.Do(func() {
		file_spaceone_api_repository_v1_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spaceone_api_repository_v1_plugin_proto_rawDesc), len(file_spaceone_api_repository_v1_plugin_proto_rawDesc)))
	})
	return file_spaceone_api_repository_v1_plugin_proto_rawDescData
}

var file_spaceone_api_repository_v1_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spaceone_api_repository_v1_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_spaceone_api_repository_v1_plugin_proto_goTypes = []any{
	(PublicRegistryType)(0),         // 0: spaceone.api.repository.v1.PublicRegistryType
	(PluginQuery_State)(0),          // 1: spaceone.api.repository.v1.PluginQuery.State
	(PluginInfo_State)(0),           // 2: spaceone.api.repository.v1.PluginInfo.State
	(*RegisterPluginRequest)(nil),   // 3: spaceone.api.repository.v1.RegisterPluginRequest
	(*UpdatePluginRequest)(nil),     // 4: spaceone.api.repository.v1.UpdatePluginRequest
	(*PluginRequest)(nil),           // 5: spaceone.api.repository.v1.PluginRequest
	(*RepositoryPluginRequest)(nil), // 6: spaceone.api.repository.v1.RepositoryPluginRequest
	(*PluginQuery)(nil),             // 7: spaceone.api.repository.v1.PluginQuery
	(*PluginInfo)(nil),              // 8: spaceone.api.repository.v1.PluginInfo
	(*PluginsInfo)(nil),             // 9: spaceone.api.repository.v1.PluginsInfo
	(*VersionsInfo)(nil),            // 10: spaceone.api.repository.v1.VersionsInfo
	(*_struct.Struct)(nil),          // 11: google.protobuf.Struct
	(*_struct.ListValue)(nil),       // 12: google.protobuf.ListValue
	(*v2.Query)(nil),                // 13: spaceone.api.core.v2.Query
	(*RepositoryInfo)(nil),          // 14: spaceone.api.repository.v1.RepositoryInfo
	(*empty.Empty)(nil),             // 15: google.protobuf.Empty
}
var file_spaceone_api_repository_v1_plugin_proto_depIdxs = []int32{
	0,  // 0: spaceone.api.repository.v1.RegisterPluginRequest.registry_type:type_name -> spaceone.api.repository.v1.PublicRegistryType
	11, // 1: spaceone.api.repository.v1.RegisterPluginRequest.registry_config:type_name -> google.protobuf.Struct
	11, // 2: spaceone.api.repository.v1.RegisterPluginRequest.capability:type_name -> google.protobuf.Struct
	12, // 3: spaceone.api.repository.v1.RegisterPluginRequest.labels:type_name -> google.protobuf.ListValue
	11, // 4: spaceone.api.repository.v1.RegisterPluginRequest.tags:type_name -> google.protobuf.Struct
	11, // 5: spaceone.api.repository.v1.RegisterPluginRequest.docs:type_name -> google.protobuf.Struct
	11, // 6: spaceone.api.repository.v1.UpdatePluginRequest.capability:type_name -> google.protobuf.Struct
	12, // 7: spaceone.api.repository.v1.UpdatePluginRequest.labels:type_name -> google.protobuf.ListValue
	11, // 8: spaceone.api.repository.v1.UpdatePluginRequest.tags:type_name -> google.protobuf.Struct
	11, // 9: spaceone.api.repository.v1.UpdatePluginRequest.docs:type_name -> google.protobuf.Struct
	13, // 10: spaceone.api.repository.v1.PluginQuery.query:type_name -> spaceone.api.core.v2.Query
	1,  // 11: spaceone.api.repository.v1.PluginQuery.state:type_name -> spaceone.api.repository.v1.PluginQuery.State
	0,  // 12: spaceone.api.repository.v1.PluginQuery.registry_type:type_name -> spaceone.api.repository.v1.PublicRegistryType
	2,  // 13: spaceone.api.repository.v1.PluginInfo.state:type_name -> spaceone.api.repository.v1.PluginInfo.State
	0,  // 14: spaceone.api.repository.v1.PluginInfo.registry_type:type_name -> spaceone.api.repository.v1.PublicRegistryType
	11, // 15: spaceone.api.repository.v1.PluginInfo.registry_config:type_name -> google.protobuf.Struct
	11, // 16: spaceone.api.repository.v1.PluginInfo.capability:type_name -> google.protobuf.Struct
	12, // 17: spaceone.api.repository.v1.PluginInfo.labels:type_name -> google.protobuf.ListValue
	11, // 18: spaceone.api.repository.v1.PluginInfo.tags:type_name -> google.protobuf.Struct
	11, // 19: spaceone.api.repository.v1.PluginInfo.docs:type_name -> google.protobuf.Struct
	14, // 20: spaceone.api.repository.v1.PluginInfo.repository_info:type_name -> spaceone.api.repository.v1.RepositoryInfo
	8,  // 21: spaceone.api.repository.v1.PluginsInfo.results:type_name -> spaceone.api.repository.v1.PluginInfo
	3,  // 22: spaceone.api.repository.v1.Plugin.register:input_type -> spaceone.api.repository.v1.RegisterPluginRequest
	4,  // 23: spaceone.api.repository.v1.Plugin.update:input_type -> spaceone.api.repository.v1.UpdatePluginRequest
	5,  // 24: spaceone.api.repository.v1.Plugin.deregister:input_type -> spaceone.api.repository.v1.PluginRequest
	5,  // 25: spaceone.api.repository.v1.Plugin.enable:input_type -> spaceone.api.repository.v1.PluginRequest
	5,  // 26: spaceone.api.repository.v1.Plugin.disable:input_type -> spaceone.api.repository.v1.PluginRequest
	6,  // 27: spaceone.api.repository.v1.Plugin.get_versions:input_type -> spaceone.api.repository.v1.RepositoryPluginRequest
	6,  // 28: spaceone.api.repository.v1.Plugin.get:input_type -> spaceone.api.repository.v1.RepositoryPluginRequest
	7,  // 29: spaceone.api.repository.v1.Plugin.list:input_type -> spaceone.api.repository.v1.PluginQuery
	8,  // 30: spaceone.api.repository.v1.Plugin.register:output_type -> spaceone.api.repository.v1.PluginInfo
	8,  // 31: spaceone.api.repository.v1.Plugin.update:output_type -> spaceone.api.repository.v1.PluginInfo
	15, // 32: spaceone.api.repository.v1.Plugin.deregister:output_type -> google.protobuf.Empty
	8,  // 33: spaceone.api.repository.v1.Plugin.enable:output_type -> spaceone.api.repository.v1.PluginInfo
	8,  // 34: spaceone.api.repository.v1.Plugin.disable:output_type -> spaceone.api.repository.v1.PluginInfo
	10, // 35: spaceone.api.repository.v1.Plugin.get_versions:output_type -> spaceone.api.repository.v1.VersionsInfo
	8,  // 36: spaceone.api.repository.v1.Plugin.get:output_type -> spaceone.api.repository.v1.PluginInfo
	9,  // 37: spaceone.api.repository.v1.Plugin.list:output_type -> spaceone.api.repository.v1.PluginsInfo
	30, // [30:38] is the sub-list for method output_type
	22, // [22:30] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_spaceone_api_repository_v1_plugin_proto_init() }
func file_spaceone_api_repository_v1_plugin_proto_init() {
	if File_spaceone_api_repository_v1_plugin_proto != nil {
		return
	}
	file_spaceone_api_repository_v1_repository_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spaceone_api_repository_v1_plugin_proto_rawDesc), len(file_spaceone_api_repository_v1_plugin_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_repository_v1_plugin_proto_goTypes,
		DependencyIndexes: file_spaceone_api_repository_v1_plugin_proto_depIdxs,
		EnumInfos:         file_spaceone_api_repository_v1_plugin_proto_enumTypes,
		MessageInfos:      file_spaceone_api_repository_v1_plugin_proto_msgTypes,
	}.Build()
	File_spaceone_api_repository_v1_plugin_proto = out.File
	file_spaceone_api_repository_v1_plugin_proto_goTypes = nil
	file_spaceone_api_repository_v1_plugin_proto_depIdxs = nil
}
