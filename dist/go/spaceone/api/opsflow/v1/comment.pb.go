// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.6.1
// source: spaceone/api/opsflow/v1/comment.proto

package v1

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommentInfo_CommentType int32

const (
	CommentInfo_COMMENT_TYPE_NONE CommentInfo_CommentType = 0
	CommentInfo_TASK_DESCRIPTION  CommentInfo_CommentType = 1
	CommentInfo_COMMENT           CommentInfo_CommentType = 2
)

// Enum value maps for CommentInfo_CommentType.
var (
	CommentInfo_CommentType_name = map[int32]string{
		0: "COMMENT_TYPE_NONE",
		1: "TASK_DESCRIPTION",
		2: "COMMENT",
	}
	CommentInfo_CommentType_value = map[string]int32{
		"COMMENT_TYPE_NONE": 0,
		"TASK_DESCRIPTION":  1,
		"COMMENT":           2,
	}
)

func (x CommentInfo_CommentType) Enum() *CommentInfo_CommentType {
	p := new(CommentInfo_CommentType)
	*p = x
	return p
}

func (x CommentInfo_CommentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommentInfo_CommentType) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_opsflow_v1_comment_proto_enumTypes[0].Descriptor()
}

func (CommentInfo_CommentType) Type() protoreflect.EnumType {
	return &file_spaceone_api_opsflow_v1_comment_proto_enumTypes[0]
}

func (x CommentInfo_CommentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommentInfo_CommentType.Descriptor instead.
func (CommentInfo_CommentType) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{5, 0}
}

type CommentInfo_ResourceGroup int32

const (
	CommentInfo_RESOURCE_GROUP_NONE CommentInfo_ResourceGroup = 0
	CommentInfo_WORKSPACE           CommentInfo_ResourceGroup = 1
	CommentInfo_PROJECT             CommentInfo_ResourceGroup = 2
)

// Enum value maps for CommentInfo_ResourceGroup.
var (
	CommentInfo_ResourceGroup_name = map[int32]string{
		0: "RESOURCE_GROUP_NONE",
		1: "WORKSPACE",
		2: "PROJECT",
	}
	CommentInfo_ResourceGroup_value = map[string]int32{
		"RESOURCE_GROUP_NONE": 0,
		"WORKSPACE":           1,
		"PROJECT":             2,
	}
)

func (x CommentInfo_ResourceGroup) Enum() *CommentInfo_ResourceGroup {
	p := new(CommentInfo_ResourceGroup)
	*p = x
	return p
}

func (x CommentInfo_ResourceGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommentInfo_ResourceGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_opsflow_v1_comment_proto_enumTypes[1].Descriptor()
}

func (CommentInfo_ResourceGroup) Type() protoreflect.EnumType {
	return &file_spaceone_api_opsflow_v1_comment_proto_enumTypes[1]
}

func (x CommentInfo_ResourceGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommentInfo_ResourceGroup.Descriptor instead.
func (CommentInfo_ResourceGroup) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{5, 1}
}

type Mentions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	USER          []string               `protobuf:"bytes,1,rep,name=USER,proto3" json:"USER,omitempty"`
	USER_GROUP    []string               `protobuf:"bytes,2,rep,name=USER_GROUP,json=USERGROUP,proto3" json:"USER_GROUP,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mentions) Reset() {
	*x = Mentions{}
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mentions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mentions) ProtoMessage() {}

func (x *Mentions) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mentions.ProtoReflect.Descriptor instead.
func (*Mentions) Descriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Mentions) GetUSER() []string {
	if x != nil {
		return x.USER
	}
	return nil
}

func (x *Mentions) GetUSER_GROUP() []string {
	if x != nil {
		return x.USER_GROUP
	}
	return nil
}

type CommentCreateRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	TaskId  string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Comment string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// +optional
	Mentions *Mentions `protobuf:"bytes,3,opt,name=mentions,proto3" json:"mentions,omitempty"`
	// +optional
	Source *_struct.Struct `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	// +optional
	ReferenceId   string `protobuf:"bytes,5,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentCreateRequest) Reset() {
	*x = CommentCreateRequest{}
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentCreateRequest) ProtoMessage() {}

func (x *CommentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentCreateRequest.ProtoReflect.Descriptor instead.
func (*CommentCreateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CommentCreateRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CommentCreateRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CommentCreateRequest) GetMentions() *Mentions {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *CommentCreateRequest) GetSource() *_struct.Struct {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *CommentCreateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

type CommentUpdateRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	CommentId string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Comment   string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// +optional
	Mentions      *Mentions `protobuf:"bytes,3,opt,name=mentions,proto3" json:"mentions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentUpdateRequest) Reset() {
	*x = CommentUpdateRequest{}
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentUpdateRequest) ProtoMessage() {}

func (x *CommentUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentUpdateRequest.ProtoReflect.Descriptor instead.
func (*CommentUpdateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{2}
}

func (x *CommentUpdateRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *CommentUpdateRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CommentUpdateRequest) GetMentions() *Mentions {
	if x != nil {
		return x.Mentions
	}
	return nil
}

type CommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentRequest) Reset() {
	*x = CommentRequest{}
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentRequest) ProtoMessage() {}

func (x *CommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentRequest.ProtoReflect.Descriptor instead.
func (*CommentRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{3}
}

func (x *CommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type CommentSearchQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// +optional
	CommentId string `protobuf:"bytes,3,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	// +optional
	CommentType CommentInfo_CommentType `protobuf:"varint,4,opt,name=comment_type,json=commentType,proto3,enum=spaceone.api.opsflow.v1.CommentInfo_CommentType" json:"comment_type,omitempty"`
	// +optional
	UserId string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// +optional
	UserGroupId string `protobuf:"bytes,6,opt,name=user_group_id,json=userGroupId,proto3" json:"user_group_id,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,11,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// +optional
	ProjectId     string `protobuf:"bytes,12,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentSearchQuery) Reset() {
	*x = CommentSearchQuery{}
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentSearchQuery) ProtoMessage() {}

func (x *CommentSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentSearchQuery.ProtoReflect.Descriptor instead.
func (*CommentSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{4}
}

func (x *CommentSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *CommentSearchQuery) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CommentSearchQuery) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *CommentSearchQuery) GetCommentType() CommentInfo_CommentType {
	if x != nil {
		return x.CommentType
	}
	return CommentInfo_COMMENT_TYPE_NONE
}

func (x *CommentSearchQuery) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommentSearchQuery) GetUserGroupId() string {
	if x != nil {
		return x.UserGroupId
	}
	return ""
}

func (x *CommentSearchQuery) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CommentSearchQuery) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type CommentInfo struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	CommentId     string                  `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Comment       string                  `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	CommentType   CommentInfo_CommentType `protobuf:"varint,3,opt,name=comment_type,json=commentType,proto3,enum=spaceone.api.opsflow.v1.CommentInfo_CommentType" json:"comment_type,omitempty"`
	IsEdited      bool                    `protobuf:"varint,4,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	Mentions      *Mentions               `protobuf:"bytes,5,opt,name=mentions,proto3" json:"mentions,omitempty"`
	Source        *_struct.Struct         `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	ReferenceId   string                  `protobuf:"bytes,8,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	ContentsType  string                  `protobuf:"bytes,9,opt,name=contents_type,json=contentsType,proto3" json:"contents_type,omitempty"`
	DomainId      string                  `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId   string                  `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ProjectId     string                  `protobuf:"bytes,23,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TaskId        string                  `protobuf:"bytes,24,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	CreatedAt     string                  `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                  `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string                  `protobuf:"bytes,33,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{5}
}

func (x *CommentInfo) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *CommentInfo) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CommentInfo) GetCommentType() CommentInfo_CommentType {
	if x != nil {
		return x.CommentType
	}
	return CommentInfo_COMMENT_TYPE_NONE
}

func (x *CommentInfo) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *CommentInfo) GetMentions() *Mentions {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *CommentInfo) GetSource() *_struct.Struct {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *CommentInfo) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *CommentInfo) GetContentsType() string {
	if x != nil {
		return x.ContentsType
	}
	return ""
}

func (x *CommentInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *CommentInfo) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CommentInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CommentInfo) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CommentInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CommentInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CommentInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type CommentsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*CommentInfo         `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentsInfo) Reset() {
	*x = CommentsInfo{}
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsInfo) ProtoMessage() {}

func (x *CommentsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsInfo.ProtoReflect.Descriptor instead.
func (*CommentsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{6}
}

func (x *CommentsInfo) GetResults() []*CommentInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CommentsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CommentStatQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *v2.StatisticsQuery    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentStatQuery) Reset() {
	*x = CommentStatQuery{}
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentStatQuery) ProtoMessage() {}

func (x *CommentStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_opsflow_v1_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentStatQuery.ProtoReflect.Descriptor instead.
func (*CommentStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP(), []int{7}
}

func (x *CommentStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

var File_spaceone_api_opsflow_v1_comment_proto protoreflect.FileDescriptor

const file_spaceone_api_opsflow_v1_comment_proto_rawDesc = "" +
	"\n" +
	"%spaceone/api/opsflow/v1/comment.proto\x12\x17spaceone.api.opsflow.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1cgoogle/api/annotations.proto\x1a spaceone/api/core/v2/query.proto\"=\n" +
	"\bMentions\x12\x12\n" +
	"\x04USER\x18\x01 \x03(\tR\x04USER\x12\x1d\n" +
	"\n" +
	"USER_GROUP\x18\x02 \x03(\tR\tUSERGROUP\"\xdc\x01\n" +
	"\x14CommentCreateRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12=\n" +
	"\bmentions\x18\x03 \x01(\v2!.spaceone.api.opsflow.v1.MentionsR\bmentions\x12/\n" +
	"\x06source\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x06source\x12!\n" +
	"\freference_id\x18\x05 \x01(\tR\vreferenceId\"\x8e\x01\n" +
	"\x14CommentUpdateRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12=\n" +
	"\bmentions\x18\x03 \x01(\v2!.spaceone.api.opsflow.v1.MentionsR\bmentions\"/\n" +
	"\x0eCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"\xd3\x02\n" +
	"\x12CommentSearchQuery\x121\n" +
	"\x05query\x18\x01 \x01(\v2\x1b.spaceone.api.core.v2.QueryR\x05query\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x03 \x01(\tR\tcommentId\x12S\n" +
	"\fcomment_type\x18\x04 \x01(\x0e20.spaceone.api.opsflow.v1.CommentInfo.CommentTypeR\vcommentType\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\"\n" +
	"\ruser_group_id\x18\x06 \x01(\tR\vuserGroupId\x12!\n" +
	"\fworkspace_id\x18\v \x01(\tR\vworkspaceId\x12\x1d\n" +
	"\n" +
	"project_id\x18\f \x01(\tR\tprojectId\"\xd4\x05\n" +
	"\vCommentInfo\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12S\n" +
	"\fcomment_type\x18\x03 \x01(\x0e20.spaceone.api.opsflow.v1.CommentInfo.CommentTypeR\vcommentType\x12\x1b\n" +
	"\tis_edited\x18\x04 \x01(\bR\bisEdited\x12=\n" +
	"\bmentions\x18\x05 \x01(\v2!.spaceone.api.opsflow.v1.MentionsR\bmentions\x12/\n" +
	"\x06source\x18\a \x01(\v2\x17.google.protobuf.StructR\x06source\x12!\n" +
	"\freference_id\x18\b \x01(\tR\vreferenceId\x12#\n" +
	"\rcontents_type\x18\t \x01(\tR\fcontentsType\x12\x1b\n" +
	"\tdomain_id\x18\x15 \x01(\tR\bdomainId\x12!\n" +
	"\fworkspace_id\x18\x16 \x01(\tR\vworkspaceId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x17 \x01(\tR\tprojectId\x12\x17\n" +
	"\atask_id\x18\x18 \x01(\tR\x06taskId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x1f \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18  \x01(\tR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18! \x01(\tR\tcreatedBy\"G\n" +
	"\vCommentType\x12\x15\n" +
	"\x11COMMENT_TYPE_NONE\x10\x00\x12\x14\n" +
	"\x10TASK_DESCRIPTION\x10\x01\x12\v\n" +
	"\aCOMMENT\x10\x02\"D\n" +
	"\rResourceGroup\x12\x17\n" +
	"\x13RESOURCE_GROUP_NONE\x10\x00\x12\r\n" +
	"\tWORKSPACE\x10\x01\x12\v\n" +
	"\aPROJECT\x10\x02\"o\n" +
	"\fCommentsInfo\x12>\n" +
	"\aresults\x18\x01 \x03(\v2$.spaceone.api.opsflow.v1.CommentInfoR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"O\n" +
	"\x10CommentStatQuery\x12;\n" +
	"\x05query\x18\x01 \x01(\v2%.spaceone.api.core.v2.StatisticsQueryR\x05query2\xf5\x05\n" +
	"\aComment\x12\x84\x01\n" +
	"\x06create\x12-.spaceone.api.opsflow.v1.CommentCreateRequest\x1a$.spaceone.api.opsflow.v1.CommentInfo\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/opsflow/v1/comment/create\x12\x84\x01\n" +
	"\x06update\x12-.spaceone.api.opsflow.v1.CommentUpdateRequest\x1a$.spaceone.api.opsflow.v1.CommentInfo\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/opsflow/v1/comment/update\x12p\n" +
	"\x06delete\x12'.spaceone.api.opsflow.v1.CommentRequest\x1a\x16.google.protobuf.Empty\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/opsflow/v1/comment/delete\x12x\n" +
	"\x03get\x12'.spaceone.api.opsflow.v1.CommentRequest\x1a$.spaceone.api.opsflow.v1.CommentInfo\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/opsflow/v1/comment/get\x12\x7f\n" +
	"\x04list\x12+.spaceone.api.opsflow.v1.CommentSearchQuery\x1a%.spaceone.api.opsflow.v1.CommentsInfo\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/opsflow/v1/comment/list\x12o\n" +
	"\x04stat\x12).spaceone.api.opsflow.v1.CommentStatQuery\x1a\x17.google.protobuf.Struct\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/opsflow/v1/comment/statB>Z<github.com/cloudforet-io/api/dist/go/spaceone/api/opsflow/v1b\x06proto3"

var (
	file_spaceone_api_opsflow_v1_comment_proto_rawDescOnce sync.Once
	file_spaceone_api_opsflow_v1_comment_proto_rawDescData []byte
)

func file_spaceone_api_opsflow_v1_comment_proto_rawDescGZIP() []byte {
	file_spaceone_api_opsflow_v1_comment_proto_rawDescOnce.Do(func() {
		file_spaceone_api_opsflow_v1_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spaceone_api_opsflow_v1_comment_proto_rawDesc), len(file_spaceone_api_opsflow_v1_comment_proto_rawDesc)))
	})
	return file_spaceone_api_opsflow_v1_comment_proto_rawDescData
}

var file_spaceone_api_opsflow_v1_comment_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spaceone_api_opsflow_v1_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_spaceone_api_opsflow_v1_comment_proto_goTypes = []any{
	(CommentInfo_CommentType)(0),   // 0: spaceone.api.opsflow.v1.CommentInfo.CommentType
	(CommentInfo_ResourceGroup)(0), // 1: spaceone.api.opsflow.v1.CommentInfo.ResourceGroup
	(*Mentions)(nil),               // 2: spaceone.api.opsflow.v1.Mentions
	(*CommentCreateRequest)(nil),   // 3: spaceone.api.opsflow.v1.CommentCreateRequest
	(*CommentUpdateRequest)(nil),   // 4: spaceone.api.opsflow.v1.CommentUpdateRequest
	(*CommentRequest)(nil),         // 5: spaceone.api.opsflow.v1.CommentRequest
	(*CommentSearchQuery)(nil),     // 6: spaceone.api.opsflow.v1.CommentSearchQuery
	(*CommentInfo)(nil),            // 7: spaceone.api.opsflow.v1.CommentInfo
	(*CommentsInfo)(nil),           // 8: spaceone.api.opsflow.v1.CommentsInfo
	(*CommentStatQuery)(nil),       // 9: spaceone.api.opsflow.v1.CommentStatQuery
	(*_struct.Struct)(nil),         // 10: google.protobuf.Struct
	(*v2.Query)(nil),               // 11: spaceone.api.core.v2.Query
	(*v2.StatisticsQuery)(nil),     // 12: spaceone.api.core.v2.StatisticsQuery
	(*empty.Empty)(nil),            // 13: google.protobuf.Empty
}
var file_spaceone_api_opsflow_v1_comment_proto_depIdxs = []int32{
	2,  // 0: spaceone.api.opsflow.v1.CommentCreateRequest.mentions:type_name -> spaceone.api.opsflow.v1.Mentions
	10, // 1: spaceone.api.opsflow.v1.CommentCreateRequest.source:type_name -> google.protobuf.Struct
	2,  // 2: spaceone.api.opsflow.v1.CommentUpdateRequest.mentions:type_name -> spaceone.api.opsflow.v1.Mentions
	11, // 3: spaceone.api.opsflow.v1.CommentSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	0,  // 4: spaceone.api.opsflow.v1.CommentSearchQuery.comment_type:type_name -> spaceone.api.opsflow.v1.CommentInfo.CommentType
	0,  // 5: spaceone.api.opsflow.v1.CommentInfo.comment_type:type_name -> spaceone.api.opsflow.v1.CommentInfo.CommentType
	2,  // 6: spaceone.api.opsflow.v1.CommentInfo.mentions:type_name -> spaceone.api.opsflow.v1.Mentions
	10, // 7: spaceone.api.opsflow.v1.CommentInfo.source:type_name -> google.protobuf.Struct
	7,  // 8: spaceone.api.opsflow.v1.CommentsInfo.results:type_name -> spaceone.api.opsflow.v1.CommentInfo
	12, // 9: spaceone.api.opsflow.v1.CommentStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	3,  // 10: spaceone.api.opsflow.v1.Comment.create:input_type -> spaceone.api.opsflow.v1.CommentCreateRequest
	4,  // 11: spaceone.api.opsflow.v1.Comment.update:input_type -> spaceone.api.opsflow.v1.CommentUpdateRequest
	5,  // 12: spaceone.api.opsflow.v1.Comment.delete:input_type -> spaceone.api.opsflow.v1.CommentRequest
	5,  // 13: spaceone.api.opsflow.v1.Comment.get:input_type -> spaceone.api.opsflow.v1.CommentRequest
	6,  // 14: spaceone.api.opsflow.v1.Comment.list:input_type -> spaceone.api.opsflow.v1.CommentSearchQuery
	9,  // 15: spaceone.api.opsflow.v1.Comment.stat:input_type -> spaceone.api.opsflow.v1.CommentStatQuery
	7,  // 16: spaceone.api.opsflow.v1.Comment.create:output_type -> spaceone.api.opsflow.v1.CommentInfo
	7,  // 17: spaceone.api.opsflow.v1.Comment.update:output_type -> spaceone.api.opsflow.v1.CommentInfo
	13, // 18: spaceone.api.opsflow.v1.Comment.delete:output_type -> google.protobuf.Empty
	7,  // 19: spaceone.api.opsflow.v1.Comment.get:output_type -> spaceone.api.opsflow.v1.CommentInfo
	8,  // 20: spaceone.api.opsflow.v1.Comment.list:output_type -> spaceone.api.opsflow.v1.CommentsInfo
	10, // 21: spaceone.api.opsflow.v1.Comment.stat:output_type -> google.protobuf.Struct
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_spaceone_api_opsflow_v1_comment_proto_init() }
func file_spaceone_api_opsflow_v1_comment_proto_init() {
	if File_spaceone_api_opsflow_v1_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spaceone_api_opsflow_v1_comment_proto_rawDesc), len(file_spaceone_api_opsflow_v1_comment_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_opsflow_v1_comment_proto_goTypes,
		DependencyIndexes: file_spaceone_api_opsflow_v1_comment_proto_depIdxs,
		EnumInfos:         file_spaceone_api_opsflow_v1_comment_proto_enumTypes,
		MessageInfos:      file_spaceone_api_opsflow_v1_comment_proto_msgTypes,
	}.Build()
	File_spaceone_api_opsflow_v1_comment_proto = out.File
	file_spaceone_api_opsflow_v1_comment_proto_goTypes = nil
	file_spaceone_api_opsflow_v1_comment_proto_depIdxs = nil
}
