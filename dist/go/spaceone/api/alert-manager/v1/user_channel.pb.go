// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.6.1
// source: spaceone/api/alert_manager/v1/user_channel.proto

package v1

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserChannelSearchQuery_UserChannelState int32

const (
	UserChannelSearchQuery_CHANNEL_STATE_NONE UserChannelSearchQuery_UserChannelState = 0
	UserChannelSearchQuery_ENABLED            UserChannelSearchQuery_UserChannelState = 1
	UserChannelSearchQuery_DISABLED           UserChannelSearchQuery_UserChannelState = 2
)

// Enum value maps for UserChannelSearchQuery_UserChannelState.
var (
	UserChannelSearchQuery_UserChannelState_name = map[int32]string{
		0: "CHANNEL_STATE_NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	UserChannelSearchQuery_UserChannelState_value = map[string]int32{
		"CHANNEL_STATE_NONE": 0,
		"ENABLED":            1,
		"DISABLED":           2,
	}
)

func (x UserChannelSearchQuery_UserChannelState) Enum() *UserChannelSearchQuery_UserChannelState {
	p := new(UserChannelSearchQuery_UserChannelState)
	*p = x
	return p
}

func (x UserChannelSearchQuery_UserChannelState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserChannelSearchQuery_UserChannelState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_enumTypes[0].Descriptor()
}

func (UserChannelSearchQuery_UserChannelState) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_user_channel_proto_enumTypes[0]
}

func (x UserChannelSearchQuery_UserChannelState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserChannelSearchQuery_UserChannelState.Descriptor instead.
func (UserChannelSearchQuery_UserChannelState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{3, 0}
}

type UserChannelInfo_UserChannelState int32

const (
	UserChannelInfo_CHANNEL_STATE_NONE UserChannelInfo_UserChannelState = 0
	UserChannelInfo_ENABLED            UserChannelInfo_UserChannelState = 1
	UserChannelInfo_DISABLED           UserChannelInfo_UserChannelState = 2
)

// Enum value maps for UserChannelInfo_UserChannelState.
var (
	UserChannelInfo_UserChannelState_name = map[int32]string{
		0: "CHANNEL_STATE_NONE",
		1: "ENABLED",
		2: "DISABLED",
	}
	UserChannelInfo_UserChannelState_value = map[string]int32{
		"CHANNEL_STATE_NONE": 0,
		"ENABLED":            1,
		"DISABLED":           2,
	}
)

func (x UserChannelInfo_UserChannelState) Enum() *UserChannelInfo_UserChannelState {
	p := new(UserChannelInfo_UserChannelState)
	*p = x
	return p
}

func (x UserChannelInfo_UserChannelState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserChannelInfo_UserChannelState) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_enumTypes[1].Descriptor()
}

func (UserChannelInfo_UserChannelState) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_user_channel_proto_enumTypes[1]
}

func (x UserChannelInfo_UserChannelState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserChannelInfo_UserChannelState.Descriptor instead.
func (UserChannelInfo_UserChannelState) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{5, 0}
}

type UserChannelCreateRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ProtocolId string                 `protobuf:"bytes,1,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id,omitempty"`
	Name       string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Schedule *ChannelSchedule `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Data     *_struct.Struct  `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	// +optional
	Tags          *_struct.Struct `protobuf:"bytes,12,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelCreateRequest) Reset() {
	*x = UserChannelCreateRequest{}
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelCreateRequest) ProtoMessage() {}

func (x *UserChannelCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelCreateRequest.ProtoReflect.Descriptor instead.
func (*UserChannelCreateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{0}
}

func (x *UserChannelCreateRequest) GetProtocolId() string {
	if x != nil {
		return x.ProtocolId
	}
	return ""
}

func (x *UserChannelCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserChannelCreateRequest) GetSchedule() *ChannelSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *UserChannelCreateRequest) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UserChannelCreateRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UserChannelUpdateRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ChannelId string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Schedule *ChannelSchedule `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// +optional
	Data *_struct.Struct `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	// +optional
	Tags          *_struct.Struct `protobuf:"bytes,12,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelUpdateRequest) Reset() {
	*x = UserChannelUpdateRequest{}
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelUpdateRequest) ProtoMessage() {}

func (x *UserChannelUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelUpdateRequest.ProtoReflect.Descriptor instead.
func (*UserChannelUpdateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{1}
}

func (x *UserChannelUpdateRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UserChannelUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserChannelUpdateRequest) GetSchedule() *ChannelSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *UserChannelUpdateRequest) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UserChannelUpdateRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UserChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelRequest) Reset() {
	*x = UserChannelRequest{}
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelRequest) ProtoMessage() {}

func (x *UserChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelRequest.ProtoReflect.Descriptor instead.
func (*UserChannelRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{2}
}

func (x *UserChannelRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type UserChannelSearchQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	State UserChannelSearchQuery_UserChannelState `protobuf:"varint,4,opt,name=state,proto3,enum=spaceone.api.alert_manager.v1.UserChannelSearchQuery_UserChannelState" json:"state,omitempty"`
	// +optional
	ProtocolId string `protobuf:"bytes,21,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id,omitempty"`
	// +optional
	PluginId      string `protobuf:"bytes,22,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelSearchQuery) Reset() {
	*x = UserChannelSearchQuery{}
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelSearchQuery) ProtoMessage() {}

func (x *UserChannelSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelSearchQuery.ProtoReflect.Descriptor instead.
func (*UserChannelSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{3}
}

func (x *UserChannelSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *UserChannelSearchQuery) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UserChannelSearchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserChannelSearchQuery) GetState() UserChannelSearchQuery_UserChannelState {
	if x != nil {
		return x.State
	}
	return UserChannelSearchQuery_CHANNEL_STATE_NONE
}

func (x *UserChannelSearchQuery) GetProtocolId() string {
	if x != nil {
		return x.ProtocolId
	}
	return ""
}

func (x *UserChannelSearchQuery) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

type UserChannelStatQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *v2.StatisticsQuery    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelStatQuery) Reset() {
	*x = UserChannelStatQuery{}
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelStatQuery) ProtoMessage() {}

func (x *UserChannelStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelStatQuery.ProtoReflect.Descriptor instead.
func (*UserChannelStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{4}
}

func (x *UserChannelStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type UserChannelInfo struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	ChannelId     string                           `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Name          string                           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State         UserChannelInfo_UserChannelState `protobuf:"varint,3,opt,name=state,proto3,enum=spaceone.api.alert_manager.v1.UserChannelInfo_UserChannelState" json:"state,omitempty"`
	Schedule      *ChannelSchedule                 `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Data          *_struct.Struct                  `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	Tags          *_struct.Struct                  `protobuf:"bytes,12,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId      string                           `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ProtocolId    string                           `protobuf:"bytes,22,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id,omitempty"`
	UserId        string                           `protobuf:"bytes,23,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserSecretId  string                           `protobuf:"bytes,24,opt,name=user_secret_id,json=userSecretId,proto3" json:"user_secret_id,omitempty"`
	PluginId      string                           `protobuf:"bytes,25,opt,name=plugin_id,json=pluginId,proto3" json:"plugin_id,omitempty"`
	CreatedAt     string                           `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelInfo) Reset() {
	*x = UserChannelInfo{}
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelInfo) ProtoMessage() {}

func (x *UserChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelInfo.ProtoReflect.Descriptor instead.
func (*UserChannelInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{5}
}

func (x *UserChannelInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *UserChannelInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserChannelInfo) GetState() UserChannelInfo_UserChannelState {
	if x != nil {
		return x.State
	}
	return UserChannelInfo_CHANNEL_STATE_NONE
}

func (x *UserChannelInfo) GetSchedule() *ChannelSchedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *UserChannelInfo) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UserChannelInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UserChannelInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *UserChannelInfo) GetProtocolId() string {
	if x != nil {
		return x.ProtocolId
	}
	return ""
}

func (x *UserChannelInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserChannelInfo) GetUserSecretId() string {
	if x != nil {
		return x.UserSecretId
	}
	return ""
}

func (x *UserChannelInfo) GetPluginId() string {
	if x != nil {
		return x.PluginId
	}
	return ""
}

func (x *UserChannelInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserChannelsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*UserChannelInfo     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserChannelsInfo) Reset() {
	*x = UserChannelsInfo{}
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserChannelsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChannelsInfo) ProtoMessage() {}

func (x *UserChannelsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChannelsInfo.ProtoReflect.Descriptor instead.
func (*UserChannelsInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP(), []int{6}
}

func (x *UserChannelsInfo) GetResults() []*UserChannelInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *UserChannelsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_alert_manager_v1_user_channel_proto protoreflect.FileDescriptor

const file_spaceone_api_alert_manager_v1_user_channel_proto_rawDesc = "" +
	"\n" +
	"0spaceone/api/alert_manager/v1/user_channel.proto\x12\x1dspaceone.api.alert_manager.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1cgoogle/api/annotations.proto\x1a spaceone/api/core/v2/query.proto\x1a3spaceone/api/alert_manager/v1/service_channel.proto\"\xf5\x01\n" +
	"\x18UserChannelCreateRequest\x12\x1f\n" +
	"\vprotocol_id\x18\x01 \x01(\tR\n" +
	"protocolId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12J\n" +
	"\bschedule\x18\x03 \x01(\v2..spaceone.api.alert_manager.v1.ChannelScheduleR\bschedule\x12+\n" +
	"\x04data\x18\v \x01(\v2\x17.google.protobuf.StructR\x04data\x12+\n" +
	"\x04tags\x18\f \x01(\v2\x17.google.protobuf.StructR\x04tags\"\xf3\x01\n" +
	"\x18UserChannelUpdateRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12J\n" +
	"\bschedule\x18\x03 \x01(\v2..spaceone.api.alert_manager.v1.ChannelScheduleR\bschedule\x12+\n" +
	"\x04data\x18\v \x01(\v2\x17.google.protobuf.StructR\x04data\x12+\n" +
	"\x04tags\x18\f \x01(\v2\x17.google.protobuf.StructR\x04tags\"3\n" +
	"\x12UserChannelRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\"\xe1\x02\n" +
	"\x16UserChannelSearchQuery\x121\n" +
	"\x05query\x18\x01 \x01(\v2\x1b.spaceone.api.core.v2.QueryR\x05query\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\\\n" +
	"\x05state\x18\x04 \x01(\x0e2F.spaceone.api.alert_manager.v1.UserChannelSearchQuery.UserChannelStateR\x05state\x12\x1f\n" +
	"\vprotocol_id\x18\x15 \x01(\tR\n" +
	"protocolId\x12\x1b\n" +
	"\tplugin_id\x18\x16 \x01(\tR\bpluginId\"E\n" +
	"\x10UserChannelState\x12\x16\n" +
	"\x12CHANNEL_STATE_NONE\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x02\"S\n" +
	"\x14UserChannelStatQuery\x12;\n" +
	"\x05query\x18\x01 \x01(\v2%.spaceone.api.core.v2.StatisticsQueryR\x05query\"\xc1\x04\n" +
	"\x0fUserChannelInfo\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12U\n" +
	"\x05state\x18\x03 \x01(\x0e2?.spaceone.api.alert_manager.v1.UserChannelInfo.UserChannelStateR\x05state\x12J\n" +
	"\bschedule\x18\x04 \x01(\v2..spaceone.api.alert_manager.v1.ChannelScheduleR\bschedule\x12+\n" +
	"\x04data\x18\v \x01(\v2\x17.google.protobuf.StructR\x04data\x12+\n" +
	"\x04tags\x18\f \x01(\v2\x17.google.protobuf.StructR\x04tags\x12\x1b\n" +
	"\tdomain_id\x18\x15 \x01(\tR\bdomainId\x12\x1f\n" +
	"\vprotocol_id\x18\x16 \x01(\tR\n" +
	"protocolId\x12\x17\n" +
	"\auser_id\x18\x17 \x01(\tR\x06userId\x12$\n" +
	"\x0euser_secret_id\x18\x18 \x01(\tR\fuserSecretId\x12\x1b\n" +
	"\tplugin_id\x18\x19 \x01(\tR\bpluginId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x1f \x01(\tR\tcreatedAt\"E\n" +
	"\x10UserChannelState\x12\x16\n" +
	"\x12CHANNEL_STATE_NONE\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x02\"}\n" +
	"\x10UserChannelsInfo\x12H\n" +
	"\aresults\x18\x01 \x03(\v2..spaceone.api.alert_manager.v1.UserChannelInfoR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount2\xe5\t\n" +
	"\vUserChannel\x12\xa3\x01\n" +
	"\x06create\x127.spaceone.api.alert_manager.v1.UserChannelCreateRequest\x1a..spaceone.api.alert_manager.v1.UserChannelInfo\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/alert-manager/v1/user-channel/create\x12\xa3\x01\n" +
	"\x06update\x127.spaceone.api.alert_manager.v1.UserChannelUpdateRequest\x1a..spaceone.api.alert_manager.v1.UserChannelInfo\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/alert-manager/v1/user-channel/update\x12\x9d\x01\n" +
	"\x06enable\x121.spaceone.api.alert_manager.v1.UserChannelRequest\x1a..spaceone.api.alert_manager.v1.UserChannelInfo\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/alert-manager/v1/user-channel/enable\x12\x9f\x01\n" +
	"\adisable\x121.spaceone.api.alert_manager.v1.UserChannelRequest\x1a..spaceone.api.alert_manager.v1.UserChannelInfo\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/alert-manager/v1/user-channel/disable\x12\x85\x01\n" +
	"\x06delete\x121.spaceone.api.alert_manager.v1.UserChannelRequest\x1a\x16.google.protobuf.Empty\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/alert-manager/v1/user-channel/delete\x12\x97\x01\n" +
	"\x03get\x121.spaceone.api.alert_manager.v1.UserChannelRequest\x1a..spaceone.api.alert_manager.v1.UserChannelInfo\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/alert-manager/v1/user-channel/get\x12\x9e\x01\n" +
	"\x04list\x125.spaceone.api.alert_manager.v1.UserChannelSearchQuery\x1a/.spaceone.api.alert_manager.v1.UserChannelsInfo\".\x82\xd3\xe4\x93\x02(:\x01*\"#/alert-manager/v1/user-channel/list\x12\x84\x01\n" +
	"\x04stat\x123.spaceone.api.alert_manager.v1.UserChannelStatQuery\x1a\x17.google.protobuf.Struct\".\x82\xd3\xe4\x93\x02(:\x01*\"#/alert-manager/v1/user-channel/statBDZBgithub.com/cloudforet-io/api/dist/go/spaceone/api/alert-manager/v1b\x06proto3"

var (
	file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescOnce sync.Once
	file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescData []byte
)

func file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescGZIP() []byte {
	file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescOnce.Do(func() {
		file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spaceone_api_alert_manager_v1_user_channel_proto_rawDesc), len(file_spaceone_api_alert_manager_v1_user_channel_proto_rawDesc)))
	})
	return file_spaceone_api_alert_manager_v1_user_channel_proto_rawDescData
}

var file_spaceone_api_alert_manager_v1_user_channel_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_spaceone_api_alert_manager_v1_user_channel_proto_goTypes = []any{
	(UserChannelSearchQuery_UserChannelState)(0), // 0: spaceone.api.alert_manager.v1.UserChannelSearchQuery.UserChannelState
	(UserChannelInfo_UserChannelState)(0),        // 1: spaceone.api.alert_manager.v1.UserChannelInfo.UserChannelState
	(*UserChannelCreateRequest)(nil),             // 2: spaceone.api.alert_manager.v1.UserChannelCreateRequest
	(*UserChannelUpdateRequest)(nil),             // 3: spaceone.api.alert_manager.v1.UserChannelUpdateRequest
	(*UserChannelRequest)(nil),                   // 4: spaceone.api.alert_manager.v1.UserChannelRequest
	(*UserChannelSearchQuery)(nil),               // 5: spaceone.api.alert_manager.v1.UserChannelSearchQuery
	(*UserChannelStatQuery)(nil),                 // 6: spaceone.api.alert_manager.v1.UserChannelStatQuery
	(*UserChannelInfo)(nil),                      // 7: spaceone.api.alert_manager.v1.UserChannelInfo
	(*UserChannelsInfo)(nil),                     // 8: spaceone.api.alert_manager.v1.UserChannelsInfo
	(*ChannelSchedule)(nil),                      // 9: spaceone.api.alert_manager.v1.ChannelSchedule
	(*_struct.Struct)(nil),                       // 10: google.protobuf.Struct
	(*v2.Query)(nil),                             // 11: spaceone.api.core.v2.Query
	(*v2.StatisticsQuery)(nil),                   // 12: spaceone.api.core.v2.StatisticsQuery
	(*empty.Empty)(nil),                          // 13: google.protobuf.Empty
}
var file_spaceone_api_alert_manager_v1_user_channel_proto_depIdxs = []int32{
	9,  // 0: spaceone.api.alert_manager.v1.UserChannelCreateRequest.schedule:type_name -> spaceone.api.alert_manager.v1.ChannelSchedule
	10, // 1: spaceone.api.alert_manager.v1.UserChannelCreateRequest.data:type_name -> google.protobuf.Struct
	10, // 2: spaceone.api.alert_manager.v1.UserChannelCreateRequest.tags:type_name -> google.protobuf.Struct
	9,  // 3: spaceone.api.alert_manager.v1.UserChannelUpdateRequest.schedule:type_name -> spaceone.api.alert_manager.v1.ChannelSchedule
	10, // 4: spaceone.api.alert_manager.v1.UserChannelUpdateRequest.data:type_name -> google.protobuf.Struct
	10, // 5: spaceone.api.alert_manager.v1.UserChannelUpdateRequest.tags:type_name -> google.protobuf.Struct
	11, // 6: spaceone.api.alert_manager.v1.UserChannelSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	0,  // 7: spaceone.api.alert_manager.v1.UserChannelSearchQuery.state:type_name -> spaceone.api.alert_manager.v1.UserChannelSearchQuery.UserChannelState
	12, // 8: spaceone.api.alert_manager.v1.UserChannelStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	1,  // 9: spaceone.api.alert_manager.v1.UserChannelInfo.state:type_name -> spaceone.api.alert_manager.v1.UserChannelInfo.UserChannelState
	9,  // 10: spaceone.api.alert_manager.v1.UserChannelInfo.schedule:type_name -> spaceone.api.alert_manager.v1.ChannelSchedule
	10, // 11: spaceone.api.alert_manager.v1.UserChannelInfo.data:type_name -> google.protobuf.Struct
	10, // 12: spaceone.api.alert_manager.v1.UserChannelInfo.tags:type_name -> google.protobuf.Struct
	7,  // 13: spaceone.api.alert_manager.v1.UserChannelsInfo.results:type_name -> spaceone.api.alert_manager.v1.UserChannelInfo
	2,  // 14: spaceone.api.alert_manager.v1.UserChannel.create:input_type -> spaceone.api.alert_manager.v1.UserChannelCreateRequest
	3,  // 15: spaceone.api.alert_manager.v1.UserChannel.update:input_type -> spaceone.api.alert_manager.v1.UserChannelUpdateRequest
	4,  // 16: spaceone.api.alert_manager.v1.UserChannel.enable:input_type -> spaceone.api.alert_manager.v1.UserChannelRequest
	4,  // 17: spaceone.api.alert_manager.v1.UserChannel.disable:input_type -> spaceone.api.alert_manager.v1.UserChannelRequest
	4,  // 18: spaceone.api.alert_manager.v1.UserChannel.delete:input_type -> spaceone.api.alert_manager.v1.UserChannelRequest
	4,  // 19: spaceone.api.alert_manager.v1.UserChannel.get:input_type -> spaceone.api.alert_manager.v1.UserChannelRequest
	5,  // 20: spaceone.api.alert_manager.v1.UserChannel.list:input_type -> spaceone.api.alert_manager.v1.UserChannelSearchQuery
	6,  // 21: spaceone.api.alert_manager.v1.UserChannel.stat:input_type -> spaceone.api.alert_manager.v1.UserChannelStatQuery
	7,  // 22: spaceone.api.alert_manager.v1.UserChannel.create:output_type -> spaceone.api.alert_manager.v1.UserChannelInfo
	7,  // 23: spaceone.api.alert_manager.v1.UserChannel.update:output_type -> spaceone.api.alert_manager.v1.UserChannelInfo
	7,  // 24: spaceone.api.alert_manager.v1.UserChannel.enable:output_type -> spaceone.api.alert_manager.v1.UserChannelInfo
	7,  // 25: spaceone.api.alert_manager.v1.UserChannel.disable:output_type -> spaceone.api.alert_manager.v1.UserChannelInfo
	13, // 26: spaceone.api.alert_manager.v1.UserChannel.delete:output_type -> google.protobuf.Empty
	7,  // 27: spaceone.api.alert_manager.v1.UserChannel.get:output_type -> spaceone.api.alert_manager.v1.UserChannelInfo
	8,  // 28: spaceone.api.alert_manager.v1.UserChannel.list:output_type -> spaceone.api.alert_manager.v1.UserChannelsInfo
	10, // 29: spaceone.api.alert_manager.v1.UserChannel.stat:output_type -> google.protobuf.Struct
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_spaceone_api_alert_manager_v1_user_channel_proto_init() }
func file_spaceone_api_alert_manager_v1_user_channel_proto_init() {
	if File_spaceone_api_alert_manager_v1_user_channel_proto != nil {
		return
	}
	file_spaceone_api_alert_manager_v1_service_channel_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spaceone_api_alert_manager_v1_user_channel_proto_rawDesc), len(file_spaceone_api_alert_manager_v1_user_channel_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_alert_manager_v1_user_channel_proto_goTypes,
		DependencyIndexes: file_spaceone_api_alert_manager_v1_user_channel_proto_depIdxs,
		EnumInfos:         file_spaceone_api_alert_manager_v1_user_channel_proto_enumTypes,
		MessageInfos:      file_spaceone_api_alert_manager_v1_user_channel_proto_msgTypes,
	}.Build()
	File_spaceone_api_alert_manager_v1_user_channel_proto = out.File
	file_spaceone_api_alert_manager_v1_user_channel_proto_goTypes = nil
	file_spaceone_api_alert_manager_v1_user_channel_proto_depIdxs = nil
}
