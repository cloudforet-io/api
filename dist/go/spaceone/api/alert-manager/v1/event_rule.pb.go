// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.6.1
// source: spaceone/api/alert_manager/v1/event_rule.proto

package v1

import (
	v2 "github.com/cloudforet-io/api/dist/go/spaceone/api/core/v2"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConditionsPolicy int32

const (
	ConditionsPolicy_CONDITIONS_POLICY_NONE ConditionsPolicy = 0
	ConditionsPolicy_ALL                    ConditionsPolicy = 1
	ConditionsPolicy_ANY                    ConditionsPolicy = 2
	ConditionsPolicy_ALWAYS                 ConditionsPolicy = 3
)

// Enum value maps for ConditionsPolicy.
var (
	ConditionsPolicy_name = map[int32]string{
		0: "CONDITIONS_POLICY_NONE",
		1: "ALL",
		2: "ANY",
		3: "ALWAYS",
	}
	ConditionsPolicy_value = map[string]int32{
		"CONDITIONS_POLICY_NONE": 0,
		"ALL":                    1,
		"ANY":                    2,
		"ALWAYS":                 3,
	}
)

func (x ConditionsPolicy) Enum() *ConditionsPolicy {
	p := new(ConditionsPolicy)
	*p = x
	return p
}

func (x ConditionsPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionsPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_enumTypes[0].Descriptor()
}

func (ConditionsPolicy) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_event_rule_proto_enumTypes[0]
}

func (x ConditionsPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionsPolicy.Descriptor instead.
func (ConditionsPolicy) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{0}
}

type EventRuleScope int32

const (
	EventRuleScope_EVENT_RULE_SCOPE_NONE EventRuleScope = 0
	EventRuleScope_GLOBAL                EventRuleScope = 1
	EventRuleScope_WEBHOOK               EventRuleScope = 2
)

// Enum value maps for EventRuleScope.
var (
	EventRuleScope_name = map[int32]string{
		0: "EVENT_RULE_SCOPE_NONE",
		1: "GLOBAL",
		2: "WEBHOOK",
	}
	EventRuleScope_value = map[string]int32{
		"EVENT_RULE_SCOPE_NONE": 0,
		"GLOBAL":                1,
		"WEBHOOK":               2,
	}
)

func (x EventRuleScope) Enum() *EventRuleScope {
	p := new(EventRuleScope)
	*p = x
	return p
}

func (x EventRuleScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventRuleScope) Descriptor() protoreflect.EnumDescriptor {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_enumTypes[1].Descriptor()
}

func (EventRuleScope) Type() protoreflect.EnumType {
	return &file_spaceone_api_alert_manager_v1_event_rule_proto_enumTypes[1]
}

func (x EventRuleScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventRuleScope.Descriptor instead.
func (EventRuleScope) EnumDescriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{1}
}

type EventRuleOptions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StopProcessing bool                   `protobuf:"varint,1,opt,name=stop_processing,json=stopProcessing,proto3" json:"stop_processing,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventRuleOptions) Reset() {
	*x = EventRuleOptions{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRuleOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRuleOptions) ProtoMessage() {}

func (x *EventRuleOptions) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRuleOptions.ProtoReflect.Descriptor instead.
func (*EventRuleOptions) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{0}
}

func (x *EventRuleOptions) GetStopProcessing() bool {
	if x != nil {
		return x.StopProcessing
	}
	return false
}

type Condition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         *_struct.Value         `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Operator      string                 `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{1}
}

func (x *Condition) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Condition) GetValue() *_struct.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Condition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type EventRuleCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Name  string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scope EventRuleScope `protobuf:"varint,2,opt,name=scope,proto3,enum=spaceone.api.alert_manager.v1.EventRuleScope" json:"scope,omitempty"`
	// +optional
	Conditions       []*Condition     `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	ConditionsPolicy ConditionsPolicy `protobuf:"varint,4,opt,name=conditions_policy,json=conditionsPolicy,proto3,enum=spaceone.api.alert_manager.v1.ConditionsPolicy" json:"conditions_policy,omitempty"`
	Actions          *_struct.Struct  `protobuf:"bytes,5,opt,name=actions,proto3" json:"actions,omitempty"`
	// +optional
	Options *EventRuleOptions `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
	// +optional
	Tags      *_struct.Struct `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	ServiceId string          `protobuf:"bytes,21,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// +optional
	WebhookId     string `protobuf:"bytes,22,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRuleCreateRequest) Reset() {
	*x = EventRuleCreateRequest{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRuleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRuleCreateRequest) ProtoMessage() {}

func (x *EventRuleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRuleCreateRequest.ProtoReflect.Descriptor instead.
func (*EventRuleCreateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{2}
}

func (x *EventRuleCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventRuleCreateRequest) GetScope() EventRuleScope {
	if x != nil {
		return x.Scope
	}
	return EventRuleScope_EVENT_RULE_SCOPE_NONE
}

func (x *EventRuleCreateRequest) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *EventRuleCreateRequest) GetConditionsPolicy() ConditionsPolicy {
	if x != nil {
		return x.ConditionsPolicy
	}
	return ConditionsPolicy_CONDITIONS_POLICY_NONE
}

func (x *EventRuleCreateRequest) GetActions() *_struct.Struct {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *EventRuleCreateRequest) GetOptions() *EventRuleOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *EventRuleCreateRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EventRuleCreateRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EventRuleCreateRequest) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

type EventRuleChangeOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventRuleId   string                 `protobuf:"bytes,1,opt,name=event_rule_id,json=eventRuleId,proto3" json:"event_rule_id,omitempty"`
	Order         int32                  `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRuleChangeOrderRequest) Reset() {
	*x = EventRuleChangeOrderRequest{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRuleChangeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRuleChangeOrderRequest) ProtoMessage() {}

func (x *EventRuleChangeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRuleChangeOrderRequest.ProtoReflect.Descriptor instead.
func (*EventRuleChangeOrderRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{3}
}

func (x *EventRuleChangeOrderRequest) GetEventRuleId() string {
	if x != nil {
		return x.EventRuleId
	}
	return ""
}

func (x *EventRuleChangeOrderRequest) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type EventRuleUpdateRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	EventRuleId string                 `protobuf:"bytes,1,opt,name=event_rule_id,json=eventRuleId,proto3" json:"event_rule_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Conditions []*Condition `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// +optional
	ConditionsPolicy ConditionsPolicy `protobuf:"varint,4,opt,name=conditions_policy,json=conditionsPolicy,proto3,enum=spaceone.api.alert_manager.v1.ConditionsPolicy" json:"conditions_policy,omitempty"`
	// +optional
	Actions *_struct.Struct `protobuf:"bytes,5,opt,name=actions,proto3" json:"actions,omitempty"`
	// +optional
	Options *EventRuleOptions `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
	// +optional
	Tags          *_struct.Struct `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRuleUpdateRequest) Reset() {
	*x = EventRuleUpdateRequest{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRuleUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRuleUpdateRequest) ProtoMessage() {}

func (x *EventRuleUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRuleUpdateRequest.ProtoReflect.Descriptor instead.
func (*EventRuleUpdateRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{4}
}

func (x *EventRuleUpdateRequest) GetEventRuleId() string {
	if x != nil {
		return x.EventRuleId
	}
	return ""
}

func (x *EventRuleUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventRuleUpdateRequest) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *EventRuleUpdateRequest) GetConditionsPolicy() ConditionsPolicy {
	if x != nil {
		return x.ConditionsPolicy
	}
	return ConditionsPolicy_CONDITIONS_POLICY_NONE
}

func (x *EventRuleUpdateRequest) GetActions() *_struct.Struct {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *EventRuleUpdateRequest) GetOptions() *EventRuleOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *EventRuleUpdateRequest) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type EventRuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventRuleId   string                 `protobuf:"bytes,1,opt,name=event_rule_id,json=eventRuleId,proto3" json:"event_rule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRuleRequest) Reset() {
	*x = EventRuleRequest{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRuleRequest) ProtoMessage() {}

func (x *EventRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRuleRequest.ProtoReflect.Descriptor instead.
func (*EventRuleRequest) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{5}
}

func (x *EventRuleRequest) GetEventRuleId() string {
	if x != nil {
		return x.EventRuleId
	}
	return ""
}

type EventRuleSearchQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// +optional
	Query *v2.Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	EventRuleId string `protobuf:"bytes,2,opt,name=event_rule_id,json=eventRuleId,proto3" json:"event_rule_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Scope EventRuleScope `protobuf:"varint,4,opt,name=scope,proto3,enum=spaceone.api.alert_manager.v1.EventRuleScope" json:"scope,omitempty"`
	// +optional
	WorkspaceId string `protobuf:"bytes,21,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// +optional
	ServiceId string `protobuf:"bytes,22,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// +optional
	WebhookId     string `protobuf:"bytes,23,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRuleSearchQuery) Reset() {
	*x = EventRuleSearchQuery{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRuleSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRuleSearchQuery) ProtoMessage() {}

func (x *EventRuleSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRuleSearchQuery.ProtoReflect.Descriptor instead.
func (*EventRuleSearchQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{6}
}

func (x *EventRuleSearchQuery) GetQuery() *v2.Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *EventRuleSearchQuery) GetEventRuleId() string {
	if x != nil {
		return x.EventRuleId
	}
	return ""
}

func (x *EventRuleSearchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventRuleSearchQuery) GetScope() EventRuleScope {
	if x != nil {
		return x.Scope
	}
	return EventRuleScope_EVENT_RULE_SCOPE_NONE
}

func (x *EventRuleSearchQuery) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *EventRuleSearchQuery) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EventRuleSearchQuery) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

type EventRuleStatQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *v2.StatisticsQuery    `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRuleStatQuery) Reset() {
	*x = EventRuleStatQuery{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRuleStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRuleStatQuery) ProtoMessage() {}

func (x *EventRuleStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRuleStatQuery.ProtoReflect.Descriptor instead.
func (*EventRuleStatQuery) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{7}
}

func (x *EventRuleStatQuery) GetQuery() *v2.StatisticsQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type EventRuleInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	EventRuleId      string                 `protobuf:"bytes,1,opt,name=event_rule_id,json=eventRuleId,proto3" json:"event_rule_id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Scope            EventRuleScope         `protobuf:"varint,3,opt,name=scope,proto3,enum=spaceone.api.alert_manager.v1.EventRuleScope" json:"scope,omitempty"`
	Order            int32                  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	Conditions       []*Condition           `protobuf:"bytes,5,rep,name=conditions,proto3" json:"conditions,omitempty"`
	ConditionsPolicy ConditionsPolicy       `protobuf:"varint,6,opt,name=conditions_policy,json=conditionsPolicy,proto3,enum=spaceone.api.alert_manager.v1.ConditionsPolicy" json:"conditions_policy,omitempty"`
	Actions          *_struct.Struct        `protobuf:"bytes,7,opt,name=actions,proto3" json:"actions,omitempty"`
	Options          *EventRuleOptions      `protobuf:"bytes,8,opt,name=options,proto3" json:"options,omitempty"`
	Tags             *_struct.Struct        `protobuf:"bytes,11,opt,name=tags,proto3" json:"tags,omitempty"`
	DomainId         string                 `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	WorkspaceId      string                 `protobuf:"bytes,22,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ServiceId        string                 `protobuf:"bytes,23,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	WebhookId        string                 `protobuf:"bytes,24,opt,name=webhook_id,json=webhookId,proto3" json:"webhook_id,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                 `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventRuleInfo) Reset() {
	*x = EventRuleInfo{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRuleInfo) ProtoMessage() {}

func (x *EventRuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRuleInfo.ProtoReflect.Descriptor instead.
func (*EventRuleInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{8}
}

func (x *EventRuleInfo) GetEventRuleId() string {
	if x != nil {
		return x.EventRuleId
	}
	return ""
}

func (x *EventRuleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventRuleInfo) GetScope() EventRuleScope {
	if x != nil {
		return x.Scope
	}
	return EventRuleScope_EVENT_RULE_SCOPE_NONE
}

func (x *EventRuleInfo) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *EventRuleInfo) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *EventRuleInfo) GetConditionsPolicy() ConditionsPolicy {
	if x != nil {
		return x.ConditionsPolicy
	}
	return ConditionsPolicy_CONDITIONS_POLICY_NONE
}

func (x *EventRuleInfo) GetActions() *_struct.Struct {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *EventRuleInfo) GetOptions() *EventRuleOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *EventRuleInfo) GetTags() *_struct.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *EventRuleInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *EventRuleInfo) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *EventRuleInfo) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *EventRuleInfo) GetWebhookId() string {
	if x != nil {
		return x.WebhookId
	}
	return ""
}

func (x *EventRuleInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EventRuleInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type EventRulesInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*EventRuleInfo       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRulesInfo) Reset() {
	*x = EventRulesInfo{}
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRulesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRulesInfo) ProtoMessage() {}

func (x *EventRulesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRulesInfo.ProtoReflect.Descriptor instead.
func (*EventRulesInfo) Descriptor() ([]byte, []int) {
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP(), []int{9}
}

func (x *EventRulesInfo) GetResults() []*EventRuleInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *EventRulesInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_spaceone_api_alert_manager_v1_event_rule_proto protoreflect.FileDescriptor

const file_spaceone_api_alert_manager_v1_event_rule_proto_rawDesc = "" +
	"\n" +
	".spaceone/api/alert_manager/v1/event_rule.proto\x12\x1dspaceone.api.alert_manager.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1cgoogle/api/annotations.proto\x1a spaceone/api/core/v2/query.proto\";\n" +
	"\x10EventRuleOptions\x12'\n" +
	"\x0fstop_processing\x18\x01 \x01(\bR\x0estopProcessing\"g\n" +
	"\tCondition\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value\x12\x1a\n" +
	"\boperator\x18\x03 \x01(\tR\boperator\"\x82\x04\n" +
	"\x16EventRuleCreateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12C\n" +
	"\x05scope\x18\x02 \x01(\x0e2-.spaceone.api.alert_manager.v1.EventRuleScopeR\x05scope\x12H\n" +
	"\n" +
	"conditions\x18\x03 \x03(\v2(.spaceone.api.alert_manager.v1.ConditionR\n" +
	"conditions\x12\\\n" +
	"\x11conditions_policy\x18\x04 \x01(\x0e2/.spaceone.api.alert_manager.v1.ConditionsPolicyR\x10conditionsPolicy\x121\n" +
	"\aactions\x18\x05 \x01(\v2\x17.google.protobuf.StructR\aactions\x12I\n" +
	"\aoptions\x18\x06 \x01(\v2/.spaceone.api.alert_manager.v1.EventRuleOptionsR\aoptions\x12+\n" +
	"\x04tags\x18\v \x01(\v2\x17.google.protobuf.StructR\x04tags\x12\x1d\n" +
	"\n" +
	"service_id\x18\x15 \x01(\tR\tserviceId\x12\x1d\n" +
	"\n" +
	"webhook_id\x18\x16 \x01(\tR\twebhookId\"W\n" +
	"\x1bEventRuleChangeOrderRequest\x12\"\n" +
	"\revent_rule_id\x18\x01 \x01(\tR\veventRuleId\x12\x14\n" +
	"\x05order\x18\x02 \x01(\x05R\x05order\"\xa3\x03\n" +
	"\x16EventRuleUpdateRequest\x12\"\n" +
	"\revent_rule_id\x18\x01 \x01(\tR\veventRuleId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12H\n" +
	"\n" +
	"conditions\x18\x03 \x03(\v2(.spaceone.api.alert_manager.v1.ConditionR\n" +
	"conditions\x12\\\n" +
	"\x11conditions_policy\x18\x04 \x01(\x0e2/.spaceone.api.alert_manager.v1.ConditionsPolicyR\x10conditionsPolicy\x121\n" +
	"\aactions\x18\x05 \x01(\v2\x17.google.protobuf.StructR\aactions\x12I\n" +
	"\aoptions\x18\x06 \x01(\v2/.spaceone.api.alert_manager.v1.EventRuleOptionsR\aoptions\x12+\n" +
	"\x04tags\x18\v \x01(\v2\x17.google.protobuf.StructR\x04tags\"6\n" +
	"\x10EventRuleRequest\x12\"\n" +
	"\revent_rule_id\x18\x01 \x01(\tR\veventRuleId\"\xa7\x02\n" +
	"\x14EventRuleSearchQuery\x121\n" +
	"\x05query\x18\x01 \x01(\v2\x1b.spaceone.api.core.v2.QueryR\x05query\x12\"\n" +
	"\revent_rule_id\x18\x02 \x01(\tR\veventRuleId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12C\n" +
	"\x05scope\x18\x04 \x01(\x0e2-.spaceone.api.alert_manager.v1.EventRuleScopeR\x05scope\x12!\n" +
	"\fworkspace_id\x18\x15 \x01(\tR\vworkspaceId\x12\x1d\n" +
	"\n" +
	"service_id\x18\x16 \x01(\tR\tserviceId\x12\x1d\n" +
	"\n" +
	"webhook_id\x18\x17 \x01(\tR\twebhookId\"Q\n" +
	"\x12EventRuleStatQuery\x12;\n" +
	"\x05query\x18\x01 \x01(\v2%.spaceone.api.core.v2.StatisticsQueryR\x05query\"\xb1\x05\n" +
	"\rEventRuleInfo\x12\"\n" +
	"\revent_rule_id\x18\x01 \x01(\tR\veventRuleId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12C\n" +
	"\x05scope\x18\x03 \x01(\x0e2-.spaceone.api.alert_manager.v1.EventRuleScopeR\x05scope\x12\x14\n" +
	"\x05order\x18\x04 \x01(\x05R\x05order\x12H\n" +
	"\n" +
	"conditions\x18\x05 \x03(\v2(.spaceone.api.alert_manager.v1.ConditionR\n" +
	"conditions\x12\\\n" +
	"\x11conditions_policy\x18\x06 \x01(\x0e2/.spaceone.api.alert_manager.v1.ConditionsPolicyR\x10conditionsPolicy\x121\n" +
	"\aactions\x18\a \x01(\v2\x17.google.protobuf.StructR\aactions\x12I\n" +
	"\aoptions\x18\b \x01(\v2/.spaceone.api.alert_manager.v1.EventRuleOptionsR\aoptions\x12+\n" +
	"\x04tags\x18\v \x01(\v2\x17.google.protobuf.StructR\x04tags\x12\x1b\n" +
	"\tdomain_id\x18\x15 \x01(\tR\bdomainId\x12!\n" +
	"\fworkspace_id\x18\x16 \x01(\tR\vworkspaceId\x12\x1d\n" +
	"\n" +
	"service_id\x18\x17 \x01(\tR\tserviceId\x12\x1d\n" +
	"\n" +
	"webhook_id\x18\x18 \x01(\tR\twebhookId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x1f \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18  \x01(\tR\tupdatedAt\"y\n" +
	"\x0eEventRulesInfo\x12F\n" +
	"\aresults\x18\x01 \x03(\v2,.spaceone.api.alert_manager.v1.EventRuleInfoR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount*L\n" +
	"\x10ConditionsPolicy\x12\x1a\n" +
	"\x16CONDITIONS_POLICY_NONE\x10\x00\x12\a\n" +
	"\x03ALL\x10\x01\x12\a\n" +
	"\x03ANY\x10\x02\x12\n" +
	"\n" +
	"\x06ALWAYS\x10\x03*D\n" +
	"\x0eEventRuleScope\x12\x19\n" +
	"\x15EVENT_RULE_SCOPE_NONE\x10\x00\x12\n" +
	"\n" +
	"\x06GLOBAL\x10\x01\x12\v\n" +
	"\aWEBHOOK\x10\x022\xb2\b\n" +
	"\tEventRule\x12\x9d\x01\n" +
	"\x06create\x125.spaceone.api.alert_manager.v1.EventRuleCreateRequest\x1a,.spaceone.api.alert_manager.v1.EventRuleInfo\".\x82\xd3\xe4\x93\x02(:\x01*\"#/alert-manager/v1/event-rule/create\x12\xae\x01\n" +
	"\fchange_order\x12:.spaceone.api.alert_manager.v1.EventRuleChangeOrderRequest\x1a,.spaceone.api.alert_manager.v1.EventRuleInfo\"4\x82\xd3\xe4\x93\x02.:\x01*\")/alert-manager/v1/event-rule/change-order\x12\x9d\x01\n" +
	"\x06update\x125.spaceone.api.alert_manager.v1.EventRuleUpdateRequest\x1a,.spaceone.api.alert_manager.v1.EventRuleInfo\".\x82\xd3\xe4\x93\x02(:\x01*\"#/alert-manager/v1/event-rule/update\x12\x81\x01\n" +
	"\x06delete\x12/.spaceone.api.alert_manager.v1.EventRuleRequest\x1a\x16.google.protobuf.Empty\".\x82\xd3\xe4\x93\x02(:\x01*\"#/alert-manager/v1/event-rule/delete\x12\x91\x01\n" +
	"\x03get\x12/.spaceone.api.alert_manager.v1.EventRuleRequest\x1a,.spaceone.api.alert_manager.v1.EventRuleInfo\"+\x82\xd3\xe4\x93\x02%:\x01*\" /alert-manager/v1/event-rule/get\x12\x98\x01\n" +
	"\x04list\x123.spaceone.api.alert_manager.v1.EventRuleSearchQuery\x1a-.spaceone.api.alert_manager.v1.EventRulesInfo\",\x82\xd3\xe4\x93\x02&:\x01*\"!/alert-manager/v1/event-rule/list\x12\x80\x01\n" +
	"\x04stat\x121.spaceone.api.alert_manager.v1.EventRuleStatQuery\x1a\x17.google.protobuf.Struct\",\x82\xd3\xe4\x93\x02&:\x01*\"!/alert-manager/v1/event-rule/statBDZBgithub.com/cloudforet-io/api/dist/go/spaceone/api/alert-manager/v1b\x06proto3"

var (
	file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescOnce sync.Once
	file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescData []byte
)

func file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescGZIP() []byte {
	file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescOnce.Do(func() {
		file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spaceone_api_alert_manager_v1_event_rule_proto_rawDesc), len(file_spaceone_api_alert_manager_v1_event_rule_proto_rawDesc)))
	})
	return file_spaceone_api_alert_manager_v1_event_rule_proto_rawDescData
}

var file_spaceone_api_alert_manager_v1_event_rule_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_spaceone_api_alert_manager_v1_event_rule_proto_goTypes = []any{
	(ConditionsPolicy)(0),               // 0: spaceone.api.alert_manager.v1.ConditionsPolicy
	(EventRuleScope)(0),                 // 1: spaceone.api.alert_manager.v1.EventRuleScope
	(*EventRuleOptions)(nil),            // 2: spaceone.api.alert_manager.v1.EventRuleOptions
	(*Condition)(nil),                   // 3: spaceone.api.alert_manager.v1.Condition
	(*EventRuleCreateRequest)(nil),      // 4: spaceone.api.alert_manager.v1.EventRuleCreateRequest
	(*EventRuleChangeOrderRequest)(nil), // 5: spaceone.api.alert_manager.v1.EventRuleChangeOrderRequest
	(*EventRuleUpdateRequest)(nil),      // 6: spaceone.api.alert_manager.v1.EventRuleUpdateRequest
	(*EventRuleRequest)(nil),            // 7: spaceone.api.alert_manager.v1.EventRuleRequest
	(*EventRuleSearchQuery)(nil),        // 8: spaceone.api.alert_manager.v1.EventRuleSearchQuery
	(*EventRuleStatQuery)(nil),          // 9: spaceone.api.alert_manager.v1.EventRuleStatQuery
	(*EventRuleInfo)(nil),               // 10: spaceone.api.alert_manager.v1.EventRuleInfo
	(*EventRulesInfo)(nil),              // 11: spaceone.api.alert_manager.v1.EventRulesInfo
	(*_struct.Value)(nil),               // 12: google.protobuf.Value
	(*_struct.Struct)(nil),              // 13: google.protobuf.Struct
	(*v2.Query)(nil),                    // 14: spaceone.api.core.v2.Query
	(*v2.StatisticsQuery)(nil),          // 15: spaceone.api.core.v2.StatisticsQuery
	(*empty.Empty)(nil),                 // 16: google.protobuf.Empty
}
var file_spaceone_api_alert_manager_v1_event_rule_proto_depIdxs = []int32{
	12, // 0: spaceone.api.alert_manager.v1.Condition.value:type_name -> google.protobuf.Value
	1,  // 1: spaceone.api.alert_manager.v1.EventRuleCreateRequest.scope:type_name -> spaceone.api.alert_manager.v1.EventRuleScope
	3,  // 2: spaceone.api.alert_manager.v1.EventRuleCreateRequest.conditions:type_name -> spaceone.api.alert_manager.v1.Condition
	0,  // 3: spaceone.api.alert_manager.v1.EventRuleCreateRequest.conditions_policy:type_name -> spaceone.api.alert_manager.v1.ConditionsPolicy
	13, // 4: spaceone.api.alert_manager.v1.EventRuleCreateRequest.actions:type_name -> google.protobuf.Struct
	2,  // 5: spaceone.api.alert_manager.v1.EventRuleCreateRequest.options:type_name -> spaceone.api.alert_manager.v1.EventRuleOptions
	13, // 6: spaceone.api.alert_manager.v1.EventRuleCreateRequest.tags:type_name -> google.protobuf.Struct
	3,  // 7: spaceone.api.alert_manager.v1.EventRuleUpdateRequest.conditions:type_name -> spaceone.api.alert_manager.v1.Condition
	0,  // 8: spaceone.api.alert_manager.v1.EventRuleUpdateRequest.conditions_policy:type_name -> spaceone.api.alert_manager.v1.ConditionsPolicy
	13, // 9: spaceone.api.alert_manager.v1.EventRuleUpdateRequest.actions:type_name -> google.protobuf.Struct
	2,  // 10: spaceone.api.alert_manager.v1.EventRuleUpdateRequest.options:type_name -> spaceone.api.alert_manager.v1.EventRuleOptions
	13, // 11: spaceone.api.alert_manager.v1.EventRuleUpdateRequest.tags:type_name -> google.protobuf.Struct
	14, // 12: spaceone.api.alert_manager.v1.EventRuleSearchQuery.query:type_name -> spaceone.api.core.v2.Query
	1,  // 13: spaceone.api.alert_manager.v1.EventRuleSearchQuery.scope:type_name -> spaceone.api.alert_manager.v1.EventRuleScope
	15, // 14: spaceone.api.alert_manager.v1.EventRuleStatQuery.query:type_name -> spaceone.api.core.v2.StatisticsQuery
	1,  // 15: spaceone.api.alert_manager.v1.EventRuleInfo.scope:type_name -> spaceone.api.alert_manager.v1.EventRuleScope
	3,  // 16: spaceone.api.alert_manager.v1.EventRuleInfo.conditions:type_name -> spaceone.api.alert_manager.v1.Condition
	0,  // 17: spaceone.api.alert_manager.v1.EventRuleInfo.conditions_policy:type_name -> spaceone.api.alert_manager.v1.ConditionsPolicy
	13, // 18: spaceone.api.alert_manager.v1.EventRuleInfo.actions:type_name -> google.protobuf.Struct
	2,  // 19: spaceone.api.alert_manager.v1.EventRuleInfo.options:type_name -> spaceone.api.alert_manager.v1.EventRuleOptions
	13, // 20: spaceone.api.alert_manager.v1.EventRuleInfo.tags:type_name -> google.protobuf.Struct
	10, // 21: spaceone.api.alert_manager.v1.EventRulesInfo.results:type_name -> spaceone.api.alert_manager.v1.EventRuleInfo
	4,  // 22: spaceone.api.alert_manager.v1.EventRule.create:input_type -> spaceone.api.alert_manager.v1.EventRuleCreateRequest
	5,  // 23: spaceone.api.alert_manager.v1.EventRule.change_order:input_type -> spaceone.api.alert_manager.v1.EventRuleChangeOrderRequest
	6,  // 24: spaceone.api.alert_manager.v1.EventRule.update:input_type -> spaceone.api.alert_manager.v1.EventRuleUpdateRequest
	7,  // 25: spaceone.api.alert_manager.v1.EventRule.delete:input_type -> spaceone.api.alert_manager.v1.EventRuleRequest
	7,  // 26: spaceone.api.alert_manager.v1.EventRule.get:input_type -> spaceone.api.alert_manager.v1.EventRuleRequest
	8,  // 27: spaceone.api.alert_manager.v1.EventRule.list:input_type -> spaceone.api.alert_manager.v1.EventRuleSearchQuery
	9,  // 28: spaceone.api.alert_manager.v1.EventRule.stat:input_type -> spaceone.api.alert_manager.v1.EventRuleStatQuery
	10, // 29: spaceone.api.alert_manager.v1.EventRule.create:output_type -> spaceone.api.alert_manager.v1.EventRuleInfo
	10, // 30: spaceone.api.alert_manager.v1.EventRule.change_order:output_type -> spaceone.api.alert_manager.v1.EventRuleInfo
	10, // 31: spaceone.api.alert_manager.v1.EventRule.update:output_type -> spaceone.api.alert_manager.v1.EventRuleInfo
	16, // 32: spaceone.api.alert_manager.v1.EventRule.delete:output_type -> google.protobuf.Empty
	10, // 33: spaceone.api.alert_manager.v1.EventRule.get:output_type -> spaceone.api.alert_manager.v1.EventRuleInfo
	11, // 34: spaceone.api.alert_manager.v1.EventRule.list:output_type -> spaceone.api.alert_manager.v1.EventRulesInfo
	13, // 35: spaceone.api.alert_manager.v1.EventRule.stat:output_type -> google.protobuf.Struct
	29, // [29:36] is the sub-list for method output_type
	22, // [22:29] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_spaceone_api_alert_manager_v1_event_rule_proto_init() }
func file_spaceone_api_alert_manager_v1_event_rule_proto_init() {
	if File_spaceone_api_alert_manager_v1_event_rule_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spaceone_api_alert_manager_v1_event_rule_proto_rawDesc), len(file_spaceone_api_alert_manager_v1_event_rule_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spaceone_api_alert_manager_v1_event_rule_proto_goTypes,
		DependencyIndexes: file_spaceone_api_alert_manager_v1_event_rule_proto_depIdxs,
		EnumInfos:         file_spaceone_api_alert_manager_v1_event_rule_proto_enumTypes,
		MessageInfos:      file_spaceone_api_alert_manager_v1_event_rule_proto_msgTypes,
	}.Build()
	File_spaceone_api_alert_manager_v1_event_rule_proto = out.File
	file_spaceone_api_alert_manager_v1_event_rule_proto_goTypes = nil
	file_spaceone_api_alert_manager_v1_event_rule_proto_depIdxs = nil
}
