/*
desc: A Job is an act of collecting external cost data through plugins. The data to collect is defined in a plugin.
*/
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Job {
    /*
    desc: Cancels a specific Job. You can manually cease a Job in run with this method.
    request_example: >-
      {
        "job_id": "job-07994c7c9021"
      }
    response_example: >-
      {
        "job_id": "job-07994c7c9021",
        "status": "CANCELED",
        "options": {
            "no_preload_cache": false,
            "start": "2021-01-01T00:00:00Z"
        },
        "total_tasks": 2,
        "remained_tasks": 2,
        "data_source_id": "ds-fcba92ca73b1",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-04-02T09:17:44.031Z",
        "updated_at": "2022-04-02T09:19:47.715Z",
        "finished_at": "2022-04-02T09:19:47.715Z",
        "changed": [
            {
                "start": "2021-01-01T00:00:00.000Z"
            }
        ]
      }
    */
    rpc cancel (JobRequest) returns (JobInfo) {
        option (google.api.http) = { post: "/cost-analysis/v1/job/{job_id}/cancel" };
    }
    /*
    desc: Gets a specific Job. Prints detailed information about the Job, including the plugin used, operation time, and `status`.
    request_example: >-
      {
        "job_id": "job-85cf2c385252"
      }
    response_example: >-
      {
        "job_id": "job-85cf2c385252",
        "status": "SUCCESS",
        "options": {
            "no_preload_cache": false,
            "start": null
        },
        "total_tasks": 1,
        "data_source_id": "ds-c96609f5afeb",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-17T16:00:08.254Z",
        "updated_at": "2022-07-17T16:01:30.637Z",
        "finished_at": "2022-07-17T16:01:30.637Z",
        "changed": [
            {
                "start": "2022-07-01T00:00:00.000Z"
            }
        ]
      }
    */
    rpc get (GetJobRequest) returns (JobInfo) {
        option (google.api.http) = { get: "/cost-analysis/v1/job/{job_id}" };
    }
    /*
    desc: Gets a list of all Jobs. You can use a query to get a filtered list of Jobs.
    request_example: >-
      {
        "query": {}
      }
    response_example: >-
      {
        "results": [
            {
                "job_id": "job-85cf2c385252",
                "status": "SUCCESS",
                "options": {
                    "start": null,
                    "no_preload_cache": false
                },
                "total_tasks": 1,
                "data_source_id": "ds-c96609f5afeb",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-07-17T16:00:08.254Z",
                "updated_at": "2022-07-17T16:01:30.637Z",
                "finished_at": "2022-07-17T16:01:30.637Z",
                "changed": [
                    {
                        "start": "2022-07-01T00:00:00.000Z"
                    }
                ]
            },
            {
                "job_id": "job-6b6765f757a9",
                "status": "SUCCESS",
                "options": {
                    "start": null,
                    "no_preload_cache": false
                },
                "total_tasks": 2,
                "data_source_id": "ds-fcba92ca73b1",
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-07-17T16:00:05.077Z",
                "updated_at": "2022-07-17T16:01:28.206Z",
                "finished_at": "2022-07-17T16:01:28.206Z",
                "changed": [
                    {
                        "start": "2022-07-01T00:00:00.000Z"
                    }
                ]
            }
        ],
        "total_count": 372
      }
    */
    rpc list (JobQuery) returns (JobsInfo) {
        option (google.api.http) = {
            get: "/cost-analysis/v1/jobs"
            additional_bindings {
                post: "/cost-analysis/v1/jobs/search"
            }
        };
    }
    rpc stat (JobStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/jobs/stat" };
    }
}

message JobRequest {
    // is_required: true
    string job_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetJobRequest {
    // is_required: true
    string job_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message JobQuery {
    enum Status {
        SCOPE_NONE = 0;
        IN_PROGRESS = 1;
        SUCCESS = 2;
        FAILURE = 3;
        TIMEOUT = 4;
        CANCELED = 5;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string job_id = 2;
    // is_required: false
    Status status = 3;
    // is_required: false
    string data_source_id = 11;
    // is_required: true
    string domain_id = 12;
}

message ChangedInfo {
    string start = 1;
    string end = 2;
    google.protobuf.Struct filter = 3;
}

message JobInfo {
    enum Status {
        SCOPE_NONE = 0;
        IN_PROGRESS = 1;
        SUCCESS = 2;
        FAILURE = 3;
        TIMEOUT = 4;
        CANCELED = 5;
    }

    string job_id = 1;
    Status status = 2;
    google.protobuf.Struct options = 3;
    string error_code = 4;
    string error_message = 5;
    int32 total_tasks = 6;
    int32 remained_tasks = 7;
    string data_source_id = 11;
    string domain_id = 12;
    string created_at = 21;
    string updated_at = 22;
    string finished_at = 23;
    repeated ChangedInfo changed = 24;
}

message JobsInfo {
    repeated JobInfo results = 1;
    int32 total_count = 2;
}

message JobStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}