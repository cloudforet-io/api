syntax = "proto3";

package spaceone.api.cost_analysis.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service CostQuerySet {
    rpc create (CreateCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = { post: "/cost-analysis/v1/cost-query-sets" };
    }
    rpc update (UpdateCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/cost-query-set/{cost_query_set_id}" };
    }
    rpc delete (CostQuerySetRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/cost-analysis/v1/cost-query-set/{cost_query_set_id}" };
    }
    rpc get (GetCostQuerySetRequest) returns (CostQuerySetInfo) {
        option (google.api.http) = { get: "/cost-analysis/v1/cost-query-set/{cost_query_set_id}" };
    }
    rpc list (CostQuerySetQuery) returns (CostQuerySetsInfo) {
        option (google.api.http) = {
            get: "/cost-analysis/v1/cost-query-sets"
            additional_bindings {
                post: "/cost-analysis/v1/cost-query-sets/search"
            }
        };
    }
    rpc stat (CostQuerySetStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/cost-query-sets/stat" };
    }
}

message CreateCostQuerySetRequest {
    // is_required: true
    string name = 1;
    // is_required: true
    google.protobuf.Struct options = 3;
    // is_required: false
    google.protobuf.Struct tags = 4;
    // is_required: true
    string domain_id = 11;
}

message UpdateCostQuerySetRequest {
    // is_required: true
    string cost_query_set_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    google.protobuf.Struct options = 3;
    // is_required: false
    google.protobuf.Struct tags = 4;
    // is_required: true
    string domain_id = 11;
}

message CostQuerySetRequest {
    // is_required: true
    string cost_query_set_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetCostQuerySetRequest {
    // is_required: true
    string cost_query_set_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message CostQuerySetQuery {
    enum Scope {
        NONE = 0;
        PUBLIC = 1;
        PRIVATE = 2;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string cost_query_set_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string user_id = 4;
    // is_required: true
    string domain_id = 11;
}

message CostQuerySetInfo {
    enum Scope {
        NONE = 0;
        PUBLIC = 1;
        PRIVATE = 2;
    }

    string cost_query_set_id = 1;
    string name = 2;
    google.protobuf.Struct options = 3;
    google.protobuf.Struct tags = 4;
    string user_id = 11;
    string domain_id = 12;
    string created_at = 21;
    string updated_at = 22;
}

message CostQuerySetsInfo {
    repeated CostQuerySetInfo results = 1;
    int32 total_count = 2;
}

message CostQuerySetStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}