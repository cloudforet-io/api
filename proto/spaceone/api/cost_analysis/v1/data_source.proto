/*
desc: A DataSource is a plugin instance collecting external cost data. External cost data consists of `raw data` and the plugin information used for collection.
*/
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";
import "spaceone/api/cost_analysis/v1/job.proto";


service DataSource {
    /*
    desc: Registers a DataSource with information of the plugin to use. Information of the plugin includes `version`, `provider`, and `upgrade_mode`.
    request_example: >-
      {
        "name": "AWS HyperBilling Data Source test",
        "data_source_type": "EXTERNAL",
        "plugin_info": {
            "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
            "version": "1.0.4",
            "options": {},
            "metadata": {
                "data_source_rules": [
                    {
                        "conditions_policy": "ALWAYS",
                        "options": {
                            "stop_processing": true
                        },
                        "actions": {
                            "match_service_account": {
                                "source": "account",
                                "target": "data.account_id"
                            }
                        },
                        "conditions": [],
                        "tags": {},
                        "name": "match_service_account"
                    }
                ]
            },
            "secret_id": "secret-ca134639483",
            "upgrade_mode": "AUTO"
        },
        "tags": {"a": "b"}
      }
    response_example: >-
      {
        "data_source_id": "ds-085d1e872789",
        "name": "AWS HyperBilling Data Source test",
        "state": "ENABLED",
        "data_source_type": "EXTERNAL",
        "plugin_info": {
            "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
            "version": "1.0.4",
            "options": {},
            "metadata": {
                "data_source_rules": [
                    {
                        "options": {
                            "stop_processing": true
                        },
                        "actions": {
                            "match_service_account": {
                                "source": "account",
                                "target": "data.account_id"
                            }
                        },
                        "domain_id": "domain-58010aa2e451",
                        "conditions": [],
                        "name": "match_service_account",
                        "tags": {},
                        "data_source_id": "ds-085d1e872789",
                        "conditions_policy": "ALWAYS"
                    }
                ]
            },
            "secret_id": "secret-ca134639483",
            "upgrade_mode": "AUTO"
        },
        "template": {},
        "tags": {
            "a": "b"
        },
        "cost_tag_keys": [
            "Name",
            "Environment",
            "Role",
            "Service"
        ],
        "cost_additional_info_keys": [
            "raw_usage_type"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T10:58:36.080Z"
      }
    */
    rpc register (RegisterDataSourceRequest) returns (DataSourceInfo) {
        option (google.api.http) = { post: "/cost-analysis/v1/data-sources" };
    }
    /*
    desc: Updates a specific DataSource. You can make changes in DataSource settings, including `name` and `tags`.
    request_example: >-
      {
        "data_source_id": "ds-085d1e872789",
        "name": "AWS HyperBilling Data Source test2",
        "tags": {
            "type": "test"
        }
      }
    response_example: >-
      {
        "data_source_id": "ds-085d1e872789",
        "name": "AWS HyperBilling Data Source test2",
        "state": "ENABLED",
        "data_source_type": "EXTERNAL",
        "plugin_info": {
            "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
            "version": "1.0.4",
            "options": {},
            "metadata": {
                "data_source_rules": [
                    {
                        "tags": {},
                        "name": "match_service_account",
                        "conditions_policy": "ALWAYS",
                        "actions": {
                            "match_service_account": {
                                "target": "data.account_id",
                                "source": "account"
                            }
                        },
                        "options": {
                            "stop_processing": true
                        },
                        "conditions": []
                    }
                ]
            },
            "secret_id": "secret-dca385e85a27",
            "upgrade_mode": "AUTO"
        },
        "template": {},
        "tags": {
            "type": "test"
        },
        "cost_tag_keys": [
            "Name",
            "Environment",
            "Role",
            "Service"
        ],
        "cost_additional_info_keys": [
            "raw_usage_type"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T10:58:36.080Z"
      }
    */
    rpc update (UpdateDataSourceRequest) returns (DataSourceInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/data-source/{data_source_id}" };
    }
    /*
    desc: Updates the plugin of a specific DataSource. This method resets the plugin data in the DataSource to update the `metadata`.
    request_example: >-
      {
        "data_source_id": "ds-085d1e872789",
        "version": "1.0.4",
        "options": {},
        "upgrade_mode": "AUTO"
      }
    response_example: >-
      {
        "data_source_id": "ds-085d1e872789",
        "name": "AWS HyperBilling Data Source test2",
        "state": "DISABLED",
        "data_source_type": "EXTERNAL",
        "plugin_info": {
            "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
            "version": "1.0.4",
            "options": {},
            "metadata": {
                "data_source_rules": [
                    {
                        "tags": {},
                        "actions": {
                            "match_service_account": {
                                "source": "account",
                                "target": "data.account_id"
                            }
                        },
                        "options": {
                            "stop_processing": true
                        },
                        "conditions_policy": "ALWAYS",
                        "name": "match_service_account",
                        "conditions": []
                    }
                ]
            },
            "secret_id": "secret-dca385e85a27",
            "upgrade_mode": "AUTO"
        },
        "template": {},
        "tags": {
            "type": "test"
        },
        "cost_tag_keys": [
            "Name",
            "Environment",
            "Role",
            "Service"
        ],
        "cost_additional_info_keys": [
            "raw_usage_type"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T10:58:36.080Z"
      }
    */
    rpc update_plugin (UpdateDataSourcePluginRequest) returns (DataSourceInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/data-source/{data_source_id}/plugin" };
    }
    /*
    desc: Verifies the plugin of a specific DataSource. This method validates the plugin data, `version` and `endpoint`.
    request_example: >-
      {
        "data_source_id": "ds-085d1e872789"
      }
    */
    rpc verify_plugin (DataSourceRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { post: "/cost-analysis/v1/data-source/{data_source_id}/plugin/verify" };
    }
    /*
    desc: Enables a specific DataSource. By enabling a DataSource, you can communicate with an external cloud service via the plugin.
    request_example: >-
      {
        "data_source_id": "ds-085d1e872789"
      }
    response_example: >-
      {
        "data_source_id": "ds-085d1e872789",
        "name": "AWS HyperBilling Data Source test2",
        "state": "ENABLED",
        "data_source_type": "EXTERNAL",
        "plugin_info": {
            "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
            "version": "1.0.4",
            "options": {},
            "metadata": {
                "data_source_rules": [
                    {
                        "actions": {
                            "match_service_account": {
                                "target": "data.account_id",
                                "source": "account"
                            }
                        },
                        "conditions_policy": "ALWAYS",
                        "conditions": [],
                        "options": {
                            "stop_processing": true
                        },
                        "name": "match_service_account",
                        "tags": {}
                    }
                ]
            },
            "secret_id": "secret-dca385e85a27",
            "upgrade_mode": "AUTO"
        },
        "template": {},
        "tags": {
            "type": "test"
        },
        "cost_tag_keys": [
            "Name",
            "Environment",
            "Role",
            "Service"
        ],
        "cost_additional_info_keys": [
            "raw_usage_type"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T10:58:36.080Z"
      }
    */
    rpc enable (DataSourceRequest) returns (DataSourceInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/data-source/{data_source_id}/enable" };
    }
    /*
    desc: Disables a specific DataSource. By disabling a DataSource, you can block communication with an external cloud service via the plugin.
    request_example: >-
      {
        "data_source_id": "ds-085d1e872789"
      }
    response_example: >-
      {
        "data_source_id": "ds-085d1e872789",
        "name": "AWS HyperBilling Data Source test2",
        "state": "DISABLED",
        "data_source_type": "EXTERNAL",
        "plugin_info": {
            "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
            "version": "1.0.4",
            "options": {},
            "metadata": {
                "data_source_rules": [
                    {
                        "name": "match_service_account",
                        "options": {
                            "stop_processing": true
                        },
                        "conditions_policy": "ALWAYS",
                        "conditions": [],
                        "actions": {
                            "match_service_account": {
                                "source": "account",
                                "target": "data.account_id"
                            }
                        },
                        "tags": {}
                    }
                ]
            },
            "secret_id": "secret-dca385e85a27",
            "upgrade_mode": "AUTO"
        },
        "template": {},
        "tags": {
            "type": "test"
        },
        "cost_tag_keys": [
            "Name",
            "Environment",
            "Role",
            "Service"
        ],
        "cost_additional_info_keys": [
            "raw_usage_type"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T10:58:36.080Z"
      }
    */
    rpc disable (DataSourceRequest) returns (DataSourceInfo) {
        option (google.api.http) = { put: "/cost-analysis/v1/data-source/{data_source_id}/disable" };
    }
    /*
    desc: Deregisters and deletes a specific DataSource. You must specify the `data_source_id` of the DataSource to deregister.
    request_example: >-
      {
        "data_source_id": "ds-085d1e872789"
      }
    */
    rpc deregister (DataSourceRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/cost-analysis/v1/data-source/{data_source_id}" };
    }
    /*
    desc: Manually runs a specific DataSource to collect the cost data. This method is to get up-to-date cost data.
    request_example: >-
      {
        "data_source_id": "ds-c96609f5afeb"
      }
    response_example: >-
      {
        "job_id": "job-ba2598167785",
        "status": "IN_PROGRESS",
        "options": {
            "no_preload_cache": false,
            "start": null
        },
        "total_tasks": 1,
        "remained_tasks": 1,
        "data_source_id": "ds-c96609f5afeb",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-19T11:16:59.923Z",
        "updated_at": "2022-07-19T11:16:59.923Z",
        "changed": [
            {
                "start": "2022-07-01T00:00:00.000Z"
            }
        ]
      }
    */
    rpc sync (SyncDataSourceRequest) returns (spaceone.api.cost_analysis.v1.JobInfo) {
        option (google.api.http) = { post: "/cost-analysis/v1/data-source/{data_source_id}/sync" };
    }
    /*
    desc: Gets a specific DataSource. Prints detailed information about the DataSource, including `name`, `state`, and `plugin_info`.
    request_example: >-
      {
        "data_source_id": "ds-fcba92ca73b1"
      }
    response_example: >-
      {
        "data_source_id": "ds-fcba92ca73b1",
        "name": "AWS HyperBilling Data Source",
        "state": "ENABLED",
        "data_source_type": "EXTERNAL",
        "plugin_info": {
            "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
            "version": "1.0.4",
            "options": {},
            "metadata": {
                "data_source_rules": [
                    {
                        "conditions_policy": "ALWAYS",
                        "options": {
                            "stop_processing": true
                        },
                        "tags": {},
                        "conditions": [],
                        "name": "match_service_account",
                        "actions": {
                            "match_service_account": {
                                "source": "account",
                                "target": "data.account_id"
                            }
                        }
                    }
                ]
            },
            "secret_id": "secret-dca385e85a27",
            "upgrade_mode": "AUTO"
        },
        "template": {},
        "tags": {
            "a": "b"
        },
        "cost_tag_keys": [
            "Name",
            "Environment",
            "Role",
            "Service"
        ],
        "cost_additional_info_keys": [
            "raw_usage_type"
        ],
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-03-30T02:21:28.756Z",
        "last_synchronized_at": "2022-07-17T16:00:05.077Z"
      }
    */
    rpc get (GetDataSourceRequest) returns (DataSourceInfo) {
        option (google.api.http) = { get: "/cost-analysis/v1/data-source/{data_source_id}" };
    }
    /*
    desc: Gets a list of all DataSources. You can use a query to get a filtered list of DataSources.
    request_example: >-
      {
        "query": {}
      }
    response_example: >-
      {
        "results": [
            {
                "data_source_id": "ds-fcba92ca73b1",
                "name": "AWS HyperBilling Data Source",
                "state": "ENABLED",
                "data_source_type": "EXTERNAL",
                "plugin_info": {
                    "plugin_id": "plugin-aws-hyperbilling-cost-datasource",
                    "version": "1.0.4",
                    "options": {},
                    "metadata": {
                        "data_source_rules": [
                            {
                                "name": "match_service_account",
                                "conditions": [],
                                "actions": {
                                    "match_service_account": {
                                        "source": "account",
                                        "target": "data.account_id"
                                    }
                                },
                                "conditions_policy": "ALWAYS",
                                "tags": {},
                                "options": {
                                    "stop_processing": true
                                }
                            }
                        ]
                    },
                    "secret_id": "secret-dca385e85a27",
                    "upgrade_mode": "AUTO"
                },
                "template": {},
                "tags": {
                    "a": "b"
                },
                "cost_tag_keys": [
                    "Name",
                    "Environment",
                    "Role",
                    "Service"
                ],
                "cost_additional_info_keys": [
                    "raw_usage_type"
                ],
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-03-30T02:21:28.756Z",
                "last_synchronized_at": "2022-07-17T16:00:05.077Z"
            },
            {
                "data_source_id": "ds-c96609f5afeb",
                "name": "MZC HyperBilling Data Source",
                "state": "ENABLED",
                "data_source_type": "EXTERNAL",
                "plugin_info": {
                    "plugin_id": "plugin-mzc-hyperbilling-cost-datasource",
                    "version": "1.0.3",
                    "options": {},
                    "metadata": {
                        "data_source_rules": [
                            {
                                "conditions": [],
                                "options": {
                                    "stop_processing": true
                                },
                                "conditions_policy": "ALWAYS",
                                "name": "match_service_account",
                                "tags": {},
                                "actions": {
                                    "match_service_account": {
                                        "source": "account",
                                        "target": "data.project_id"
                                    }
                                }
                            }
                        ]
                    },
                    "secret_id": "secret-354d142229e5",
                    "upgrade_mode": "AUTO"
                },
                "template": {},
                "tags": {},
                "cost_tag_keys": [],
                "cost_additional_info_keys": [],
                "domain_id": "domain-58010aa2e451",
                "created_at": "2022-04-13T05:34:54.223Z",
                "last_synchronized_at": "2022-07-17T16:00:08.254Z"
            }
        ],
        "total_count": 2
      }
    */
    rpc list (DataSourceQuery) returns (DataSourcesInfo) {
        option (google.api.http) = {
            get: "/cost-analysis/v1/data-sources"
            additional_bindings {
                post: "/cost-analysis/v1/data-sources/search"
            }
        };
    }
    rpc stat (DataSourceStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/cost-analysis/v1/data-sources/stat" };
    }
}

message PluginInfo {
    enum UpgradeMode {
        NONE = 0;
        MANUAL = 1;
        AUTO = 2;
    }

    string plugin_id = 1;
    string version = 2;
    google.protobuf.Struct options = 3;
    google.protobuf.Struct metadata = 4;
    google.protobuf.Struct secret_data = 5;
    string schema = 6;
    string secret_id = 7;
    UpgradeMode upgrade_mode = 8;
}

message RegisterDataSourceRequest {
    enum DataSourceType {
        NONE = 0;
        LOCAL = 1;
        EXTERNAL = 2;
    }

    // is_required: true
    string name = 1;
    // is_required: true
    DataSourceType data_source_type = 2;
    // is_required: false
    string provider = 3;
    // is_required: false
    google.protobuf.Struct template = 4;
    // is_required: false
    PluginInfo plugin_info = 5;
    // is_required: false
    google.protobuf.Struct tags = 6;
    // is_required: true
    string domain_id = 11;
}

message UpdateDataSourceRequest {
    // is_required: true
    string data_source_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    google.protobuf.Struct template = 3;
    // is_required: false
    google.protobuf.Struct tags = 4;
    // is_required: true
    string domain_id = 11;
}

message UpdateDataSourcePluginRequest {
    enum UpgradeMode {
        NONE = 0;
        MANUAL = 1;
        AUTO = 2;
    }

    // is_required: true
    string data_source_id = 1;
    // is_required: false
    string version = 2;
    // is_required: false
    google.protobuf.Struct options = 3;
    // is_required: false
    UpgradeMode upgrade_mode = 4;
    // is_required: true
    string domain_id = 11;
}

message SyncDataSourceRequest {
    // is_required: true
    string data_source_id = 1;
    // is_required: false
    string start = 2;
    // is_required: false
    bool no_preload_cache = 3;
    // is_required: true
    string domain_id = 11;
}

message DataSourceRequest {
    // is_required: true
    string data_source_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetDataSourceRequest {
    // is_required: true
    string data_source_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message DataSourceQuery {
    enum DataSourceType {
        NONE = 0;
        LOCAL = 1;
        EXTERNAL = 2;
    }

    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string data_source_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string state = 4;
    // is_required: false
    DataSourceType data_source_type = 5;
    // is_required: false
    string provider = 6;
    // is_required: true
    string domain_id = 11;
}

message DataSourceInfo {
    enum State {
        STATE_NONE = 0;
        ENABLED = 1;
        DISABLED = 2;
    }

    enum DataSourceType {
        TYPE_NONE = 0;
        LOCAL = 1;
        EXTERNAL = 2;
    }

    string data_source_id = 1;
    string name = 2;
    State state = 3;
    DataSourceType data_source_type = 4;
    string provider = 5;
    PluginInfo plugin_info = 6;
    google.protobuf.Struct template = 7;
    google.protobuf.Struct tags = 8;
    repeated string cost_tag_keys = 9;
    repeated string cost_additional_info_keys = 10;
    string domain_id = 11;
    string created_at = 21;
    string last_synchronized_at = 22;
}

message DataSourcesInfo {
    repeated DataSourceInfo results = 1;
    int32 total_count = 2;
}

message DataSourceStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}
