// A Cost is a resource of raw cost data collected by the cost_analysis.DataSource.
syntax = "proto3";

package spaceone.api.cost_analysis.v1;

option go_package = "github.com/cloudforet-io/api/dist/go/spaceone/api/cost_analysis/v1";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service Cost {
    
    // Creates a new Cost. When creating a Cost, if the parameter `provider` is not entered, the default value of the parameter will be the provider information of the DataSource which collected the raw data of the Cost from the provider. The parameter `billed_at` is the data of when the cost is billed. While the DataSource collects the cost data, if the `billed_at` data does not exist, the value will be replaced with the `created_at` data indicating when the Cost is created. If the cost data collected is based on USD, the Cost is created without the currency exchange.
    rpc create (CreateCostRequest) returns (CostInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost/create"
            body: "*"
        };
    }
    
    // Deletes a specific Cost. You must specify the `cost_id` of the Cost to delete.
    rpc delete (CostRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost/delete"
            body: "*"
        };
    }
    
    // Gets a specific Cost. Prints detailed information about the Cost, including  `region_code` and `account`.
    rpc get (GetCostRequest) returns (CostInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost/get"
            body: "*"
        };
    }
    
    // Gets a list of all Costs. You can use a query to get a filtered list of Costs.
    rpc list (CostQuery) returns (CostsInfo) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost/list"
            body: "*"
        };
    }
    
    // Gets the Cost information of specific `product`s based on the time granularity: `DAILY`, `MONTHLY`, or `ACCUMULATED`. For `DAILY` granularity, this method can get the Cost data of at most 31 days. For `MONTHLY` or `ACCUMULATED` granularity, this method can get the Cost data of at most 12 months.
    rpc analyze (CostAnalyzeQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost/analyze"
            body: "*"
        };
    }
    rpc analyze_v2 (CostAnalyzeV2Query) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost/analyze-v2"
            body: "*"
        };
    }
    rpc stat (CostStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = {
            post: "/cost-analysis/v1/cost/stat"
            body: "*"
        };
    }
}

//{
//        "original_cost": 4.50528e-08,
//        "original_currency": "USD",
//        "usd_cost": 4.50528e-08,
//        "usage_quantity": 4.11e-07,
//        "provider": "aws",
//        "region_code": "ap-northeast-1",
//        "product": "AWSDataTransfer",
//        "account": "722069360300",
//        "usage_type": "data-transfer.out",
//        "additional_info": {
//            "raw_usage_type": "APN1-DataTransfer-Out-Bytes"
//        },
//        "data_source_id": "ds-fcba92ca73b1"
//}
message CreateCostRequest {
    double original_cost = 1;
    string original_currency = 2;
    // +optional
    double usd_cost = 3;
    // +optional
    double usage_quantity = 4;
    // +optional
    string provider = 5;
    // +optional
    string region_code = 6;
    // +optional
    string category = 7;
    // +optional
    string product = 8;
    // +optional
    string account = 9;
    // +optional
    string usage_type = 10;
    // +optional
    string resource_group = 11;
    // +optional
    string resource = 12;
    // +optional
    google.protobuf.Struct tags = 21;
    // +optional
    google.protobuf.Struct additional_info = 22;
    // +optional
    string service_account_id = 31;
    // +optional
    string project_id = 32;
    string data_source_id = 33;
    string domain_id = 34;
    // +optional
    string billed_at = 41;
}

//{
//    "cost_id": "cost-2ad052ed03d7"
//}
message CostRequest {
    string cost_id = 1;
    string domain_id = 2;
}

//{
//    "cost_id": "cost-2ad052ed03d7"
//}
message GetCostRequest {
    string cost_id = 1;
    string domain_id = 2;
    // +optional
    repeated string only = 3;
}

//{
//    "query": {}
//}
message CostQuery {
    // +optional
    spaceone.api.core.v1.Query query = 1;
    // +optional
    string cost_id = 2;
    // +optional
    string original_currency = 3;
    // +optional
    string provider = 4;
    // +optional
    string region_code = 5;
    // +optional
    string region_key = 6;
    // +optional
    string category = 7;
    // +optional
    string product = 8;
    // +optional
    string account = 9;
    // +optional
    string usage_type = 10;
    // +optional
    string resource_group = 11;
    // +optional
    string resource = 12;
    // +optional
    string service_account_id = 21;
    // +optional
    string project_id = 22;
    // +optional
    string data_source_id = 23;
    string domain_id = 24;
}

//{
//        "cost_id": "cost-c5aae7712ec9",
//        "usd_cost": 4.50528e-08,
//        "original_currency": "USD",
//        "original_cost": 4.50528e-08,
//        "usage_quantity": 4.11e-07,
//        "provider": "aws",
//        "region_code": "ap-northeast-1",
//        "product": "AWSDataTransfer",
//        "account": "722069360300",
//        "usage_type": "data-transfer.out",
//        "tags": {},
//        "additional_info": {
//            "raw_usage_type": "APN1-DataTransfer-Out-Bytes"
//        },
//        "data_source_id": "ds-fcba92ca73b1",
//        "domain_id": "domain-58010aa2e451",
//        "billed_at": "2022-07-19T09:44:27.326Z",
//        "created_at": "2022-07-19T09:44:27.373Z"
//}
message CostInfo {
    string cost_id = 1;
    double usd_cost = 2;
    string original_currency = 3;
    double original_cost = 4;
    double usage_quantity = 5;
    string provider = 6;
    string region_code = 7;
    string region_key = 8;
    string category = 9;
    string product = 10;
    string account = 11;
    string usage_type = 12;
    string usage_unit = 13;
    string resource = 14;
    string resource_group = 15;
    google.protobuf.Struct tags = 21;
    google.protobuf.Struct additional_info = 22;
    string service_account_id = 31;
    string project_id = 32;
    string data_source_id = 33;
    string domain_id = 34;
    string billed_at = 41;
    string created_at = 42;
}

//{
//        "results": [
//            {
//                "cost_id": "cost-2ad052ed03d7",
//                "usd_cost": 4.50528e-08,
//                "original_currency": "USD",
//                "original_cost": 4.50528e-08,
//                "usage_quantity": 4.11e-07,
//                "provider": "aws",
//                "region_code": "ap-northeast-1",
//                "product": "AWSDataTransfer",
//                "account": "722069360300",
//                "usage_type": "data-transfer.out",
//                "tags": {},
//                "additional_info": {
//                    "raw_usage_type": "APN1-DataTransfer-Out-Bytes"
//                },
//                "data_source_id": "ds-fcba92ca73b1",
//                "domain_id": "domain-58010aa2e451",
//                "billed_at": "2021-01-01T00:00:00.000Z",
//                "created_at": "2022-04-06T13:49:39.669Z"
//            },
//            {
//                "cost_id": "cost-1d5e1b0dbf82",
//                "usd_cost": 1.04e-05,
//                "original_currency": "USD",
//                "original_cost": 1.04e-05,
//                "usage_quantity": 26.0,
//                "provider": "aws",
//                "region_code": "ap-northeast-1",
//                "product": "AWSQueueService",
//                "account": "722069360300",
//                "tags": {},
//                "additional_info": {
//                    "raw_usage_type": "APN1-Requests-Tier1"
//                },
//                "data_source_id": "ds-fcba92ca73b1",
//                "domain_id": "domain-58010aa2e451",
//                "billed_at": "2021-01-01T00:00:00.000Z",
//                "created_at": "2022-04-06T13:49:39.675Z"
//            }
//        ],
//        "total_count": 307066
//}
message CostsInfo {
    repeated CostInfo results = 1;
    int32 total_count = 2;
}

//{
//    "granularity": "MONTHLY",
//    "start": "2022-05",
//    "end": "2022-07",
//    "group_by": ["product"],
//    "filter": [],
//    "limit": 15,
//    "include_others": true,
//    "domain_id": "domain-58010aa2e451"
//}
message CostAnalyzeQuery {
    enum Granularity {
        UNIT_NONE = 0;
        ACCUMULATED = 1;
        DAILY = 2;
        MONTHLY = 3;
        YEARLY = 4;
    }

    Granularity granularity = 1;
    string start = 2;
    string end = 3;
    // +optional
    repeated string group_by = 4;
    // +optional
    google.protobuf.ListValue filter = 5;
    // +optional
    int32 limit = 6;
    // +optional
    spaceone.api.core.v1.Page page = 7;
    // +optional
    spaceone.api.core.v1.Sort sort = 8;
    // +optional
    bool include_usage_quantity = 9;
    // +optional
    bool include_others = 10;
    string domain_id = 11;

}

message CostAnalyzeV2Query {
    spaceone.api.core.v1.TimeSeriesAnalyzeQuery query = 1;
    string domain_id = 2;
}

message CostStatQuery {
    spaceone.api.core.v1.StatisticsQuery query = 1;
    string domain_id = 2;
}
