syntax = "proto3";

package spaceone.api.inventory.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "spaceone/api/core/v1/query.proto";


service ResourceGroup {
    rpc create (CreateResourceGroupRequest) returns (ResourceGroupInfo) {
        option (google.api.http) = { post: "/inventory/v1/resource-groups" };
    }
    rpc update (UpdateResourceGroupRequest) returns (ResourceGroupInfo) {
        option (google.api.http) = { put: "/inventory/v1/resource-group/{resource_group_id}" };
    }
    rpc delete (ResourceGroupRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { delete: "/inventory/v1/resource-group/{resource_group_id}" };
    }
    rpc get (GetResourceGroupRequest) returns (ResourceGroupInfo) {
        option (google.api.http) = { get: "/inventory/v1/resource-group/{resource_group_id}" };
    }
    rpc list (ResourceGroupQuery) returns (ResourceGroupsInfo) {
        option (google.api.http) = {
            get: "/inventory/v1/resource-groups"
            additional_bindings {
                post: "/inventory/v1/resource-groups/search"
            }
        };
    }
    rpc stat (ResourceGroupStatQuery) returns (google.protobuf.Struct) {
        option (google.api.http) = { post: "/inventory/v1/resource-groups/stat" };
    }
}

message Resource {
    // is_required: true
    string resource_type = 1;
    // is_required: true
    google.protobuf.ListValue filter = 2;
}

message CreateResourceGroupRequest {
    // is_required: true
    string name = 1;
    // is_required: true
    repeated Resource resources = 2;
    // is_required: false
    google.protobuf.Struct options = 3;
    // is_required: false
    google.protobuf.Struct tags = 4;

    // is_required: true
    string project_id = 11;
    // is_required: true
    string domain_id = 12;
}

message UpdateResourceGroupRequest {
    // is_required: true
    string resource_group_id = 1;
    // is_required: false
    string name = 2;
    // is_required: false
    repeated Resource resources = 3;
    // is_required: false
    google.protobuf.Struct options = 4;
    // is_required: false
    google.protobuf.Struct tags = 5;

    // is_required: false
    bool release_project = 11;
    // is_required: false
    string project_id = 12;
    // is_required: true
    string domain_id = 13;
}

message ResourceGroupRequest {
    // is_required: true
    string resource_group_id = 1;
    // is_required: true
    string domain_id = 2;
}

message GetResourceGroupRequest {
    // is_required: true
    string resource_group_id = 1;
    // is_required: true
    string domain_id = 2;
    // is_required: false
    repeated string only = 3;
}

message ResourceGroupQuery {
    // is_required: false
    spaceone.api.core.v1.Query query = 1;
    // is_required: false
    string resource_group_id = 2;
    // is_required: false
    string name = 3;
    // is_required: false
    string project_id = 4;
    // is_required: true
    string domain_id = 5;
}

message ResourceGroupInfo {
    string resource_group_id = 1;
    string name = 2;
    repeated Resource resources = 3;
    google.protobuf.Struct options = 4;
    google.protobuf.Struct tags = 5;
    string project_id = 6;
    string domain_id = 7;
    google.protobuf.Timestamp created_at = 8;
}

message ResourceGroupsInfo {
    repeated ResourceGroupInfo results = 1;
    int32 total_count = 2;
}

message ResourceGroupStatQuery {
    // is_required: true
    spaceone.api.core.v1.StatisticsQuery query = 1;
    // is_required: true
    string domain_id = 2;
}
